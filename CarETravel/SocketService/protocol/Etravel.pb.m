// Generated by the protocol buffer compiler.  DO NOT EDIT!

#import "Etravel.pb.h"

@implementation EtravelRoot
static PBExtensionRegistry* extensionRegistry = nil;
+ (PBExtensionRegistry*) extensionRegistry {
  return extensionRegistry;
}

+ (void) initialize {
  if (self == [EtravelRoot class]) {
    PBMutableExtensionRegistry* registry = [PBMutableExtensionRegistry registry];
    [self registerAllExtensions:registry];
    extensionRegistry = [registry retain];
  }
}
+ (void) registerAllExtensions:(PBMutableExtensionRegistry*) registry {
}
@end

@interface HeartReq ()
@property (retain) NSString* sid;
@end

@implementation HeartReq

- (BOOL) hasSid {
  return !!hasSid_;
}
- (void) setHasSid:(BOOL) value {
  hasSid_ = !!value;
}
@synthesize sid;
- (void) dealloc {
  self.sid = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.sid = @"";
  }
  return self;
}
static HeartReq* defaultHeartReqInstance = nil;
+ (void) initialize {
  if (self == [HeartReq class]) {
    defaultHeartReqInstance = [[HeartReq alloc] init];
  }
}
+ (HeartReq*) defaultInstance {
  return defaultHeartReqInstance;
}
- (HeartReq*) defaultInstance {
  return defaultHeartReqInstance;
}
- (BOOL) isInitialized {
  if (!self.hasSid) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasSid) {
    [output writeString:1 value:self.sid];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasSid) {
    size += computeStringSize(1, self.sid);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (HeartReq*) parseFromData:(NSData*) data {
  return (HeartReq*)[[[HeartReq builder] mergeFromData:data] build];
}
+ (HeartReq*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (HeartReq*)[[[HeartReq builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (HeartReq*) parseFromInputStream:(NSInputStream*) input {
  return (HeartReq*)[[[HeartReq builder] mergeFromInputStream:input] build];
}
+ (HeartReq*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (HeartReq*)[[[HeartReq builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (HeartReq*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (HeartReq*)[[[HeartReq builder] mergeFromCodedInputStream:input] build];
}
+ (HeartReq*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (HeartReq*)[[[HeartReq builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (HeartReq_Builder*) builder {
  return [[[HeartReq_Builder alloc] init] autorelease];
}
+ (HeartReq_Builder*) builderWithPrototype:(HeartReq*) prototype {
  return [[HeartReq builder] mergeFrom:prototype];
}
- (HeartReq_Builder*) builder {
  return [HeartReq builder];
}
@end

@interface HeartReq_Builder()
@property (retain) HeartReq* result;
@end

@implementation HeartReq_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[HeartReq alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (HeartReq_Builder*) clear {
  self.result = [[[HeartReq alloc] init] autorelease];
  return self;
}
- (HeartReq_Builder*) clone {
  return [HeartReq builderWithPrototype:result];
}
- (HeartReq*) defaultInstance {
  return [HeartReq defaultInstance];
}
- (HeartReq*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (HeartReq*) buildPartial {
  HeartReq* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (HeartReq_Builder*) mergeFrom:(HeartReq*) other {
  if (other == [HeartReq defaultInstance]) {
    return self;
  }
  if (other.hasSid) {
    [self setSid:other.sid];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (HeartReq_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (HeartReq_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setSid:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasSid {
  return result.hasSid;
}
- (NSString*) sid {
  return result.sid;
}
- (HeartReq_Builder*) setSid:(NSString*) value {
  result.hasSid = YES;
  result.sid = value;
  return self;
}
- (HeartReq_Builder*) clearSid {
  result.hasSid = NO;
  result.sid = @"";
  return self;
}
@end

@interface HeartRes ()
@property (retain) NSString* sid;
@end

@implementation HeartRes

- (BOOL) hasSid {
  return !!hasSid_;
}
- (void) setHasSid:(BOOL) value {
  hasSid_ = !!value;
}
@synthesize sid;
- (void) dealloc {
  self.sid = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.sid = @"";
  }
  return self;
}
static HeartRes* defaultHeartResInstance = nil;
+ (void) initialize {
  if (self == [HeartRes class]) {
    defaultHeartResInstance = [[HeartRes alloc] init];
  }
}
+ (HeartRes*) defaultInstance {
  return defaultHeartResInstance;
}
- (HeartRes*) defaultInstance {
  return defaultHeartResInstance;
}
- (BOOL) isInitialized {
  if (!self.hasSid) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasSid) {
    [output writeString:1 value:self.sid];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasSid) {
    size += computeStringSize(1, self.sid);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (HeartRes*) parseFromData:(NSData*) data {
  return (HeartRes*)[[[HeartRes builder] mergeFromData:data] build];
}
+ (HeartRes*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (HeartRes*)[[[HeartRes builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (HeartRes*) parseFromInputStream:(NSInputStream*) input {
  return (HeartRes*)[[[HeartRes builder] mergeFromInputStream:input] build];
}
+ (HeartRes*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (HeartRes*)[[[HeartRes builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (HeartRes*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (HeartRes*)[[[HeartRes builder] mergeFromCodedInputStream:input] build];
}
+ (HeartRes*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (HeartRes*)[[[HeartRes builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (HeartRes_Builder*) builder {
  return [[[HeartRes_Builder alloc] init] autorelease];
}
+ (HeartRes_Builder*) builderWithPrototype:(HeartRes*) prototype {
  return [[HeartRes builder] mergeFrom:prototype];
}
- (HeartRes_Builder*) builder {
  return [HeartRes builder];
}
@end

@interface HeartRes_Builder()
@property (retain) HeartRes* result;
@end

@implementation HeartRes_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[HeartRes alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (HeartRes_Builder*) clear {
  self.result = [[[HeartRes alloc] init] autorelease];
  return self;
}
- (HeartRes_Builder*) clone {
  return [HeartRes builderWithPrototype:result];
}
- (HeartRes*) defaultInstance {
  return [HeartRes defaultInstance];
}
- (HeartRes*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (HeartRes*) buildPartial {
  HeartRes* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (HeartRes_Builder*) mergeFrom:(HeartRes*) other {
  if (other == [HeartRes defaultInstance]) {
    return self;
  }
  if (other.hasSid) {
    [self setSid:other.sid];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (HeartRes_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (HeartRes_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setSid:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasSid {
  return result.hasSid;
}
- (NSString*) sid {
  return result.sid;
}
- (HeartRes_Builder*) setSid:(NSString*) value {
  result.hasSid = YES;
  result.sid = value;
  return self;
}
- (HeartRes_Builder*) clearSid {
  result.hasSid = NO;
  result.sid = @"";
  return self;
}
@end

@interface ExChangeKeyReq ()
@property (retain) NSString* sid;
@property (retain) NSString* content;
@end

@implementation ExChangeKeyReq

- (BOOL) hasSid {
  return !!hasSid_;
}
- (void) setHasSid:(BOOL) value {
  hasSid_ = !!value;
}
@synthesize sid;
- (BOOL) hasContent {
  return !!hasContent_;
}
- (void) setHasContent:(BOOL) value {
  hasContent_ = !!value;
}
@synthesize content;
- (void) dealloc {
  self.sid = nil;
  self.content = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.sid = @"";
    self.content = @"";
  }
  return self;
}
static ExChangeKeyReq* defaultExChangeKeyReqInstance = nil;
+ (void) initialize {
  if (self == [ExChangeKeyReq class]) {
    defaultExChangeKeyReqInstance = [[ExChangeKeyReq alloc] init];
  }
}
+ (ExChangeKeyReq*) defaultInstance {
  return defaultExChangeKeyReqInstance;
}
- (ExChangeKeyReq*) defaultInstance {
  return defaultExChangeKeyReqInstance;
}
- (BOOL) isInitialized {
  if (!self.hasSid) {
    return NO;
  }
  if (!self.hasContent) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasSid) {
    [output writeString:1 value:self.sid];
  }
  if (self.hasContent) {
    [output writeString:2 value:self.content];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasSid) {
    size += computeStringSize(1, self.sid);
  }
  if (self.hasContent) {
    size += computeStringSize(2, self.content);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (ExChangeKeyReq*) parseFromData:(NSData*) data {
  return (ExChangeKeyReq*)[[[ExChangeKeyReq builder] mergeFromData:data] build];
}
+ (ExChangeKeyReq*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ExChangeKeyReq*)[[[ExChangeKeyReq builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (ExChangeKeyReq*) parseFromInputStream:(NSInputStream*) input {
  return (ExChangeKeyReq*)[[[ExChangeKeyReq builder] mergeFromInputStream:input] build];
}
+ (ExChangeKeyReq*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ExChangeKeyReq*)[[[ExChangeKeyReq builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (ExChangeKeyReq*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (ExChangeKeyReq*)[[[ExChangeKeyReq builder] mergeFromCodedInputStream:input] build];
}
+ (ExChangeKeyReq*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ExChangeKeyReq*)[[[ExChangeKeyReq builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (ExChangeKeyReq_Builder*) builder {
  return [[[ExChangeKeyReq_Builder alloc] init] autorelease];
}
+ (ExChangeKeyReq_Builder*) builderWithPrototype:(ExChangeKeyReq*) prototype {
  return [[ExChangeKeyReq builder] mergeFrom:prototype];
}
- (ExChangeKeyReq_Builder*) builder {
  return [ExChangeKeyReq builder];
}
@end

@interface ExChangeKeyReq_Builder()
@property (retain) ExChangeKeyReq* result;
@end

@implementation ExChangeKeyReq_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[ExChangeKeyReq alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (ExChangeKeyReq_Builder*) clear {
  self.result = [[[ExChangeKeyReq alloc] init] autorelease];
  return self;
}
- (ExChangeKeyReq_Builder*) clone {
  return [ExChangeKeyReq builderWithPrototype:result];
}
- (ExChangeKeyReq*) defaultInstance {
  return [ExChangeKeyReq defaultInstance];
}
- (ExChangeKeyReq*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (ExChangeKeyReq*) buildPartial {
  ExChangeKeyReq* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (ExChangeKeyReq_Builder*) mergeFrom:(ExChangeKeyReq*) other {
  if (other == [ExChangeKeyReq defaultInstance]) {
    return self;
  }
  if (other.hasSid) {
    [self setSid:other.sid];
  }
  if (other.hasContent) {
    [self setContent:other.content];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (ExChangeKeyReq_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (ExChangeKeyReq_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setSid:[input readString]];
        break;
      }
      case 18: {
        [self setContent:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasSid {
  return result.hasSid;
}
- (NSString*) sid {
  return result.sid;
}
- (ExChangeKeyReq_Builder*) setSid:(NSString*) value {
  result.hasSid = YES;
  result.sid = value;
  return self;
}
- (ExChangeKeyReq_Builder*) clearSid {
  result.hasSid = NO;
  result.sid = @"";
  return self;
}
- (BOOL) hasContent {
  return result.hasContent;
}
- (NSString*) content {
  return result.content;
}
- (ExChangeKeyReq_Builder*) setContent:(NSString*) value {
  result.hasContent = YES;
  result.content = value;
  return self;
}
- (ExChangeKeyReq_Builder*) clearContent {
  result.hasContent = NO;
  result.content = @"";
  return self;
}
@end

@interface ExChangeKeyRes ()
@property int32_t retCode;
@property (retain) NSString* sid;
@property (retain) NSString* p;
@property (retain) NSString* g;
@property (retain) NSString* svrpubkey;
@end

@implementation ExChangeKeyRes

- (BOOL) hasRetCode {
  return !!hasRetCode_;
}
- (void) setHasRetCode:(BOOL) value {
  hasRetCode_ = !!value;
}
@synthesize retCode;
- (BOOL) hasSid {
  return !!hasSid_;
}
- (void) setHasSid:(BOOL) value {
  hasSid_ = !!value;
}
@synthesize sid;
- (BOOL) hasP {
  return !!hasP_;
}
- (void) setHasP:(BOOL) value {
  hasP_ = !!value;
}
@synthesize p;
- (BOOL) hasG {
  return !!hasG_;
}
- (void) setHasG:(BOOL) value {
  hasG_ = !!value;
}
@synthesize g;
- (BOOL) hasSvrpubkey {
  return !!hasSvrpubkey_;
}
- (void) setHasSvrpubkey:(BOOL) value {
  hasSvrpubkey_ = !!value;
}
@synthesize svrpubkey;
- (void) dealloc {
  self.sid = nil;
  self.p = nil;
  self.g = nil;
  self.svrpubkey = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.retCode = 0;
    self.sid = @"";
    self.p = @"";
    self.g = @"";
    self.svrpubkey = @"";
  }
  return self;
}
static ExChangeKeyRes* defaultExChangeKeyResInstance = nil;
+ (void) initialize {
  if (self == [ExChangeKeyRes class]) {
    defaultExChangeKeyResInstance = [[ExChangeKeyRes alloc] init];
  }
}
+ (ExChangeKeyRes*) defaultInstance {
  return defaultExChangeKeyResInstance;
}
- (ExChangeKeyRes*) defaultInstance {
  return defaultExChangeKeyResInstance;
}
- (BOOL) isInitialized {
  if (!self.hasRetCode) {
    return NO;
  }
  if (!self.hasSid) {
    return NO;
  }
  if (!self.hasP) {
    return NO;
  }
  if (!self.hasG) {
    return NO;
  }
  if (!self.hasSvrpubkey) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasRetCode) {
    [output writeInt32:1 value:self.retCode];
  }
  if (self.hasSid) {
    [output writeString:2 value:self.sid];
  }
  if (self.hasP) {
    [output writeString:3 value:self.p];
  }
  if (self.hasG) {
    [output writeString:4 value:self.g];
  }
  if (self.hasSvrpubkey) {
    [output writeString:5 value:self.svrpubkey];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasRetCode) {
    size += computeInt32Size(1, self.retCode);
  }
  if (self.hasSid) {
    size += computeStringSize(2, self.sid);
  }
  if (self.hasP) {
    size += computeStringSize(3, self.p);
  }
  if (self.hasG) {
    size += computeStringSize(4, self.g);
  }
  if (self.hasSvrpubkey) {
    size += computeStringSize(5, self.svrpubkey);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (ExChangeKeyRes*) parseFromData:(NSData*) data {
  return (ExChangeKeyRes*)[[[ExChangeKeyRes builder] mergeFromData:data] build];
}
+ (ExChangeKeyRes*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ExChangeKeyRes*)[[[ExChangeKeyRes builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (ExChangeKeyRes*) parseFromInputStream:(NSInputStream*) input {
  return (ExChangeKeyRes*)[[[ExChangeKeyRes builder] mergeFromInputStream:input] build];
}
+ (ExChangeKeyRes*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ExChangeKeyRes*)[[[ExChangeKeyRes builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (ExChangeKeyRes*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (ExChangeKeyRes*)[[[ExChangeKeyRes builder] mergeFromCodedInputStream:input] build];
}
+ (ExChangeKeyRes*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ExChangeKeyRes*)[[[ExChangeKeyRes builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (ExChangeKeyRes_Builder*) builder {
  return [[[ExChangeKeyRes_Builder alloc] init] autorelease];
}
+ (ExChangeKeyRes_Builder*) builderWithPrototype:(ExChangeKeyRes*) prototype {
  return [[ExChangeKeyRes builder] mergeFrom:prototype];
}
- (ExChangeKeyRes_Builder*) builder {
  return [ExChangeKeyRes builder];
}
@end

@interface ExChangeKeyRes_Builder()
@property (retain) ExChangeKeyRes* result;
@end

@implementation ExChangeKeyRes_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[ExChangeKeyRes alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (ExChangeKeyRes_Builder*) clear {
  self.result = [[[ExChangeKeyRes alloc] init] autorelease];
  return self;
}
- (ExChangeKeyRes_Builder*) clone {
  return [ExChangeKeyRes builderWithPrototype:result];
}
- (ExChangeKeyRes*) defaultInstance {
  return [ExChangeKeyRes defaultInstance];
}
- (ExChangeKeyRes*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (ExChangeKeyRes*) buildPartial {
  ExChangeKeyRes* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (ExChangeKeyRes_Builder*) mergeFrom:(ExChangeKeyRes*) other {
  if (other == [ExChangeKeyRes defaultInstance]) {
    return self;
  }
  if (other.hasRetCode) {
    [self setRetCode:other.retCode];
  }
  if (other.hasSid) {
    [self setSid:other.sid];
  }
  if (other.hasP) {
    [self setP:other.p];
  }
  if (other.hasG) {
    [self setG:other.g];
  }
  if (other.hasSvrpubkey) {
    [self setSvrpubkey:other.svrpubkey];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (ExChangeKeyRes_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (ExChangeKeyRes_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setRetCode:[input readInt32]];
        break;
      }
      case 18: {
        [self setSid:[input readString]];
        break;
      }
      case 26: {
        [self setP:[input readString]];
        break;
      }
      case 34: {
        [self setG:[input readString]];
        break;
      }
      case 42: {
        [self setSvrpubkey:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasRetCode {
  return result.hasRetCode;
}
- (int32_t) retCode {
  return result.retCode;
}
- (ExChangeKeyRes_Builder*) setRetCode:(int32_t) value {
  result.hasRetCode = YES;
  result.retCode = value;
  return self;
}
- (ExChangeKeyRes_Builder*) clearRetCode {
  result.hasRetCode = NO;
  result.retCode = 0;
  return self;
}
- (BOOL) hasSid {
  return result.hasSid;
}
- (NSString*) sid {
  return result.sid;
}
- (ExChangeKeyRes_Builder*) setSid:(NSString*) value {
  result.hasSid = YES;
  result.sid = value;
  return self;
}
- (ExChangeKeyRes_Builder*) clearSid {
  result.hasSid = NO;
  result.sid = @"";
  return self;
}
- (BOOL) hasP {
  return result.hasP;
}
- (NSString*) p {
  return result.p;
}
- (ExChangeKeyRes_Builder*) setP:(NSString*) value {
  result.hasP = YES;
  result.p = value;
  return self;
}
- (ExChangeKeyRes_Builder*) clearP {
  result.hasP = NO;
  result.p = @"";
  return self;
}
- (BOOL) hasG {
  return result.hasG;
}
- (NSString*) g {
  return result.g;
}
- (ExChangeKeyRes_Builder*) setG:(NSString*) value {
  result.hasG = YES;
  result.g = value;
  return self;
}
- (ExChangeKeyRes_Builder*) clearG {
  result.hasG = NO;
  result.g = @"";
  return self;
}
- (BOOL) hasSvrpubkey {
  return result.hasSvrpubkey;
}
- (NSString*) svrpubkey {
  return result.svrpubkey;
}
- (ExChangeKeyRes_Builder*) setSvrpubkey:(NSString*) value {
  result.hasSvrpubkey = YES;
  result.svrpubkey = value;
  return self;
}
- (ExChangeKeyRes_Builder*) clearSvrpubkey {
  result.hasSvrpubkey = NO;
  result.svrpubkey = @"";
  return self;
}
@end

@interface ExChangeCheckKeyReq ()
@property (retain) NSString* sid;
@property (retain) NSString* pubKey;
@property (retain) NSString* keyDigest;
@end

@implementation ExChangeCheckKeyReq

- (BOOL) hasSid {
  return !!hasSid_;
}
- (void) setHasSid:(BOOL) value {
  hasSid_ = !!value;
}
@synthesize sid;
- (BOOL) hasPubKey {
  return !!hasPubKey_;
}
- (void) setHasPubKey:(BOOL) value {
  hasPubKey_ = !!value;
}
@synthesize pubKey;
- (BOOL) hasKeyDigest {
  return !!hasKeyDigest_;
}
- (void) setHasKeyDigest:(BOOL) value {
  hasKeyDigest_ = !!value;
}
@synthesize keyDigest;
- (void) dealloc {
  self.sid = nil;
  self.pubKey = nil;
  self.keyDigest = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.sid = @"";
    self.pubKey = @"";
    self.keyDigest = @"";
  }
  return self;
}
static ExChangeCheckKeyReq* defaultExChangeCheckKeyReqInstance = nil;
+ (void) initialize {
  if (self == [ExChangeCheckKeyReq class]) {
    defaultExChangeCheckKeyReqInstance = [[ExChangeCheckKeyReq alloc] init];
  }
}
+ (ExChangeCheckKeyReq*) defaultInstance {
  return defaultExChangeCheckKeyReqInstance;
}
- (ExChangeCheckKeyReq*) defaultInstance {
  return defaultExChangeCheckKeyReqInstance;
}
- (BOOL) isInitialized {
  if (!self.hasSid) {
    return NO;
  }
  if (!self.hasPubKey) {
    return NO;
  }
  if (!self.hasKeyDigest) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasSid) {
    [output writeString:1 value:self.sid];
  }
  if (self.hasPubKey) {
    [output writeString:2 value:self.pubKey];
  }
  if (self.hasKeyDigest) {
    [output writeString:3 value:self.keyDigest];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasSid) {
    size += computeStringSize(1, self.sid);
  }
  if (self.hasPubKey) {
    size += computeStringSize(2, self.pubKey);
  }
  if (self.hasKeyDigest) {
    size += computeStringSize(3, self.keyDigest);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (ExChangeCheckKeyReq*) parseFromData:(NSData*) data {
  return (ExChangeCheckKeyReq*)[[[ExChangeCheckKeyReq builder] mergeFromData:data] build];
}
+ (ExChangeCheckKeyReq*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ExChangeCheckKeyReq*)[[[ExChangeCheckKeyReq builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (ExChangeCheckKeyReq*) parseFromInputStream:(NSInputStream*) input {
  return (ExChangeCheckKeyReq*)[[[ExChangeCheckKeyReq builder] mergeFromInputStream:input] build];
}
+ (ExChangeCheckKeyReq*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ExChangeCheckKeyReq*)[[[ExChangeCheckKeyReq builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (ExChangeCheckKeyReq*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (ExChangeCheckKeyReq*)[[[ExChangeCheckKeyReq builder] mergeFromCodedInputStream:input] build];
}
+ (ExChangeCheckKeyReq*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ExChangeCheckKeyReq*)[[[ExChangeCheckKeyReq builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (ExChangeCheckKeyReq_Builder*) builder {
  return [[[ExChangeCheckKeyReq_Builder alloc] init] autorelease];
}
+ (ExChangeCheckKeyReq_Builder*) builderWithPrototype:(ExChangeCheckKeyReq*) prototype {
  return [[ExChangeCheckKeyReq builder] mergeFrom:prototype];
}
- (ExChangeCheckKeyReq_Builder*) builder {
  return [ExChangeCheckKeyReq builder];
}
@end

@interface ExChangeCheckKeyReq_Builder()
@property (retain) ExChangeCheckKeyReq* result;
@end

@implementation ExChangeCheckKeyReq_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[ExChangeCheckKeyReq alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (ExChangeCheckKeyReq_Builder*) clear {
  self.result = [[[ExChangeCheckKeyReq alloc] init] autorelease];
  return self;
}
- (ExChangeCheckKeyReq_Builder*) clone {
  return [ExChangeCheckKeyReq builderWithPrototype:result];
}
- (ExChangeCheckKeyReq*) defaultInstance {
  return [ExChangeCheckKeyReq defaultInstance];
}
- (ExChangeCheckKeyReq*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (ExChangeCheckKeyReq*) buildPartial {
  ExChangeCheckKeyReq* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (ExChangeCheckKeyReq_Builder*) mergeFrom:(ExChangeCheckKeyReq*) other {
  if (other == [ExChangeCheckKeyReq defaultInstance]) {
    return self;
  }
  if (other.hasSid) {
    [self setSid:other.sid];
  }
  if (other.hasPubKey) {
    [self setPubKey:other.pubKey];
  }
  if (other.hasKeyDigest) {
    [self setKeyDigest:other.keyDigest];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (ExChangeCheckKeyReq_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (ExChangeCheckKeyReq_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setSid:[input readString]];
        break;
      }
      case 18: {
        [self setPubKey:[input readString]];
        break;
      }
      case 26: {
        [self setKeyDigest:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasSid {
  return result.hasSid;
}
- (NSString*) sid {
  return result.sid;
}
- (ExChangeCheckKeyReq_Builder*) setSid:(NSString*) value {
  result.hasSid = YES;
  result.sid = value;
  return self;
}
- (ExChangeCheckKeyReq_Builder*) clearSid {
  result.hasSid = NO;
  result.sid = @"";
  return self;
}
- (BOOL) hasPubKey {
  return result.hasPubKey;
}
- (NSString*) pubKey {
  return result.pubKey;
}
- (ExChangeCheckKeyReq_Builder*) setPubKey:(NSString*) value {
  result.hasPubKey = YES;
  result.pubKey = value;
  return self;
}
- (ExChangeCheckKeyReq_Builder*) clearPubKey {
  result.hasPubKey = NO;
  result.pubKey = @"";
  return self;
}
- (BOOL) hasKeyDigest {
  return result.hasKeyDigest;
}
- (NSString*) keyDigest {
  return result.keyDigest;
}
- (ExChangeCheckKeyReq_Builder*) setKeyDigest:(NSString*) value {
  result.hasKeyDigest = YES;
  result.keyDigest = value;
  return self;
}
- (ExChangeCheckKeyReq_Builder*) clearKeyDigest {
  result.hasKeyDigest = NO;
  result.keyDigest = @"";
  return self;
}
@end

@interface ExChangeCheckKeyRes ()
@property (retain) NSString* sid;
@property int32_t checkResult;
@end

@implementation ExChangeCheckKeyRes

- (BOOL) hasSid {
  return !!hasSid_;
}
- (void) setHasSid:(BOOL) value {
  hasSid_ = !!value;
}
@synthesize sid;
- (BOOL) hasCheckResult {
  return !!hasCheckResult_;
}
- (void) setHasCheckResult:(BOOL) value {
  hasCheckResult_ = !!value;
}
@synthesize checkResult;
- (void) dealloc {
  self.sid = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.sid = @"";
    self.checkResult = 0;
  }
  return self;
}
static ExChangeCheckKeyRes* defaultExChangeCheckKeyResInstance = nil;
+ (void) initialize {
  if (self == [ExChangeCheckKeyRes class]) {
    defaultExChangeCheckKeyResInstance = [[ExChangeCheckKeyRes alloc] init];
  }
}
+ (ExChangeCheckKeyRes*) defaultInstance {
  return defaultExChangeCheckKeyResInstance;
}
- (ExChangeCheckKeyRes*) defaultInstance {
  return defaultExChangeCheckKeyResInstance;
}
- (BOOL) isInitialized {
  if (!self.hasSid) {
    return NO;
  }
  if (!self.hasCheckResult) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasSid) {
    [output writeString:1 value:self.sid];
  }
  if (self.hasCheckResult) {
    [output writeInt32:2 value:self.checkResult];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasSid) {
    size += computeStringSize(1, self.sid);
  }
  if (self.hasCheckResult) {
    size += computeInt32Size(2, self.checkResult);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (ExChangeCheckKeyRes*) parseFromData:(NSData*) data {
  return (ExChangeCheckKeyRes*)[[[ExChangeCheckKeyRes builder] mergeFromData:data] build];
}
+ (ExChangeCheckKeyRes*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ExChangeCheckKeyRes*)[[[ExChangeCheckKeyRes builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (ExChangeCheckKeyRes*) parseFromInputStream:(NSInputStream*) input {
  return (ExChangeCheckKeyRes*)[[[ExChangeCheckKeyRes builder] mergeFromInputStream:input] build];
}
+ (ExChangeCheckKeyRes*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ExChangeCheckKeyRes*)[[[ExChangeCheckKeyRes builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (ExChangeCheckKeyRes*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (ExChangeCheckKeyRes*)[[[ExChangeCheckKeyRes builder] mergeFromCodedInputStream:input] build];
}
+ (ExChangeCheckKeyRes*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ExChangeCheckKeyRes*)[[[ExChangeCheckKeyRes builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (ExChangeCheckKeyRes_Builder*) builder {
  return [[[ExChangeCheckKeyRes_Builder alloc] init] autorelease];
}
+ (ExChangeCheckKeyRes_Builder*) builderWithPrototype:(ExChangeCheckKeyRes*) prototype {
  return [[ExChangeCheckKeyRes builder] mergeFrom:prototype];
}
- (ExChangeCheckKeyRes_Builder*) builder {
  return [ExChangeCheckKeyRes builder];
}
@end

@interface ExChangeCheckKeyRes_Builder()
@property (retain) ExChangeCheckKeyRes* result;
@end

@implementation ExChangeCheckKeyRes_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[ExChangeCheckKeyRes alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (ExChangeCheckKeyRes_Builder*) clear {
  self.result = [[[ExChangeCheckKeyRes alloc] init] autorelease];
  return self;
}
- (ExChangeCheckKeyRes_Builder*) clone {
  return [ExChangeCheckKeyRes builderWithPrototype:result];
}
- (ExChangeCheckKeyRes*) defaultInstance {
  return [ExChangeCheckKeyRes defaultInstance];
}
- (ExChangeCheckKeyRes*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (ExChangeCheckKeyRes*) buildPartial {
  ExChangeCheckKeyRes* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (ExChangeCheckKeyRes_Builder*) mergeFrom:(ExChangeCheckKeyRes*) other {
  if (other == [ExChangeCheckKeyRes defaultInstance]) {
    return self;
  }
  if (other.hasSid) {
    [self setSid:other.sid];
  }
  if (other.hasCheckResult) {
    [self setCheckResult:other.checkResult];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (ExChangeCheckKeyRes_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (ExChangeCheckKeyRes_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setSid:[input readString]];
        break;
      }
      case 16: {
        [self setCheckResult:[input readInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasSid {
  return result.hasSid;
}
- (NSString*) sid {
  return result.sid;
}
- (ExChangeCheckKeyRes_Builder*) setSid:(NSString*) value {
  result.hasSid = YES;
  result.sid = value;
  return self;
}
- (ExChangeCheckKeyRes_Builder*) clearSid {
  result.hasSid = NO;
  result.sid = @"";
  return self;
}
- (BOOL) hasCheckResult {
  return result.hasCheckResult;
}
- (int32_t) checkResult {
  return result.checkResult;
}
- (ExChangeCheckKeyRes_Builder*) setCheckResult:(int32_t) value {
  result.hasCheckResult = YES;
  result.checkResult = value;
  return self;
}
- (ExChangeCheckKeyRes_Builder*) clearCheckResult {
  result.hasCheckResult = NO;
  result.checkResult = 0;
  return self;
}
@end

@interface ServeGroupInfo ()
@property int32_t serveId;
@property (retain) NSString* serveCode;
@property (retain) NSString* serveName;
@property Float64 price;
@property (retain) NSString* desc;
@property int32_t iconIndex;
@end

@implementation ServeGroupInfo

- (BOOL) hasServeId {
  return !!hasServeId_;
}
- (void) setHasServeId:(BOOL) value {
  hasServeId_ = !!value;
}
@synthesize serveId;
- (BOOL) hasServeCode {
  return !!hasServeCode_;
}
- (void) setHasServeCode:(BOOL) value {
  hasServeCode_ = !!value;
}
@synthesize serveCode;
- (BOOL) hasServeName {
  return !!hasServeName_;
}
- (void) setHasServeName:(BOOL) value {
  hasServeName_ = !!value;
}
@synthesize serveName;
- (BOOL) hasPrice {
  return !!hasPrice_;
}
- (void) setHasPrice:(BOOL) value {
  hasPrice_ = !!value;
}
@synthesize price;
- (BOOL) hasDesc {
  return !!hasDesc_;
}
- (void) setHasDesc:(BOOL) value {
  hasDesc_ = !!value;
}
@synthesize desc;
- (BOOL) hasIconIndex {
  return !!hasIconIndex_;
}
- (void) setHasIconIndex:(BOOL) value {
  hasIconIndex_ = !!value;
}
@synthesize iconIndex;
- (void) dealloc {
  self.serveCode = nil;
  self.serveName = nil;
  self.desc = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.serveId = 0;
    self.serveCode = @"";
    self.serveName = @"";
    self.price = 0;
    self.desc = @"";
    self.iconIndex = 0;
  }
  return self;
}
static ServeGroupInfo* defaultServeGroupInfoInstance = nil;
+ (void) initialize {
  if (self == [ServeGroupInfo class]) {
    defaultServeGroupInfoInstance = [[ServeGroupInfo alloc] init];
  }
}
+ (ServeGroupInfo*) defaultInstance {
  return defaultServeGroupInfoInstance;
}
- (ServeGroupInfo*) defaultInstance {
  return defaultServeGroupInfoInstance;
}
- (BOOL) isInitialized {
  if (!self.hasServeId) {
    return NO;
  }
  if (!self.hasServeCode) {
    return NO;
  }
  if (!self.hasServeName) {
    return NO;
  }
  if (!self.hasPrice) {
    return NO;
  }
  if (!self.hasDesc) {
    return NO;
  }
  if (!self.hasIconIndex) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasServeId) {
    [output writeInt32:1 value:self.serveId];
  }
  if (self.hasServeCode) {
    [output writeString:2 value:self.serveCode];
  }
  if (self.hasServeName) {
    [output writeString:3 value:self.serveName];
  }
  if (self.hasPrice) {
    [output writeDouble:4 value:self.price];
  }
  if (self.hasDesc) {
    [output writeString:5 value:self.desc];
  }
  if (self.hasIconIndex) {
    [output writeInt32:6 value:self.iconIndex];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasServeId) {
    size += computeInt32Size(1, self.serveId);
  }
  if (self.hasServeCode) {
    size += computeStringSize(2, self.serveCode);
  }
  if (self.hasServeName) {
    size += computeStringSize(3, self.serveName);
  }
  if (self.hasPrice) {
    size += computeDoubleSize(4, self.price);
  }
  if (self.hasDesc) {
    size += computeStringSize(5, self.desc);
  }
  if (self.hasIconIndex) {
    size += computeInt32Size(6, self.iconIndex);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (ServeGroupInfo*) parseFromData:(NSData*) data {
  return (ServeGroupInfo*)[[[ServeGroupInfo builder] mergeFromData:data] build];
}
+ (ServeGroupInfo*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ServeGroupInfo*)[[[ServeGroupInfo builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (ServeGroupInfo*) parseFromInputStream:(NSInputStream*) input {
  return (ServeGroupInfo*)[[[ServeGroupInfo builder] mergeFromInputStream:input] build];
}
+ (ServeGroupInfo*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ServeGroupInfo*)[[[ServeGroupInfo builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (ServeGroupInfo*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (ServeGroupInfo*)[[[ServeGroupInfo builder] mergeFromCodedInputStream:input] build];
}
+ (ServeGroupInfo*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ServeGroupInfo*)[[[ServeGroupInfo builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (ServeGroupInfo_Builder*) builder {
  return [[[ServeGroupInfo_Builder alloc] init] autorelease];
}
+ (ServeGroupInfo_Builder*) builderWithPrototype:(ServeGroupInfo*) prototype {
  return [[ServeGroupInfo builder] mergeFrom:prototype];
}
- (ServeGroupInfo_Builder*) builder {
  return [ServeGroupInfo builder];
}
@end

@interface ServeGroupInfo_Builder()
@property (retain) ServeGroupInfo* result;
@end

@implementation ServeGroupInfo_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[ServeGroupInfo alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (ServeGroupInfo_Builder*) clear {
  self.result = [[[ServeGroupInfo alloc] init] autorelease];
  return self;
}
- (ServeGroupInfo_Builder*) clone {
  return [ServeGroupInfo builderWithPrototype:result];
}
- (ServeGroupInfo*) defaultInstance {
  return [ServeGroupInfo defaultInstance];
}
- (ServeGroupInfo*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (ServeGroupInfo*) buildPartial {
  ServeGroupInfo* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (ServeGroupInfo_Builder*) mergeFrom:(ServeGroupInfo*) other {
  if (other == [ServeGroupInfo defaultInstance]) {
    return self;
  }
  if (other.hasServeId) {
    [self setServeId:other.serveId];
  }
  if (other.hasServeCode) {
    [self setServeCode:other.serveCode];
  }
  if (other.hasServeName) {
    [self setServeName:other.serveName];
  }
  if (other.hasPrice) {
    [self setPrice:other.price];
  }
  if (other.hasDesc) {
    [self setDesc:other.desc];
  }
  if (other.hasIconIndex) {
    [self setIconIndex:other.iconIndex];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (ServeGroupInfo_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (ServeGroupInfo_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setServeId:[input readInt32]];
        break;
      }
      case 18: {
        [self setServeCode:[input readString]];
        break;
      }
      case 26: {
        [self setServeName:[input readString]];
        break;
      }
      case 33: {
        [self setPrice:[input readDouble]];
        break;
      }
      case 42: {
        [self setDesc:[input readString]];
        break;
      }
      case 48: {
        [self setIconIndex:[input readInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasServeId {
  return result.hasServeId;
}
- (int32_t) serveId {
  return result.serveId;
}
- (ServeGroupInfo_Builder*) setServeId:(int32_t) value {
  result.hasServeId = YES;
  result.serveId = value;
  return self;
}
- (ServeGroupInfo_Builder*) clearServeId {
  result.hasServeId = NO;
  result.serveId = 0;
  return self;
}
- (BOOL) hasServeCode {
  return result.hasServeCode;
}
- (NSString*) serveCode {
  return result.serveCode;
}
- (ServeGroupInfo_Builder*) setServeCode:(NSString*) value {
  result.hasServeCode = YES;
  result.serveCode = value;
  return self;
}
- (ServeGroupInfo_Builder*) clearServeCode {
  result.hasServeCode = NO;
  result.serveCode = @"";
  return self;
}
- (BOOL) hasServeName {
  return result.hasServeName;
}
- (NSString*) serveName {
  return result.serveName;
}
- (ServeGroupInfo_Builder*) setServeName:(NSString*) value {
  result.hasServeName = YES;
  result.serveName = value;
  return self;
}
- (ServeGroupInfo_Builder*) clearServeName {
  result.hasServeName = NO;
  result.serveName = @"";
  return self;
}
- (BOOL) hasPrice {
  return result.hasPrice;
}
- (Float64) price {
  return result.price;
}
- (ServeGroupInfo_Builder*) setPrice:(Float64) value {
  result.hasPrice = YES;
  result.price = value;
  return self;
}
- (ServeGroupInfo_Builder*) clearPrice {
  result.hasPrice = NO;
  result.price = 0;
  return self;
}
- (BOOL) hasDesc {
  return result.hasDesc;
}
- (NSString*) desc {
  return result.desc;
}
- (ServeGroupInfo_Builder*) setDesc:(NSString*) value {
  result.hasDesc = YES;
  result.desc = value;
  return self;
}
- (ServeGroupInfo_Builder*) clearDesc {
  result.hasDesc = NO;
  result.desc = @"";
  return self;
}
- (BOOL) hasIconIndex {
  return result.hasIconIndex;
}
- (int32_t) iconIndex {
  return result.iconIndex;
}
- (ServeGroupInfo_Builder*) setIconIndex:(int32_t) value {
  result.hasIconIndex = YES;
  result.iconIndex = value;
  return self;
}
- (ServeGroupInfo_Builder*) clearIconIndex {
  result.hasIconIndex = NO;
  result.iconIndex = 0;
  return self;
}
@end

@interface ServeListQueryReq ()
@property (retain) NSString* sid;
@property int32_t loginId;
@end

@implementation ServeListQueryReq

- (BOOL) hasSid {
  return !!hasSid_;
}
- (void) setHasSid:(BOOL) value {
  hasSid_ = !!value;
}
@synthesize sid;
- (BOOL) hasLoginId {
  return !!hasLoginId_;
}
- (void) setHasLoginId:(BOOL) value {
  hasLoginId_ = !!value;
}
@synthesize loginId;
- (void) dealloc {
  self.sid = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.sid = @"";
    self.loginId = 0;
  }
  return self;
}
static ServeListQueryReq* defaultServeListQueryReqInstance = nil;
+ (void) initialize {
  if (self == [ServeListQueryReq class]) {
    defaultServeListQueryReqInstance = [[ServeListQueryReq alloc] init];
  }
}
+ (ServeListQueryReq*) defaultInstance {
  return defaultServeListQueryReqInstance;
}
- (ServeListQueryReq*) defaultInstance {
  return defaultServeListQueryReqInstance;
}
- (BOOL) isInitialized {
  if (!self.hasSid) {
    return NO;
  }
  if (!self.hasLoginId) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasSid) {
    [output writeString:1 value:self.sid];
  }
  if (self.hasLoginId) {
    [output writeInt32:2 value:self.loginId];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasSid) {
    size += computeStringSize(1, self.sid);
  }
  if (self.hasLoginId) {
    size += computeInt32Size(2, self.loginId);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (ServeListQueryReq*) parseFromData:(NSData*) data {
  return (ServeListQueryReq*)[[[ServeListQueryReq builder] mergeFromData:data] build];
}
+ (ServeListQueryReq*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ServeListQueryReq*)[[[ServeListQueryReq builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (ServeListQueryReq*) parseFromInputStream:(NSInputStream*) input {
  return (ServeListQueryReq*)[[[ServeListQueryReq builder] mergeFromInputStream:input] build];
}
+ (ServeListQueryReq*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ServeListQueryReq*)[[[ServeListQueryReq builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (ServeListQueryReq*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (ServeListQueryReq*)[[[ServeListQueryReq builder] mergeFromCodedInputStream:input] build];
}
+ (ServeListQueryReq*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ServeListQueryReq*)[[[ServeListQueryReq builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (ServeListQueryReq_Builder*) builder {
  return [[[ServeListQueryReq_Builder alloc] init] autorelease];
}
+ (ServeListQueryReq_Builder*) builderWithPrototype:(ServeListQueryReq*) prototype {
  return [[ServeListQueryReq builder] mergeFrom:prototype];
}
- (ServeListQueryReq_Builder*) builder {
  return [ServeListQueryReq builder];
}
@end

@interface ServeListQueryReq_Builder()
@property (retain) ServeListQueryReq* result;
@end

@implementation ServeListQueryReq_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[ServeListQueryReq alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (ServeListQueryReq_Builder*) clear {
  self.result = [[[ServeListQueryReq alloc] init] autorelease];
  return self;
}
- (ServeListQueryReq_Builder*) clone {
  return [ServeListQueryReq builderWithPrototype:result];
}
- (ServeListQueryReq*) defaultInstance {
  return [ServeListQueryReq defaultInstance];
}
- (ServeListQueryReq*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (ServeListQueryReq*) buildPartial {
  ServeListQueryReq* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (ServeListQueryReq_Builder*) mergeFrom:(ServeListQueryReq*) other {
  if (other == [ServeListQueryReq defaultInstance]) {
    return self;
  }
  if (other.hasSid) {
    [self setSid:other.sid];
  }
  if (other.hasLoginId) {
    [self setLoginId:other.loginId];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (ServeListQueryReq_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (ServeListQueryReq_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setSid:[input readString]];
        break;
      }
      case 16: {
        [self setLoginId:[input readInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasSid {
  return result.hasSid;
}
- (NSString*) sid {
  return result.sid;
}
- (ServeListQueryReq_Builder*) setSid:(NSString*) value {
  result.hasSid = YES;
  result.sid = value;
  return self;
}
- (ServeListQueryReq_Builder*) clearSid {
  result.hasSid = NO;
  result.sid = @"";
  return self;
}
- (BOOL) hasLoginId {
  return result.hasLoginId;
}
- (int32_t) loginId {
  return result.loginId;
}
- (ServeListQueryReq_Builder*) setLoginId:(int32_t) value {
  result.hasLoginId = YES;
  result.loginId = value;
  return self;
}
- (ServeListQueryReq_Builder*) clearLoginId {
  result.hasLoginId = NO;
  result.loginId = 0;
  return self;
}
@end

@interface ServeListQueryRes ()
@property int32_t retCode;
@property (retain) NSString* sid;
@property int32_t loginId;
@property (retain) NSMutableArray* mutableServeGroupsList;
@end

@implementation ServeListQueryRes

- (BOOL) hasRetCode {
  return !!hasRetCode_;
}
- (void) setHasRetCode:(BOOL) value {
  hasRetCode_ = !!value;
}
@synthesize retCode;
- (BOOL) hasSid {
  return !!hasSid_;
}
- (void) setHasSid:(BOOL) value {
  hasSid_ = !!value;
}
@synthesize sid;
- (BOOL) hasLoginId {
  return !!hasLoginId_;
}
- (void) setHasLoginId:(BOOL) value {
  hasLoginId_ = !!value;
}
@synthesize loginId;
@synthesize mutableServeGroupsList;
- (void) dealloc {
  self.sid = nil;
  self.mutableServeGroupsList = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.retCode = 0;
    self.sid = @"";
    self.loginId = 0;
  }
  return self;
}
static ServeListQueryRes* defaultServeListQueryResInstance = nil;
+ (void) initialize {
  if (self == [ServeListQueryRes class]) {
    defaultServeListQueryResInstance = [[ServeListQueryRes alloc] init];
  }
}
+ (ServeListQueryRes*) defaultInstance {
  return defaultServeListQueryResInstance;
}
- (ServeListQueryRes*) defaultInstance {
  return defaultServeListQueryResInstance;
}
- (NSArray*) serveGroupsList {
  return mutableServeGroupsList;
}
- (ServeGroupInfo*) serveGroupsAtIndex:(int32_t) index {
  id value = [mutableServeGroupsList objectAtIndex:index];
  return value;
}
- (BOOL) isInitialized {
  if (!self.hasRetCode) {
    return NO;
  }
  if (!self.hasSid) {
    return NO;
  }
  if (!self.hasLoginId) {
    return NO;
  }
  for (ServeGroupInfo* element in self.serveGroupsList) {
    if (!element.isInitialized) {
      return NO;
    }
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasRetCode) {
    [output writeInt32:1 value:self.retCode];
  }
  if (self.hasSid) {
    [output writeString:2 value:self.sid];
  }
  if (self.hasLoginId) {
    [output writeInt32:3 value:self.loginId];
  }
  for (ServeGroupInfo* element in self.serveGroupsList) {
    [output writeMessage:4 value:element];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasRetCode) {
    size += computeInt32Size(1, self.retCode);
  }
  if (self.hasSid) {
    size += computeStringSize(2, self.sid);
  }
  if (self.hasLoginId) {
    size += computeInt32Size(3, self.loginId);
  }
  for (ServeGroupInfo* element in self.serveGroupsList) {
    size += computeMessageSize(4, element);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (ServeListQueryRes*) parseFromData:(NSData*) data {
  return (ServeListQueryRes*)[[[ServeListQueryRes builder] mergeFromData:data] build];
}
+ (ServeListQueryRes*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ServeListQueryRes*)[[[ServeListQueryRes builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (ServeListQueryRes*) parseFromInputStream:(NSInputStream*) input {
  return (ServeListQueryRes*)[[[ServeListQueryRes builder] mergeFromInputStream:input] build];
}
+ (ServeListQueryRes*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ServeListQueryRes*)[[[ServeListQueryRes builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (ServeListQueryRes*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (ServeListQueryRes*)[[[ServeListQueryRes builder] mergeFromCodedInputStream:input] build];
}
+ (ServeListQueryRes*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ServeListQueryRes*)[[[ServeListQueryRes builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (ServeListQueryRes_Builder*) builder {
  return [[[ServeListQueryRes_Builder alloc] init] autorelease];
}
+ (ServeListQueryRes_Builder*) builderWithPrototype:(ServeListQueryRes*) prototype {
  return [[ServeListQueryRes builder] mergeFrom:prototype];
}
- (ServeListQueryRes_Builder*) builder {
  return [ServeListQueryRes builder];
}
@end

@interface ServeListQueryRes_Builder()
@property (retain) ServeListQueryRes* result;
@end

@implementation ServeListQueryRes_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[ServeListQueryRes alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (ServeListQueryRes_Builder*) clear {
  self.result = [[[ServeListQueryRes alloc] init] autorelease];
  return self;
}
- (ServeListQueryRes_Builder*) clone {
  return [ServeListQueryRes builderWithPrototype:result];
}
- (ServeListQueryRes*) defaultInstance {
  return [ServeListQueryRes defaultInstance];
}
- (ServeListQueryRes*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (ServeListQueryRes*) buildPartial {
  ServeListQueryRes* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (ServeListQueryRes_Builder*) mergeFrom:(ServeListQueryRes*) other {
  if (other == [ServeListQueryRes defaultInstance]) {
    return self;
  }
  if (other.hasRetCode) {
    [self setRetCode:other.retCode];
  }
  if (other.hasSid) {
    [self setSid:other.sid];
  }
  if (other.hasLoginId) {
    [self setLoginId:other.loginId];
  }
  if (other.mutableServeGroupsList.count > 0) {
    if (result.mutableServeGroupsList == nil) {
      result.mutableServeGroupsList = [NSMutableArray array];
    }
    [result.mutableServeGroupsList addObjectsFromArray:other.mutableServeGroupsList];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (ServeListQueryRes_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (ServeListQueryRes_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setRetCode:[input readInt32]];
        break;
      }
      case 18: {
        [self setSid:[input readString]];
        break;
      }
      case 24: {
        [self setLoginId:[input readInt32]];
        break;
      }
      case 34: {
        ServeGroupInfo_Builder* subBuilder = [ServeGroupInfo builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addServeGroups:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL) hasRetCode {
  return result.hasRetCode;
}
- (int32_t) retCode {
  return result.retCode;
}
- (ServeListQueryRes_Builder*) setRetCode:(int32_t) value {
  result.hasRetCode = YES;
  result.retCode = value;
  return self;
}
- (ServeListQueryRes_Builder*) clearRetCode {
  result.hasRetCode = NO;
  result.retCode = 0;
  return self;
}
- (BOOL) hasSid {
  return result.hasSid;
}
- (NSString*) sid {
  return result.sid;
}
- (ServeListQueryRes_Builder*) setSid:(NSString*) value {
  result.hasSid = YES;
  result.sid = value;
  return self;
}
- (ServeListQueryRes_Builder*) clearSid {
  result.hasSid = NO;
  result.sid = @"";
  return self;
}
- (BOOL) hasLoginId {
  return result.hasLoginId;
}
- (int32_t) loginId {
  return result.loginId;
}
- (ServeListQueryRes_Builder*) setLoginId:(int32_t) value {
  result.hasLoginId = YES;
  result.loginId = value;
  return self;
}
- (ServeListQueryRes_Builder*) clearLoginId {
  result.hasLoginId = NO;
  result.loginId = 0;
  return self;
}
- (NSArray*) serveGroupsList {
  if (result.mutableServeGroupsList == nil) { return [NSArray array]; }
  return result.mutableServeGroupsList;
}
- (ServeGroupInfo*) serveGroupsAtIndex:(int32_t) index {
  return [result serveGroupsAtIndex:index];
}
- (ServeListQueryRes_Builder*) replaceServeGroupsAtIndex:(int32_t) index with:(ServeGroupInfo*) value {
  [result.mutableServeGroupsList replaceObjectAtIndex:index withObject:value];
  return self;
}
- (ServeListQueryRes_Builder*) addAllServeGroups:(NSArray*) values {
  if (result.mutableServeGroupsList == nil) {
    result.mutableServeGroupsList = [NSMutableArray array];
  }
  [result.mutableServeGroupsList addObjectsFromArray:values];
  return self;
}
- (ServeListQueryRes_Builder*) clearServeGroupsList {
  result.mutableServeGroupsList = nil;
  return self;
}
- (ServeListQueryRes_Builder*) addServeGroups:(ServeGroupInfo*) value {
  if (result.mutableServeGroupsList == nil) {
    result.mutableServeGroupsList = [NSMutableArray array];
  }
  [result.mutableServeGroupsList addObject:value];
  return self;
}
@end

@interface UserServeOrderReq ()
@property (retain) NSString* sid;
@property int32_t loginId;
@property int32_t serveId;
@property Float64 price;
@property Float64 discount;
@property int32_t quantity;
@property Float64 amount;
@end

@implementation UserServeOrderReq

- (BOOL) hasSid {
  return !!hasSid_;
}
- (void) setHasSid:(BOOL) value {
  hasSid_ = !!value;
}
@synthesize sid;
- (BOOL) hasLoginId {
  return !!hasLoginId_;
}
- (void) setHasLoginId:(BOOL) value {
  hasLoginId_ = !!value;
}
@synthesize loginId;
- (BOOL) hasServeId {
  return !!hasServeId_;
}
- (void) setHasServeId:(BOOL) value {
  hasServeId_ = !!value;
}
@synthesize serveId;
- (BOOL) hasPrice {
  return !!hasPrice_;
}
- (void) setHasPrice:(BOOL) value {
  hasPrice_ = !!value;
}
@synthesize price;
- (BOOL) hasDiscount {
  return !!hasDiscount_;
}
- (void) setHasDiscount:(BOOL) value {
  hasDiscount_ = !!value;
}
@synthesize discount;
- (BOOL) hasQuantity {
  return !!hasQuantity_;
}
- (void) setHasQuantity:(BOOL) value {
  hasQuantity_ = !!value;
}
@synthesize quantity;
- (BOOL) hasAmount {
  return !!hasAmount_;
}
- (void) setHasAmount:(BOOL) value {
  hasAmount_ = !!value;
}
@synthesize amount;
- (void) dealloc {
  self.sid = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.sid = @"";
    self.loginId = 0;
    self.serveId = 0;
    self.price = 0;
    self.discount = 0;
    self.quantity = 0;
    self.amount = 0;
  }
  return self;
}
static UserServeOrderReq* defaultUserServeOrderReqInstance = nil;
+ (void) initialize {
  if (self == [UserServeOrderReq class]) {
    defaultUserServeOrderReqInstance = [[UserServeOrderReq alloc] init];
  }
}
+ (UserServeOrderReq*) defaultInstance {
  return defaultUserServeOrderReqInstance;
}
- (UserServeOrderReq*) defaultInstance {
  return defaultUserServeOrderReqInstance;
}
- (BOOL) isInitialized {
  if (!self.hasSid) {
    return NO;
  }
  if (!self.hasLoginId) {
    return NO;
  }
  if (!self.hasServeId) {
    return NO;
  }
  if (!self.hasPrice) {
    return NO;
  }
  if (!self.hasDiscount) {
    return NO;
  }
  if (!self.hasQuantity) {
    return NO;
  }
  if (!self.hasAmount) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasSid) {
    [output writeString:1 value:self.sid];
  }
  if (self.hasLoginId) {
    [output writeInt32:2 value:self.loginId];
  }
  if (self.hasServeId) {
    [output writeInt32:3 value:self.serveId];
  }
  if (self.hasPrice) {
    [output writeDouble:4 value:self.price];
  }
  if (self.hasDiscount) {
    [output writeDouble:5 value:self.discount];
  }
  if (self.hasQuantity) {
    [output writeInt32:6 value:self.quantity];
  }
  if (self.hasAmount) {
    [output writeDouble:7 value:self.amount];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasSid) {
    size += computeStringSize(1, self.sid);
  }
  if (self.hasLoginId) {
    size += computeInt32Size(2, self.loginId);
  }
  if (self.hasServeId) {
    size += computeInt32Size(3, self.serveId);
  }
  if (self.hasPrice) {
    size += computeDoubleSize(4, self.price);
  }
  if (self.hasDiscount) {
    size += computeDoubleSize(5, self.discount);
  }
  if (self.hasQuantity) {
    size += computeInt32Size(6, self.quantity);
  }
  if (self.hasAmount) {
    size += computeDoubleSize(7, self.amount);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (UserServeOrderReq*) parseFromData:(NSData*) data {
  return (UserServeOrderReq*)[[[UserServeOrderReq builder] mergeFromData:data] build];
}
+ (UserServeOrderReq*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (UserServeOrderReq*)[[[UserServeOrderReq builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (UserServeOrderReq*) parseFromInputStream:(NSInputStream*) input {
  return (UserServeOrderReq*)[[[UserServeOrderReq builder] mergeFromInputStream:input] build];
}
+ (UserServeOrderReq*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (UserServeOrderReq*)[[[UserServeOrderReq builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (UserServeOrderReq*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (UserServeOrderReq*)[[[UserServeOrderReq builder] mergeFromCodedInputStream:input] build];
}
+ (UserServeOrderReq*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (UserServeOrderReq*)[[[UserServeOrderReq builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (UserServeOrderReq_Builder*) builder {
  return [[[UserServeOrderReq_Builder alloc] init] autorelease];
}
+ (UserServeOrderReq_Builder*) builderWithPrototype:(UserServeOrderReq*) prototype {
  return [[UserServeOrderReq builder] mergeFrom:prototype];
}
- (UserServeOrderReq_Builder*) builder {
  return [UserServeOrderReq builder];
}
@end

@interface UserServeOrderReq_Builder()
@property (retain) UserServeOrderReq* result;
@end

@implementation UserServeOrderReq_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[UserServeOrderReq alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (UserServeOrderReq_Builder*) clear {
  self.result = [[[UserServeOrderReq alloc] init] autorelease];
  return self;
}
- (UserServeOrderReq_Builder*) clone {
  return [UserServeOrderReq builderWithPrototype:result];
}
- (UserServeOrderReq*) defaultInstance {
  return [UserServeOrderReq defaultInstance];
}
- (UserServeOrderReq*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (UserServeOrderReq*) buildPartial {
  UserServeOrderReq* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (UserServeOrderReq_Builder*) mergeFrom:(UserServeOrderReq*) other {
  if (other == [UserServeOrderReq defaultInstance]) {
    return self;
  }
  if (other.hasSid) {
    [self setSid:other.sid];
  }
  if (other.hasLoginId) {
    [self setLoginId:other.loginId];
  }
  if (other.hasServeId) {
    [self setServeId:other.serveId];
  }
  if (other.hasPrice) {
    [self setPrice:other.price];
  }
  if (other.hasDiscount) {
    [self setDiscount:other.discount];
  }
  if (other.hasQuantity) {
    [self setQuantity:other.quantity];
  }
  if (other.hasAmount) {
    [self setAmount:other.amount];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (UserServeOrderReq_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (UserServeOrderReq_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setSid:[input readString]];
        break;
      }
      case 16: {
        [self setLoginId:[input readInt32]];
        break;
      }
      case 24: {
        [self setServeId:[input readInt32]];
        break;
      }
      case 33: {
        [self setPrice:[input readDouble]];
        break;
      }
      case 41: {
        [self setDiscount:[input readDouble]];
        break;
      }
      case 48: {
        [self setQuantity:[input readInt32]];
        break;
      }
      case 57: {
        [self setAmount:[input readDouble]];
        break;
      }
    }
  }
}
- (BOOL) hasSid {
  return result.hasSid;
}
- (NSString*) sid {
  return result.sid;
}
- (UserServeOrderReq_Builder*) setSid:(NSString*) value {
  result.hasSid = YES;
  result.sid = value;
  return self;
}
- (UserServeOrderReq_Builder*) clearSid {
  result.hasSid = NO;
  result.sid = @"";
  return self;
}
- (BOOL) hasLoginId {
  return result.hasLoginId;
}
- (int32_t) loginId {
  return result.loginId;
}
- (UserServeOrderReq_Builder*) setLoginId:(int32_t) value {
  result.hasLoginId = YES;
  result.loginId = value;
  return self;
}
- (UserServeOrderReq_Builder*) clearLoginId {
  result.hasLoginId = NO;
  result.loginId = 0;
  return self;
}
- (BOOL) hasServeId {
  return result.hasServeId;
}
- (int32_t) serveId {
  return result.serveId;
}
- (UserServeOrderReq_Builder*) setServeId:(int32_t) value {
  result.hasServeId = YES;
  result.serveId = value;
  return self;
}
- (UserServeOrderReq_Builder*) clearServeId {
  result.hasServeId = NO;
  result.serveId = 0;
  return self;
}
- (BOOL) hasPrice {
  return result.hasPrice;
}
- (Float64) price {
  return result.price;
}
- (UserServeOrderReq_Builder*) setPrice:(Float64) value {
  result.hasPrice = YES;
  result.price = value;
  return self;
}
- (UserServeOrderReq_Builder*) clearPrice {
  result.hasPrice = NO;
  result.price = 0;
  return self;
}
- (BOOL) hasDiscount {
  return result.hasDiscount;
}
- (Float64) discount {
  return result.discount;
}
- (UserServeOrderReq_Builder*) setDiscount:(Float64) value {
  result.hasDiscount = YES;
  result.discount = value;
  return self;
}
- (UserServeOrderReq_Builder*) clearDiscount {
  result.hasDiscount = NO;
  result.discount = 0;
  return self;
}
- (BOOL) hasQuantity {
  return result.hasQuantity;
}
- (int32_t) quantity {
  return result.quantity;
}
- (UserServeOrderReq_Builder*) setQuantity:(int32_t) value {
  result.hasQuantity = YES;
  result.quantity = value;
  return self;
}
- (UserServeOrderReq_Builder*) clearQuantity {
  result.hasQuantity = NO;
  result.quantity = 0;
  return self;
}
- (BOOL) hasAmount {
  return result.hasAmount;
}
- (Float64) amount {
  return result.amount;
}
- (UserServeOrderReq_Builder*) setAmount:(Float64) value {
  result.hasAmount = YES;
  result.amount = value;
  return self;
}
- (UserServeOrderReq_Builder*) clearAmount {
  result.hasAmount = NO;
  result.amount = 0;
  return self;
}
@end

@interface UserServeOrderRes ()
@property int32_t retCode;
@property (retain) NSString* sid;
@property int32_t loginId;
@property int64_t orderId;
@end

@implementation UserServeOrderRes

- (BOOL) hasRetCode {
  return !!hasRetCode_;
}
- (void) setHasRetCode:(BOOL) value {
  hasRetCode_ = !!value;
}
@synthesize retCode;
- (BOOL) hasSid {
  return !!hasSid_;
}
- (void) setHasSid:(BOOL) value {
  hasSid_ = !!value;
}
@synthesize sid;
- (BOOL) hasLoginId {
  return !!hasLoginId_;
}
- (void) setHasLoginId:(BOOL) value {
  hasLoginId_ = !!value;
}
@synthesize loginId;
- (BOOL) hasOrderId {
  return !!hasOrderId_;
}
- (void) setHasOrderId:(BOOL) value {
  hasOrderId_ = !!value;
}
@synthesize orderId;
- (void) dealloc {
  self.sid = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.retCode = 0;
    self.sid = @"";
    self.loginId = 0;
    self.orderId = 0L;
  }
  return self;
}
static UserServeOrderRes* defaultUserServeOrderResInstance = nil;
+ (void) initialize {
  if (self == [UserServeOrderRes class]) {
    defaultUserServeOrderResInstance = [[UserServeOrderRes alloc] init];
  }
}
+ (UserServeOrderRes*) defaultInstance {
  return defaultUserServeOrderResInstance;
}
- (UserServeOrderRes*) defaultInstance {
  return defaultUserServeOrderResInstance;
}
- (BOOL) isInitialized {
  if (!self.hasRetCode) {
    return NO;
  }
  if (!self.hasSid) {
    return NO;
  }
  if (!self.hasLoginId) {
    return NO;
  }
  if (!self.hasOrderId) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasRetCode) {
    [output writeInt32:1 value:self.retCode];
  }
  if (self.hasSid) {
    [output writeString:2 value:self.sid];
  }
  if (self.hasLoginId) {
    [output writeInt32:3 value:self.loginId];
  }
  if (self.hasOrderId) {
    [output writeInt64:4 value:self.orderId];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasRetCode) {
    size += computeInt32Size(1, self.retCode);
  }
  if (self.hasSid) {
    size += computeStringSize(2, self.sid);
  }
  if (self.hasLoginId) {
    size += computeInt32Size(3, self.loginId);
  }
  if (self.hasOrderId) {
    size += computeInt64Size(4, self.orderId);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (UserServeOrderRes*) parseFromData:(NSData*) data {
  return (UserServeOrderRes*)[[[UserServeOrderRes builder] mergeFromData:data] build];
}
+ (UserServeOrderRes*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (UserServeOrderRes*)[[[UserServeOrderRes builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (UserServeOrderRes*) parseFromInputStream:(NSInputStream*) input {
  return (UserServeOrderRes*)[[[UserServeOrderRes builder] mergeFromInputStream:input] build];
}
+ (UserServeOrderRes*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (UserServeOrderRes*)[[[UserServeOrderRes builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (UserServeOrderRes*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (UserServeOrderRes*)[[[UserServeOrderRes builder] mergeFromCodedInputStream:input] build];
}
+ (UserServeOrderRes*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (UserServeOrderRes*)[[[UserServeOrderRes builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (UserServeOrderRes_Builder*) builder {
  return [[[UserServeOrderRes_Builder alloc] init] autorelease];
}
+ (UserServeOrderRes_Builder*) builderWithPrototype:(UserServeOrderRes*) prototype {
  return [[UserServeOrderRes builder] mergeFrom:prototype];
}
- (UserServeOrderRes_Builder*) builder {
  return [UserServeOrderRes builder];
}
@end

@interface UserServeOrderRes_Builder()
@property (retain) UserServeOrderRes* result;
@end

@implementation UserServeOrderRes_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[UserServeOrderRes alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (UserServeOrderRes_Builder*) clear {
  self.result = [[[UserServeOrderRes alloc] init] autorelease];
  return self;
}
- (UserServeOrderRes_Builder*) clone {
  return [UserServeOrderRes builderWithPrototype:result];
}
- (UserServeOrderRes*) defaultInstance {
  return [UserServeOrderRes defaultInstance];
}
- (UserServeOrderRes*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (UserServeOrderRes*) buildPartial {
  UserServeOrderRes* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (UserServeOrderRes_Builder*) mergeFrom:(UserServeOrderRes*) other {
  if (other == [UserServeOrderRes defaultInstance]) {
    return self;
  }
  if (other.hasRetCode) {
    [self setRetCode:other.retCode];
  }
  if (other.hasSid) {
    [self setSid:other.sid];
  }
  if (other.hasLoginId) {
    [self setLoginId:other.loginId];
  }
  if (other.hasOrderId) {
    [self setOrderId:other.orderId];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (UserServeOrderRes_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (UserServeOrderRes_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setRetCode:[input readInt32]];
        break;
      }
      case 18: {
        [self setSid:[input readString]];
        break;
      }
      case 24: {
        [self setLoginId:[input readInt32]];
        break;
      }
      case 32: {
        [self setOrderId:[input readInt64]];
        break;
      }
    }
  }
}
- (BOOL) hasRetCode {
  return result.hasRetCode;
}
- (int32_t) retCode {
  return result.retCode;
}
- (UserServeOrderRes_Builder*) setRetCode:(int32_t) value {
  result.hasRetCode = YES;
  result.retCode = value;
  return self;
}
- (UserServeOrderRes_Builder*) clearRetCode {
  result.hasRetCode = NO;
  result.retCode = 0;
  return self;
}
- (BOOL) hasSid {
  return result.hasSid;
}
- (NSString*) sid {
  return result.sid;
}
- (UserServeOrderRes_Builder*) setSid:(NSString*) value {
  result.hasSid = YES;
  result.sid = value;
  return self;
}
- (UserServeOrderRes_Builder*) clearSid {
  result.hasSid = NO;
  result.sid = @"";
  return self;
}
- (BOOL) hasLoginId {
  return result.hasLoginId;
}
- (int32_t) loginId {
  return result.loginId;
}
- (UserServeOrderRes_Builder*) setLoginId:(int32_t) value {
  result.hasLoginId = YES;
  result.loginId = value;
  return self;
}
- (UserServeOrderRes_Builder*) clearLoginId {
  result.hasLoginId = NO;
  result.loginId = 0;
  return self;
}
- (BOOL) hasOrderId {
  return result.hasOrderId;
}
- (int64_t) orderId {
  return result.orderId;
}
- (UserServeOrderRes_Builder*) setOrderId:(int64_t) value {
  result.hasOrderId = YES;
  result.orderId = value;
  return self;
}
- (UserServeOrderRes_Builder*) clearOrderId {
  result.hasOrderId = NO;
  result.orderId = 0L;
  return self;
}
@end

@interface OrderPaymentReq ()
@property (retain) NSString* sid;
@property int32_t loginId;
@property int64_t orderId;
@property Float64 amount;
@end

@implementation OrderPaymentReq

- (BOOL) hasSid {
  return !!hasSid_;
}
- (void) setHasSid:(BOOL) value {
  hasSid_ = !!value;
}
@synthesize sid;
- (BOOL) hasLoginId {
  return !!hasLoginId_;
}
- (void) setHasLoginId:(BOOL) value {
  hasLoginId_ = !!value;
}
@synthesize loginId;
- (BOOL) hasOrderId {
  return !!hasOrderId_;
}
- (void) setHasOrderId:(BOOL) value {
  hasOrderId_ = !!value;
}
@synthesize orderId;
- (BOOL) hasAmount {
  return !!hasAmount_;
}
- (void) setHasAmount:(BOOL) value {
  hasAmount_ = !!value;
}
@synthesize amount;
- (void) dealloc {
  self.sid = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.sid = @"";
    self.loginId = 0;
    self.orderId = 0L;
    self.amount = 0;
  }
  return self;
}
static OrderPaymentReq* defaultOrderPaymentReqInstance = nil;
+ (void) initialize {
  if (self == [OrderPaymentReq class]) {
    defaultOrderPaymentReqInstance = [[OrderPaymentReq alloc] init];
  }
}
+ (OrderPaymentReq*) defaultInstance {
  return defaultOrderPaymentReqInstance;
}
- (OrderPaymentReq*) defaultInstance {
  return defaultOrderPaymentReqInstance;
}
- (BOOL) isInitialized {
  if (!self.hasSid) {
    return NO;
  }
  if (!self.hasLoginId) {
    return NO;
  }
  if (!self.hasOrderId) {
    return NO;
  }
  if (!self.hasAmount) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasSid) {
    [output writeString:1 value:self.sid];
  }
  if (self.hasLoginId) {
    [output writeInt32:2 value:self.loginId];
  }
  if (self.hasOrderId) {
    [output writeInt64:3 value:self.orderId];
  }
  if (self.hasAmount) {
    [output writeDouble:4 value:self.amount];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasSid) {
    size += computeStringSize(1, self.sid);
  }
  if (self.hasLoginId) {
    size += computeInt32Size(2, self.loginId);
  }
  if (self.hasOrderId) {
    size += computeInt64Size(3, self.orderId);
  }
  if (self.hasAmount) {
    size += computeDoubleSize(4, self.amount);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (OrderPaymentReq*) parseFromData:(NSData*) data {
  return (OrderPaymentReq*)[[[OrderPaymentReq builder] mergeFromData:data] build];
}
+ (OrderPaymentReq*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (OrderPaymentReq*)[[[OrderPaymentReq builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (OrderPaymentReq*) parseFromInputStream:(NSInputStream*) input {
  return (OrderPaymentReq*)[[[OrderPaymentReq builder] mergeFromInputStream:input] build];
}
+ (OrderPaymentReq*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (OrderPaymentReq*)[[[OrderPaymentReq builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (OrderPaymentReq*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (OrderPaymentReq*)[[[OrderPaymentReq builder] mergeFromCodedInputStream:input] build];
}
+ (OrderPaymentReq*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (OrderPaymentReq*)[[[OrderPaymentReq builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (OrderPaymentReq_Builder*) builder {
  return [[[OrderPaymentReq_Builder alloc] init] autorelease];
}
+ (OrderPaymentReq_Builder*) builderWithPrototype:(OrderPaymentReq*) prototype {
  return [[OrderPaymentReq builder] mergeFrom:prototype];
}
- (OrderPaymentReq_Builder*) builder {
  return [OrderPaymentReq builder];
}
@end

@interface OrderPaymentReq_Builder()
@property (retain) OrderPaymentReq* result;
@end

@implementation OrderPaymentReq_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[OrderPaymentReq alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (OrderPaymentReq_Builder*) clear {
  self.result = [[[OrderPaymentReq alloc] init] autorelease];
  return self;
}
- (OrderPaymentReq_Builder*) clone {
  return [OrderPaymentReq builderWithPrototype:result];
}
- (OrderPaymentReq*) defaultInstance {
  return [OrderPaymentReq defaultInstance];
}
- (OrderPaymentReq*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (OrderPaymentReq*) buildPartial {
  OrderPaymentReq* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (OrderPaymentReq_Builder*) mergeFrom:(OrderPaymentReq*) other {
  if (other == [OrderPaymentReq defaultInstance]) {
    return self;
  }
  if (other.hasSid) {
    [self setSid:other.sid];
  }
  if (other.hasLoginId) {
    [self setLoginId:other.loginId];
  }
  if (other.hasOrderId) {
    [self setOrderId:other.orderId];
  }
  if (other.hasAmount) {
    [self setAmount:other.amount];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (OrderPaymentReq_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (OrderPaymentReq_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setSid:[input readString]];
        break;
      }
      case 16: {
        [self setLoginId:[input readInt32]];
        break;
      }
      case 24: {
        [self setOrderId:[input readInt64]];
        break;
      }
      case 33: {
        [self setAmount:[input readDouble]];
        break;
      }
    }
  }
}
- (BOOL) hasSid {
  return result.hasSid;
}
- (NSString*) sid {
  return result.sid;
}
- (OrderPaymentReq_Builder*) setSid:(NSString*) value {
  result.hasSid = YES;
  result.sid = value;
  return self;
}
- (OrderPaymentReq_Builder*) clearSid {
  result.hasSid = NO;
  result.sid = @"";
  return self;
}
- (BOOL) hasLoginId {
  return result.hasLoginId;
}
- (int32_t) loginId {
  return result.loginId;
}
- (OrderPaymentReq_Builder*) setLoginId:(int32_t) value {
  result.hasLoginId = YES;
  result.loginId = value;
  return self;
}
- (OrderPaymentReq_Builder*) clearLoginId {
  result.hasLoginId = NO;
  result.loginId = 0;
  return self;
}
- (BOOL) hasOrderId {
  return result.hasOrderId;
}
- (int64_t) orderId {
  return result.orderId;
}
- (OrderPaymentReq_Builder*) setOrderId:(int64_t) value {
  result.hasOrderId = YES;
  result.orderId = value;
  return self;
}
- (OrderPaymentReq_Builder*) clearOrderId {
  result.hasOrderId = NO;
  result.orderId = 0L;
  return self;
}
- (BOOL) hasAmount {
  return result.hasAmount;
}
- (Float64) amount {
  return result.amount;
}
- (OrderPaymentReq_Builder*) setAmount:(Float64) value {
  result.hasAmount = YES;
  result.amount = value;
  return self;
}
- (OrderPaymentReq_Builder*) clearAmount {
  result.hasAmount = NO;
  result.amount = 0;
  return self;
}
@end

@interface OrderPaymentRes ()
@property int32_t retCode;
@property (retain) NSString* sid;
@end

@implementation OrderPaymentRes

- (BOOL) hasRetCode {
  return !!hasRetCode_;
}
- (void) setHasRetCode:(BOOL) value {
  hasRetCode_ = !!value;
}
@synthesize retCode;
- (BOOL) hasSid {
  return !!hasSid_;
}
- (void) setHasSid:(BOOL) value {
  hasSid_ = !!value;
}
@synthesize sid;
- (void) dealloc {
  self.sid = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.retCode = 0;
    self.sid = @"";
  }
  return self;
}
static OrderPaymentRes* defaultOrderPaymentResInstance = nil;
+ (void) initialize {
  if (self == [OrderPaymentRes class]) {
    defaultOrderPaymentResInstance = [[OrderPaymentRes alloc] init];
  }
}
+ (OrderPaymentRes*) defaultInstance {
  return defaultOrderPaymentResInstance;
}
- (OrderPaymentRes*) defaultInstance {
  return defaultOrderPaymentResInstance;
}
- (BOOL) isInitialized {
  if (!self.hasRetCode) {
    return NO;
  }
  if (!self.hasSid) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasRetCode) {
    [output writeInt32:1 value:self.retCode];
  }
  if (self.hasSid) {
    [output writeString:2 value:self.sid];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasRetCode) {
    size += computeInt32Size(1, self.retCode);
  }
  if (self.hasSid) {
    size += computeStringSize(2, self.sid);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (OrderPaymentRes*) parseFromData:(NSData*) data {
  return (OrderPaymentRes*)[[[OrderPaymentRes builder] mergeFromData:data] build];
}
+ (OrderPaymentRes*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (OrderPaymentRes*)[[[OrderPaymentRes builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (OrderPaymentRes*) parseFromInputStream:(NSInputStream*) input {
  return (OrderPaymentRes*)[[[OrderPaymentRes builder] mergeFromInputStream:input] build];
}
+ (OrderPaymentRes*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (OrderPaymentRes*)[[[OrderPaymentRes builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (OrderPaymentRes*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (OrderPaymentRes*)[[[OrderPaymentRes builder] mergeFromCodedInputStream:input] build];
}
+ (OrderPaymentRes*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (OrderPaymentRes*)[[[OrderPaymentRes builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (OrderPaymentRes_Builder*) builder {
  return [[[OrderPaymentRes_Builder alloc] init] autorelease];
}
+ (OrderPaymentRes_Builder*) builderWithPrototype:(OrderPaymentRes*) prototype {
  return [[OrderPaymentRes builder] mergeFrom:prototype];
}
- (OrderPaymentRes_Builder*) builder {
  return [OrderPaymentRes builder];
}
@end

@interface OrderPaymentRes_Builder()
@property (retain) OrderPaymentRes* result;
@end

@implementation OrderPaymentRes_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[OrderPaymentRes alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (OrderPaymentRes_Builder*) clear {
  self.result = [[[OrderPaymentRes alloc] init] autorelease];
  return self;
}
- (OrderPaymentRes_Builder*) clone {
  return [OrderPaymentRes builderWithPrototype:result];
}
- (OrderPaymentRes*) defaultInstance {
  return [OrderPaymentRes defaultInstance];
}
- (OrderPaymentRes*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (OrderPaymentRes*) buildPartial {
  OrderPaymentRes* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (OrderPaymentRes_Builder*) mergeFrom:(OrderPaymentRes*) other {
  if (other == [OrderPaymentRes defaultInstance]) {
    return self;
  }
  if (other.hasRetCode) {
    [self setRetCode:other.retCode];
  }
  if (other.hasSid) {
    [self setSid:other.sid];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (OrderPaymentRes_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (OrderPaymentRes_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setRetCode:[input readInt32]];
        break;
      }
      case 18: {
        [self setSid:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasRetCode {
  return result.hasRetCode;
}
- (int32_t) retCode {
  return result.retCode;
}
- (OrderPaymentRes_Builder*) setRetCode:(int32_t) value {
  result.hasRetCode = YES;
  result.retCode = value;
  return self;
}
- (OrderPaymentRes_Builder*) clearRetCode {
  result.hasRetCode = NO;
  result.retCode = 0;
  return self;
}
- (BOOL) hasSid {
  return result.hasSid;
}
- (NSString*) sid {
  return result.sid;
}
- (OrderPaymentRes_Builder*) setSid:(NSString*) value {
  result.hasSid = YES;
  result.sid = value;
  return self;
}
- (OrderPaymentRes_Builder*) clearSid {
  result.hasSid = NO;
  result.sid = @"";
  return self;
}
@end

@interface OrderGroupInfo ()
@property int64_t orderId;
@property (retain) NSString* orderNum;
@property int32_t serveId;
@property (retain) NSString* serveNum;
@property (retain) NSString* serveName;
@property Float64 price;
@property Float64 discount;
@property int32_t quantity;
@property Float64 amount;
@property int32_t status;
@property (retain) NSString* createDate;
@property (retain) NSString* paidDate;
@property (retain) NSString* userBarcode;
@property (retain) NSString* userPickPwd;
@property (retain) NSString* desc;
@property int32_t gridId;
@property (retain) NSString* gridInfo;
@end

@implementation OrderGroupInfo

- (BOOL) hasOrderId {
  return !!hasOrderId_;
}
- (void) setHasOrderId:(BOOL) value {
  hasOrderId_ = !!value;
}
@synthesize orderId;
- (BOOL) hasOrderNum {
  return !!hasOrderNum_;
}
- (void) setHasOrderNum:(BOOL) value {
  hasOrderNum_ = !!value;
}
@synthesize orderNum;
- (BOOL) hasServeId {
  return !!hasServeId_;
}
- (void) setHasServeId:(BOOL) value {
  hasServeId_ = !!value;
}
@synthesize serveId;
- (BOOL) hasServeNum {
  return !!hasServeNum_;
}
- (void) setHasServeNum:(BOOL) value {
  hasServeNum_ = !!value;
}
@synthesize serveNum;
- (BOOL) hasServeName {
  return !!hasServeName_;
}
- (void) setHasServeName:(BOOL) value {
  hasServeName_ = !!value;
}
@synthesize serveName;
- (BOOL) hasPrice {
  return !!hasPrice_;
}
- (void) setHasPrice:(BOOL) value {
  hasPrice_ = !!value;
}
@synthesize price;
- (BOOL) hasDiscount {
  return !!hasDiscount_;
}
- (void) setHasDiscount:(BOOL) value {
  hasDiscount_ = !!value;
}
@synthesize discount;
- (BOOL) hasQuantity {
  return !!hasQuantity_;
}
- (void) setHasQuantity:(BOOL) value {
  hasQuantity_ = !!value;
}
@synthesize quantity;
- (BOOL) hasAmount {
  return !!hasAmount_;
}
- (void) setHasAmount:(BOOL) value {
  hasAmount_ = !!value;
}
@synthesize amount;
- (BOOL) hasStatus {
  return !!hasStatus_;
}
- (void) setHasStatus:(BOOL) value {
  hasStatus_ = !!value;
}
@synthesize status;
- (BOOL) hasCreateDate {
  return !!hasCreateDate_;
}
- (void) setHasCreateDate:(BOOL) value {
  hasCreateDate_ = !!value;
}
@synthesize createDate;
- (BOOL) hasPaidDate {
  return !!hasPaidDate_;
}
- (void) setHasPaidDate:(BOOL) value {
  hasPaidDate_ = !!value;
}
@synthesize paidDate;
- (BOOL) hasUserBarcode {
  return !!hasUserBarcode_;
}
- (void) setHasUserBarcode:(BOOL) value {
  hasUserBarcode_ = !!value;
}
@synthesize userBarcode;
- (BOOL) hasUserPickPwd {
  return !!hasUserPickPwd_;
}
- (void) setHasUserPickPwd:(BOOL) value {
  hasUserPickPwd_ = !!value;
}
@synthesize userPickPwd;
- (BOOL) hasDesc {
  return !!hasDesc_;
}
- (void) setHasDesc:(BOOL) value {
  hasDesc_ = !!value;
}
@synthesize desc;
- (BOOL) hasGridId {
  return !!hasGridId_;
}
- (void) setHasGridId:(BOOL) value {
  hasGridId_ = !!value;
}
@synthesize gridId;
- (BOOL) hasGridInfo {
  return !!hasGridInfo_;
}
- (void) setHasGridInfo:(BOOL) value {
  hasGridInfo_ = !!value;
}
@synthesize gridInfo;
- (void) dealloc {
  self.orderNum = nil;
  self.serveNum = nil;
  self.serveName = nil;
  self.createDate = nil;
  self.paidDate = nil;
  self.userBarcode = nil;
  self.userPickPwd = nil;
  self.desc = nil;
  self.gridInfo = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.orderId = 0L;
    self.orderNum = @"";
    self.serveId = 0;
    self.serveNum = @"";
    self.serveName = @"";
    self.price = 0;
    self.discount = 0;
    self.quantity = 0;
    self.amount = 0;
    self.status = 0;
    self.createDate = @"";
    self.paidDate = @"";
    self.userBarcode = @"";
    self.userPickPwd = @"";
    self.desc = @"";
    self.gridId = 0;
    self.gridInfo = @"";
  }
  return self;
}
static OrderGroupInfo* defaultOrderGroupInfoInstance = nil;
+ (void) initialize {
  if (self == [OrderGroupInfo class]) {
    defaultOrderGroupInfoInstance = [[OrderGroupInfo alloc] init];
  }
}
+ (OrderGroupInfo*) defaultInstance {
  return defaultOrderGroupInfoInstance;
}
- (OrderGroupInfo*) defaultInstance {
  return defaultOrderGroupInfoInstance;
}
- (BOOL) isInitialized {
  if (!self.hasOrderId) {
    return NO;
  }
  if (!self.hasOrderNum) {
    return NO;
  }
  if (!self.hasServeId) {
    return NO;
  }
  if (!self.hasServeNum) {
    return NO;
  }
  if (!self.hasServeName) {
    return NO;
  }
  if (!self.hasPrice) {
    return NO;
  }
  if (!self.hasDiscount) {
    return NO;
  }
  if (!self.hasQuantity) {
    return NO;
  }
  if (!self.hasAmount) {
    return NO;
  }
  if (!self.hasStatus) {
    return NO;
  }
  if (!self.hasCreateDate) {
    return NO;
  }
  if (!self.hasPaidDate) {
    return NO;
  }
  if (!self.hasUserBarcode) {
    return NO;
  }
  if (!self.hasUserPickPwd) {
    return NO;
  }
  if (!self.hasDesc) {
    return NO;
  }
  if (!self.hasGridId) {
    return NO;
  }
  if (!self.hasGridInfo) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasOrderId) {
    [output writeInt64:1 value:self.orderId];
  }
  if (self.hasOrderNum) {
    [output writeString:2 value:self.orderNum];
  }
  if (self.hasServeId) {
    [output writeInt32:3 value:self.serveId];
  }
  if (self.hasServeNum) {
    [output writeString:4 value:self.serveNum];
  }
  if (self.hasServeName) {
    [output writeString:5 value:self.serveName];
  }
  if (self.hasPrice) {
    [output writeDouble:6 value:self.price];
  }
  if (self.hasDiscount) {
    [output writeDouble:7 value:self.discount];
  }
  if (self.hasQuantity) {
    [output writeInt32:8 value:self.quantity];
  }
  if (self.hasAmount) {
    [output writeDouble:9 value:self.amount];
  }
  if (self.hasStatus) {
    [output writeInt32:10 value:self.status];
  }
  if (self.hasCreateDate) {
    [output writeString:11 value:self.createDate];
  }
  if (self.hasPaidDate) {
    [output writeString:12 value:self.paidDate];
  }
  if (self.hasUserBarcode) {
    [output writeString:13 value:self.userBarcode];
  }
  if (self.hasUserPickPwd) {
    [output writeString:14 value:self.userPickPwd];
  }
  if (self.hasDesc) {
    [output writeString:15 value:self.desc];
  }
  if (self.hasGridId) {
    [output writeInt32:16 value:self.gridId];
  }
  if (self.hasGridInfo) {
    [output writeString:17 value:self.gridInfo];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasOrderId) {
    size += computeInt64Size(1, self.orderId);
  }
  if (self.hasOrderNum) {
    size += computeStringSize(2, self.orderNum);
  }
  if (self.hasServeId) {
    size += computeInt32Size(3, self.serveId);
  }
  if (self.hasServeNum) {
    size += computeStringSize(4, self.serveNum);
  }
  if (self.hasServeName) {
    size += computeStringSize(5, self.serveName);
  }
  if (self.hasPrice) {
    size += computeDoubleSize(6, self.price);
  }
  if (self.hasDiscount) {
    size += computeDoubleSize(7, self.discount);
  }
  if (self.hasQuantity) {
    size += computeInt32Size(8, self.quantity);
  }
  if (self.hasAmount) {
    size += computeDoubleSize(9, self.amount);
  }
  if (self.hasStatus) {
    size += computeInt32Size(10, self.status);
  }
  if (self.hasCreateDate) {
    size += computeStringSize(11, self.createDate);
  }
  if (self.hasPaidDate) {
    size += computeStringSize(12, self.paidDate);
  }
  if (self.hasUserBarcode) {
    size += computeStringSize(13, self.userBarcode);
  }
  if (self.hasUserPickPwd) {
    size += computeStringSize(14, self.userPickPwd);
  }
  if (self.hasDesc) {
    size += computeStringSize(15, self.desc);
  }
  if (self.hasGridId) {
    size += computeInt32Size(16, self.gridId);
  }
  if (self.hasGridInfo) {
    size += computeStringSize(17, self.gridInfo);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (OrderGroupInfo*) parseFromData:(NSData*) data {
  return (OrderGroupInfo*)[[[OrderGroupInfo builder] mergeFromData:data] build];
}
+ (OrderGroupInfo*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (OrderGroupInfo*)[[[OrderGroupInfo builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (OrderGroupInfo*) parseFromInputStream:(NSInputStream*) input {
  return (OrderGroupInfo*)[[[OrderGroupInfo builder] mergeFromInputStream:input] build];
}
+ (OrderGroupInfo*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (OrderGroupInfo*)[[[OrderGroupInfo builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (OrderGroupInfo*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (OrderGroupInfo*)[[[OrderGroupInfo builder] mergeFromCodedInputStream:input] build];
}
+ (OrderGroupInfo*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (OrderGroupInfo*)[[[OrderGroupInfo builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (OrderGroupInfo_Builder*) builder {
  return [[[OrderGroupInfo_Builder alloc] init] autorelease];
}
+ (OrderGroupInfo_Builder*) builderWithPrototype:(OrderGroupInfo*) prototype {
  return [[OrderGroupInfo builder] mergeFrom:prototype];
}
- (OrderGroupInfo_Builder*) builder {
  return [OrderGroupInfo builder];
}
@end

@interface OrderGroupInfo_Builder()
@property (retain) OrderGroupInfo* result;
@end

@implementation OrderGroupInfo_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[OrderGroupInfo alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (OrderGroupInfo_Builder*) clear {
  self.result = [[[OrderGroupInfo alloc] init] autorelease];
  return self;
}
- (OrderGroupInfo_Builder*) clone {
  return [OrderGroupInfo builderWithPrototype:result];
}
- (OrderGroupInfo*) defaultInstance {
  return [OrderGroupInfo defaultInstance];
}
- (OrderGroupInfo*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (OrderGroupInfo*) buildPartial {
  OrderGroupInfo* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (OrderGroupInfo_Builder*) mergeFrom:(OrderGroupInfo*) other {
  if (other == [OrderGroupInfo defaultInstance]) {
    return self;
  }
  if (other.hasOrderId) {
    [self setOrderId:other.orderId];
  }
  if (other.hasOrderNum) {
    [self setOrderNum:other.orderNum];
  }
  if (other.hasServeId) {
    [self setServeId:other.serveId];
  }
  if (other.hasServeNum) {
    [self setServeNum:other.serveNum];
  }
  if (other.hasServeName) {
    [self setServeName:other.serveName];
  }
  if (other.hasPrice) {
    [self setPrice:other.price];
  }
  if (other.hasDiscount) {
    [self setDiscount:other.discount];
  }
  if (other.hasQuantity) {
    [self setQuantity:other.quantity];
  }
  if (other.hasAmount) {
    [self setAmount:other.amount];
  }
  if (other.hasStatus) {
    [self setStatus:other.status];
  }
  if (other.hasCreateDate) {
    [self setCreateDate:other.createDate];
  }
  if (other.hasPaidDate) {
    [self setPaidDate:other.paidDate];
  }
  if (other.hasUserBarcode) {
    [self setUserBarcode:other.userBarcode];
  }
  if (other.hasUserPickPwd) {
    [self setUserPickPwd:other.userPickPwd];
  }
  if (other.hasDesc) {
    [self setDesc:other.desc];
  }
  if (other.hasGridId) {
    [self setGridId:other.gridId];
  }
  if (other.hasGridInfo) {
    [self setGridInfo:other.gridInfo];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (OrderGroupInfo_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (OrderGroupInfo_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setOrderId:[input readInt64]];
        break;
      }
      case 18: {
        [self setOrderNum:[input readString]];
        break;
      }
      case 24: {
        [self setServeId:[input readInt32]];
        break;
      }
      case 34: {
        [self setServeNum:[input readString]];
        break;
      }
      case 42: {
        [self setServeName:[input readString]];
        break;
      }
      case 49: {
        [self setPrice:[input readDouble]];
        break;
      }
      case 57: {
        [self setDiscount:[input readDouble]];
        break;
      }
      case 64: {
        [self setQuantity:[input readInt32]];
        break;
      }
      case 73: {
        [self setAmount:[input readDouble]];
        break;
      }
      case 80: {
        [self setStatus:[input readInt32]];
        break;
      }
      case 90: {
        [self setCreateDate:[input readString]];
        break;
      }
      case 98: {
        [self setPaidDate:[input readString]];
        break;
      }
      case 106: {
        [self setUserBarcode:[input readString]];
        break;
      }
      case 114: {
        [self setUserPickPwd:[input readString]];
        break;
      }
      case 122: {
        [self setDesc:[input readString]];
        break;
      }
      case 128: {
        [self setGridId:[input readInt32]];
        break;
      }
      case 138: {
        [self setGridInfo:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasOrderId {
  return result.hasOrderId;
}
- (int64_t) orderId {
  return result.orderId;
}
- (OrderGroupInfo_Builder*) setOrderId:(int64_t) value {
  result.hasOrderId = YES;
  result.orderId = value;
  return self;
}
- (OrderGroupInfo_Builder*) clearOrderId {
  result.hasOrderId = NO;
  result.orderId = 0L;
  return self;
}
- (BOOL) hasOrderNum {
  return result.hasOrderNum;
}
- (NSString*) orderNum {
  return result.orderNum;
}
- (OrderGroupInfo_Builder*) setOrderNum:(NSString*) value {
  result.hasOrderNum = YES;
  result.orderNum = value;
  return self;
}
- (OrderGroupInfo_Builder*) clearOrderNum {
  result.hasOrderNum = NO;
  result.orderNum = @"";
  return self;
}
- (BOOL) hasServeId {
  return result.hasServeId;
}
- (int32_t) serveId {
  return result.serveId;
}
- (OrderGroupInfo_Builder*) setServeId:(int32_t) value {
  result.hasServeId = YES;
  result.serveId = value;
  return self;
}
- (OrderGroupInfo_Builder*) clearServeId {
  result.hasServeId = NO;
  result.serveId = 0;
  return self;
}
- (BOOL) hasServeNum {
  return result.hasServeNum;
}
- (NSString*) serveNum {
  return result.serveNum;
}
- (OrderGroupInfo_Builder*) setServeNum:(NSString*) value {
  result.hasServeNum = YES;
  result.serveNum = value;
  return self;
}
- (OrderGroupInfo_Builder*) clearServeNum {
  result.hasServeNum = NO;
  result.serveNum = @"";
  return self;
}
- (BOOL) hasServeName {
  return result.hasServeName;
}
- (NSString*) serveName {
  return result.serveName;
}
- (OrderGroupInfo_Builder*) setServeName:(NSString*) value {
  result.hasServeName = YES;
  result.serveName = value;
  return self;
}
- (OrderGroupInfo_Builder*) clearServeName {
  result.hasServeName = NO;
  result.serveName = @"";
  return self;
}
- (BOOL) hasPrice {
  return result.hasPrice;
}
- (Float64) price {
  return result.price;
}
- (OrderGroupInfo_Builder*) setPrice:(Float64) value {
  result.hasPrice = YES;
  result.price = value;
  return self;
}
- (OrderGroupInfo_Builder*) clearPrice {
  result.hasPrice = NO;
  result.price = 0;
  return self;
}
- (BOOL) hasDiscount {
  return result.hasDiscount;
}
- (Float64) discount {
  return result.discount;
}
- (OrderGroupInfo_Builder*) setDiscount:(Float64) value {
  result.hasDiscount = YES;
  result.discount = value;
  return self;
}
- (OrderGroupInfo_Builder*) clearDiscount {
  result.hasDiscount = NO;
  result.discount = 0;
  return self;
}
- (BOOL) hasQuantity {
  return result.hasQuantity;
}
- (int32_t) quantity {
  return result.quantity;
}
- (OrderGroupInfo_Builder*) setQuantity:(int32_t) value {
  result.hasQuantity = YES;
  result.quantity = value;
  return self;
}
- (OrderGroupInfo_Builder*) clearQuantity {
  result.hasQuantity = NO;
  result.quantity = 0;
  return self;
}
- (BOOL) hasAmount {
  return result.hasAmount;
}
- (Float64) amount {
  return result.amount;
}
- (OrderGroupInfo_Builder*) setAmount:(Float64) value {
  result.hasAmount = YES;
  result.amount = value;
  return self;
}
- (OrderGroupInfo_Builder*) clearAmount {
  result.hasAmount = NO;
  result.amount = 0;
  return self;
}
- (BOOL) hasStatus {
  return result.hasStatus;
}
- (int32_t) status {
  return result.status;
}
- (OrderGroupInfo_Builder*) setStatus:(int32_t) value {
  result.hasStatus = YES;
  result.status = value;
  return self;
}
- (OrderGroupInfo_Builder*) clearStatus {
  result.hasStatus = NO;
  result.status = 0;
  return self;
}
- (BOOL) hasCreateDate {
  return result.hasCreateDate;
}
- (NSString*) createDate {
  return result.createDate;
}
- (OrderGroupInfo_Builder*) setCreateDate:(NSString*) value {
  result.hasCreateDate = YES;
  result.createDate = value;
  return self;
}
- (OrderGroupInfo_Builder*) clearCreateDate {
  result.hasCreateDate = NO;
  result.createDate = @"";
  return self;
}
- (BOOL) hasPaidDate {
  return result.hasPaidDate;
}
- (NSString*) paidDate {
  return result.paidDate;
}
- (OrderGroupInfo_Builder*) setPaidDate:(NSString*) value {
  result.hasPaidDate = YES;
  result.paidDate = value;
  return self;
}
- (OrderGroupInfo_Builder*) clearPaidDate {
  result.hasPaidDate = NO;
  result.paidDate = @"";
  return self;
}
- (BOOL) hasUserBarcode {
  return result.hasUserBarcode;
}
- (NSString*) userBarcode {
  return result.userBarcode;
}
- (OrderGroupInfo_Builder*) setUserBarcode:(NSString*) value {
  result.hasUserBarcode = YES;
  result.userBarcode = value;
  return self;
}
- (OrderGroupInfo_Builder*) clearUserBarcode {
  result.hasUserBarcode = NO;
  result.userBarcode = @"";
  return self;
}
- (BOOL) hasUserPickPwd {
  return result.hasUserPickPwd;
}
- (NSString*) userPickPwd {
  return result.userPickPwd;
}
- (OrderGroupInfo_Builder*) setUserPickPwd:(NSString*) value {
  result.hasUserPickPwd = YES;
  result.userPickPwd = value;
  return self;
}
- (OrderGroupInfo_Builder*) clearUserPickPwd {
  result.hasUserPickPwd = NO;
  result.userPickPwd = @"";
  return self;
}
- (BOOL) hasDesc {
  return result.hasDesc;
}
- (NSString*) desc {
  return result.desc;
}
- (OrderGroupInfo_Builder*) setDesc:(NSString*) value {
  result.hasDesc = YES;
  result.desc = value;
  return self;
}
- (OrderGroupInfo_Builder*) clearDesc {
  result.hasDesc = NO;
  result.desc = @"";
  return self;
}
- (BOOL) hasGridId {
  return result.hasGridId;
}
- (int32_t) gridId {
  return result.gridId;
}
- (OrderGroupInfo_Builder*) setGridId:(int32_t) value {
  result.hasGridId = YES;
  result.gridId = value;
  return self;
}
- (OrderGroupInfo_Builder*) clearGridId {
  result.hasGridId = NO;
  result.gridId = 0;
  return self;
}
- (BOOL) hasGridInfo {
  return result.hasGridInfo;
}
- (NSString*) gridInfo {
  return result.gridInfo;
}
- (OrderGroupInfo_Builder*) setGridInfo:(NSString*) value {
  result.hasGridInfo = YES;
  result.gridInfo = value;
  return self;
}
- (OrderGroupInfo_Builder*) clearGridInfo {
  result.hasGridInfo = NO;
  result.gridInfo = @"";
  return self;
}
@end

@interface UserOrderListQueryReq ()
@property (retain) NSString* sid;
@property int32_t loginId;
@property int32_t status;
@end

@implementation UserOrderListQueryReq

- (BOOL) hasSid {
  return !!hasSid_;
}
- (void) setHasSid:(BOOL) value {
  hasSid_ = !!value;
}
@synthesize sid;
- (BOOL) hasLoginId {
  return !!hasLoginId_;
}
- (void) setHasLoginId:(BOOL) value {
  hasLoginId_ = !!value;
}
@synthesize loginId;
- (BOOL) hasStatus {
  return !!hasStatus_;
}
- (void) setHasStatus:(BOOL) value {
  hasStatus_ = !!value;
}
@synthesize status;
- (void) dealloc {
  self.sid = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.sid = @"";
    self.loginId = 0;
    self.status = 0;
  }
  return self;
}
static UserOrderListQueryReq* defaultUserOrderListQueryReqInstance = nil;
+ (void) initialize {
  if (self == [UserOrderListQueryReq class]) {
    defaultUserOrderListQueryReqInstance = [[UserOrderListQueryReq alloc] init];
  }
}
+ (UserOrderListQueryReq*) defaultInstance {
  return defaultUserOrderListQueryReqInstance;
}
- (UserOrderListQueryReq*) defaultInstance {
  return defaultUserOrderListQueryReqInstance;
}
- (BOOL) isInitialized {
  if (!self.hasSid) {
    return NO;
  }
  if (!self.hasLoginId) {
    return NO;
  }
  if (!self.hasStatus) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasSid) {
    [output writeString:1 value:self.sid];
  }
  if (self.hasLoginId) {
    [output writeInt32:2 value:self.loginId];
  }
  if (self.hasStatus) {
    [output writeInt32:3 value:self.status];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasSid) {
    size += computeStringSize(1, self.sid);
  }
  if (self.hasLoginId) {
    size += computeInt32Size(2, self.loginId);
  }
  if (self.hasStatus) {
    size += computeInt32Size(3, self.status);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (UserOrderListQueryReq*) parseFromData:(NSData*) data {
  return (UserOrderListQueryReq*)[[[UserOrderListQueryReq builder] mergeFromData:data] build];
}
+ (UserOrderListQueryReq*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (UserOrderListQueryReq*)[[[UserOrderListQueryReq builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (UserOrderListQueryReq*) parseFromInputStream:(NSInputStream*) input {
  return (UserOrderListQueryReq*)[[[UserOrderListQueryReq builder] mergeFromInputStream:input] build];
}
+ (UserOrderListQueryReq*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (UserOrderListQueryReq*)[[[UserOrderListQueryReq builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (UserOrderListQueryReq*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (UserOrderListQueryReq*)[[[UserOrderListQueryReq builder] mergeFromCodedInputStream:input] build];
}
+ (UserOrderListQueryReq*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (UserOrderListQueryReq*)[[[UserOrderListQueryReq builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (UserOrderListQueryReq_Builder*) builder {
  return [[[UserOrderListQueryReq_Builder alloc] init] autorelease];
}
+ (UserOrderListQueryReq_Builder*) builderWithPrototype:(UserOrderListQueryReq*) prototype {
  return [[UserOrderListQueryReq builder] mergeFrom:prototype];
}
- (UserOrderListQueryReq_Builder*) builder {
  return [UserOrderListQueryReq builder];
}
@end

@interface UserOrderListQueryReq_Builder()
@property (retain) UserOrderListQueryReq* result;
@end

@implementation UserOrderListQueryReq_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[UserOrderListQueryReq alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (UserOrderListQueryReq_Builder*) clear {
  self.result = [[[UserOrderListQueryReq alloc] init] autorelease];
  return self;
}
- (UserOrderListQueryReq_Builder*) clone {
  return [UserOrderListQueryReq builderWithPrototype:result];
}
- (UserOrderListQueryReq*) defaultInstance {
  return [UserOrderListQueryReq defaultInstance];
}
- (UserOrderListQueryReq*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (UserOrderListQueryReq*) buildPartial {
  UserOrderListQueryReq* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (UserOrderListQueryReq_Builder*) mergeFrom:(UserOrderListQueryReq*) other {
  if (other == [UserOrderListQueryReq defaultInstance]) {
    return self;
  }
  if (other.hasSid) {
    [self setSid:other.sid];
  }
  if (other.hasLoginId) {
    [self setLoginId:other.loginId];
  }
  if (other.hasStatus) {
    [self setStatus:other.status];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (UserOrderListQueryReq_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (UserOrderListQueryReq_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setSid:[input readString]];
        break;
      }
      case 16: {
        [self setLoginId:[input readInt32]];
        break;
      }
      case 24: {
        [self setStatus:[input readInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasSid {
  return result.hasSid;
}
- (NSString*) sid {
  return result.sid;
}
- (UserOrderListQueryReq_Builder*) setSid:(NSString*) value {
  result.hasSid = YES;
  result.sid = value;
  return self;
}
- (UserOrderListQueryReq_Builder*) clearSid {
  result.hasSid = NO;
  result.sid = @"";
  return self;
}
- (BOOL) hasLoginId {
  return result.hasLoginId;
}
- (int32_t) loginId {
  return result.loginId;
}
- (UserOrderListQueryReq_Builder*) setLoginId:(int32_t) value {
  result.hasLoginId = YES;
  result.loginId = value;
  return self;
}
- (UserOrderListQueryReq_Builder*) clearLoginId {
  result.hasLoginId = NO;
  result.loginId = 0;
  return self;
}
- (BOOL) hasStatus {
  return result.hasStatus;
}
- (int32_t) status {
  return result.status;
}
- (UserOrderListQueryReq_Builder*) setStatus:(int32_t) value {
  result.hasStatus = YES;
  result.status = value;
  return self;
}
- (UserOrderListQueryReq_Builder*) clearStatus {
  result.hasStatus = NO;
  result.status = 0;
  return self;
}
@end

@interface UserOrderListQueryRes ()
@property int32_t retCode;
@property (retain) NSString* sid;
@property int32_t loginId;
@property (retain) NSMutableArray* mutableOrderGroupsList;
@end

@implementation UserOrderListQueryRes

- (BOOL) hasRetCode {
  return !!hasRetCode_;
}
- (void) setHasRetCode:(BOOL) value {
  hasRetCode_ = !!value;
}
@synthesize retCode;
- (BOOL) hasSid {
  return !!hasSid_;
}
- (void) setHasSid:(BOOL) value {
  hasSid_ = !!value;
}
@synthesize sid;
- (BOOL) hasLoginId {
  return !!hasLoginId_;
}
- (void) setHasLoginId:(BOOL) value {
  hasLoginId_ = !!value;
}
@synthesize loginId;
@synthesize mutableOrderGroupsList;
- (void) dealloc {
  self.sid = nil;
  self.mutableOrderGroupsList = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.retCode = 0;
    self.sid = @"";
    self.loginId = 0;
  }
  return self;
}
static UserOrderListQueryRes* defaultUserOrderListQueryResInstance = nil;
+ (void) initialize {
  if (self == [UserOrderListQueryRes class]) {
    defaultUserOrderListQueryResInstance = [[UserOrderListQueryRes alloc] init];
  }
}
+ (UserOrderListQueryRes*) defaultInstance {
  return defaultUserOrderListQueryResInstance;
}
- (UserOrderListQueryRes*) defaultInstance {
  return defaultUserOrderListQueryResInstance;
}
- (NSArray*) orderGroupsList {
  return mutableOrderGroupsList;
}
- (OrderGroupInfo*) orderGroupsAtIndex:(int32_t) index {
  id value = [mutableOrderGroupsList objectAtIndex:index];
  return value;
}
- (BOOL) isInitialized {
  if (!self.hasRetCode) {
    return NO;
  }
  if (!self.hasSid) {
    return NO;
  }
  if (!self.hasLoginId) {
    return NO;
  }
  for (OrderGroupInfo* element in self.orderGroupsList) {
    if (!element.isInitialized) {
      return NO;
    }
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasRetCode) {
    [output writeInt32:1 value:self.retCode];
  }
  if (self.hasSid) {
    [output writeString:2 value:self.sid];
  }
  if (self.hasLoginId) {
    [output writeInt32:3 value:self.loginId];
  }
  for (OrderGroupInfo* element in self.orderGroupsList) {
    [output writeMessage:4 value:element];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasRetCode) {
    size += computeInt32Size(1, self.retCode);
  }
  if (self.hasSid) {
    size += computeStringSize(2, self.sid);
  }
  if (self.hasLoginId) {
    size += computeInt32Size(3, self.loginId);
  }
  for (OrderGroupInfo* element in self.orderGroupsList) {
    size += computeMessageSize(4, element);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (UserOrderListQueryRes*) parseFromData:(NSData*) data {
  return (UserOrderListQueryRes*)[[[UserOrderListQueryRes builder] mergeFromData:data] build];
}
+ (UserOrderListQueryRes*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (UserOrderListQueryRes*)[[[UserOrderListQueryRes builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (UserOrderListQueryRes*) parseFromInputStream:(NSInputStream*) input {
  return (UserOrderListQueryRes*)[[[UserOrderListQueryRes builder] mergeFromInputStream:input] build];
}
+ (UserOrderListQueryRes*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (UserOrderListQueryRes*)[[[UserOrderListQueryRes builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (UserOrderListQueryRes*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (UserOrderListQueryRes*)[[[UserOrderListQueryRes builder] mergeFromCodedInputStream:input] build];
}
+ (UserOrderListQueryRes*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (UserOrderListQueryRes*)[[[UserOrderListQueryRes builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (UserOrderListQueryRes_Builder*) builder {
  return [[[UserOrderListQueryRes_Builder alloc] init] autorelease];
}
+ (UserOrderListQueryRes_Builder*) builderWithPrototype:(UserOrderListQueryRes*) prototype {
  return [[UserOrderListQueryRes builder] mergeFrom:prototype];
}
- (UserOrderListQueryRes_Builder*) builder {
  return [UserOrderListQueryRes builder];
}
@end

@interface UserOrderListQueryRes_Builder()
@property (retain) UserOrderListQueryRes* result;
@end

@implementation UserOrderListQueryRes_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[UserOrderListQueryRes alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (UserOrderListQueryRes_Builder*) clear {
  self.result = [[[UserOrderListQueryRes alloc] init] autorelease];
  return self;
}
- (UserOrderListQueryRes_Builder*) clone {
  return [UserOrderListQueryRes builderWithPrototype:result];
}
- (UserOrderListQueryRes*) defaultInstance {
  return [UserOrderListQueryRes defaultInstance];
}
- (UserOrderListQueryRes*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (UserOrderListQueryRes*) buildPartial {
  UserOrderListQueryRes* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (UserOrderListQueryRes_Builder*) mergeFrom:(UserOrderListQueryRes*) other {
  if (other == [UserOrderListQueryRes defaultInstance]) {
    return self;
  }
  if (other.hasRetCode) {
    [self setRetCode:other.retCode];
  }
  if (other.hasSid) {
    [self setSid:other.sid];
  }
  if (other.hasLoginId) {
    [self setLoginId:other.loginId];
  }
  if (other.mutableOrderGroupsList.count > 0) {
    if (result.mutableOrderGroupsList == nil) {
      result.mutableOrderGroupsList = [NSMutableArray array];
    }
    [result.mutableOrderGroupsList addObjectsFromArray:other.mutableOrderGroupsList];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (UserOrderListQueryRes_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (UserOrderListQueryRes_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setRetCode:[input readInt32]];
        break;
      }
      case 18: {
        [self setSid:[input readString]];
        break;
      }
      case 24: {
        [self setLoginId:[input readInt32]];
        break;
      }
      case 34: {
        OrderGroupInfo_Builder* subBuilder = [OrderGroupInfo builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addOrderGroups:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL) hasRetCode {
  return result.hasRetCode;
}
- (int32_t) retCode {
  return result.retCode;
}
- (UserOrderListQueryRes_Builder*) setRetCode:(int32_t) value {
  result.hasRetCode = YES;
  result.retCode = value;
  return self;
}
- (UserOrderListQueryRes_Builder*) clearRetCode {
  result.hasRetCode = NO;
  result.retCode = 0;
  return self;
}
- (BOOL) hasSid {
  return result.hasSid;
}
- (NSString*) sid {
  return result.sid;
}
- (UserOrderListQueryRes_Builder*) setSid:(NSString*) value {
  result.hasSid = YES;
  result.sid = value;
  return self;
}
- (UserOrderListQueryRes_Builder*) clearSid {
  result.hasSid = NO;
  result.sid = @"";
  return self;
}
- (BOOL) hasLoginId {
  return result.hasLoginId;
}
- (int32_t) loginId {
  return result.loginId;
}
- (UserOrderListQueryRes_Builder*) setLoginId:(int32_t) value {
  result.hasLoginId = YES;
  result.loginId = value;
  return self;
}
- (UserOrderListQueryRes_Builder*) clearLoginId {
  result.hasLoginId = NO;
  result.loginId = 0;
  return self;
}
- (NSArray*) orderGroupsList {
  if (result.mutableOrderGroupsList == nil) { return [NSArray array]; }
  return result.mutableOrderGroupsList;
}
- (OrderGroupInfo*) orderGroupsAtIndex:(int32_t) index {
  return [result orderGroupsAtIndex:index];
}
- (UserOrderListQueryRes_Builder*) replaceOrderGroupsAtIndex:(int32_t) index with:(OrderGroupInfo*) value {
  [result.mutableOrderGroupsList replaceObjectAtIndex:index withObject:value];
  return self;
}
- (UserOrderListQueryRes_Builder*) addAllOrderGroups:(NSArray*) values {
  if (result.mutableOrderGroupsList == nil) {
    result.mutableOrderGroupsList = [NSMutableArray array];
  }
  [result.mutableOrderGroupsList addObjectsFromArray:values];
  return self;
}
- (UserOrderListQueryRes_Builder*) clearOrderGroupsList {
  result.mutableOrderGroupsList = nil;
  return self;
}
- (UserOrderListQueryRes_Builder*) addOrderGroups:(OrderGroupInfo*) value {
  if (result.mutableOrderGroupsList == nil) {
    result.mutableOrderGroupsList = [NSMutableArray array];
  }
  [result.mutableOrderGroupsList addObject:value];
  return self;
}
@end

@interface OrderBarcodeBindReq ()
@property (retain) NSString* sid;
@property int32_t loginId;
@property int64_t orderId;
@property (retain) NSString* barcode;
@property int32_t bindType;
@end

@implementation OrderBarcodeBindReq

- (BOOL) hasSid {
  return !!hasSid_;
}
- (void) setHasSid:(BOOL) value {
  hasSid_ = !!value;
}
@synthesize sid;
- (BOOL) hasLoginId {
  return !!hasLoginId_;
}
- (void) setHasLoginId:(BOOL) value {
  hasLoginId_ = !!value;
}
@synthesize loginId;
- (BOOL) hasOrderId {
  return !!hasOrderId_;
}
- (void) setHasOrderId:(BOOL) value {
  hasOrderId_ = !!value;
}
@synthesize orderId;
- (BOOL) hasBarcode {
  return !!hasBarcode_;
}
- (void) setHasBarcode:(BOOL) value {
  hasBarcode_ = !!value;
}
@synthesize barcode;
- (BOOL) hasBindType {
  return !!hasBindType_;
}
- (void) setHasBindType:(BOOL) value {
  hasBindType_ = !!value;
}
@synthesize bindType;
- (void) dealloc {
  self.sid = nil;
  self.barcode = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.sid = @"";
    self.loginId = 0;
    self.orderId = 0L;
    self.barcode = @"";
    self.bindType = 0;
  }
  return self;
}
static OrderBarcodeBindReq* defaultOrderBarcodeBindReqInstance = nil;
+ (void) initialize {
  if (self == [OrderBarcodeBindReq class]) {
    defaultOrderBarcodeBindReqInstance = [[OrderBarcodeBindReq alloc] init];
  }
}
+ (OrderBarcodeBindReq*) defaultInstance {
  return defaultOrderBarcodeBindReqInstance;
}
- (OrderBarcodeBindReq*) defaultInstance {
  return defaultOrderBarcodeBindReqInstance;
}
- (BOOL) isInitialized {
  if (!self.hasSid) {
    return NO;
  }
  if (!self.hasLoginId) {
    return NO;
  }
  if (!self.hasOrderId) {
    return NO;
  }
  if (!self.hasBarcode) {
    return NO;
  }
  if (!self.hasBindType) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasSid) {
    [output writeString:1 value:self.sid];
  }
  if (self.hasLoginId) {
    [output writeInt32:2 value:self.loginId];
  }
  if (self.hasOrderId) {
    [output writeInt64:3 value:self.orderId];
  }
  if (self.hasBarcode) {
    [output writeString:4 value:self.barcode];
  }
  if (self.hasBindType) {
    [output writeInt32:5 value:self.bindType];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasSid) {
    size += computeStringSize(1, self.sid);
  }
  if (self.hasLoginId) {
    size += computeInt32Size(2, self.loginId);
  }
  if (self.hasOrderId) {
    size += computeInt64Size(3, self.orderId);
  }
  if (self.hasBarcode) {
    size += computeStringSize(4, self.barcode);
  }
  if (self.hasBindType) {
    size += computeInt32Size(5, self.bindType);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (OrderBarcodeBindReq*) parseFromData:(NSData*) data {
  return (OrderBarcodeBindReq*)[[[OrderBarcodeBindReq builder] mergeFromData:data] build];
}
+ (OrderBarcodeBindReq*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (OrderBarcodeBindReq*)[[[OrderBarcodeBindReq builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (OrderBarcodeBindReq*) parseFromInputStream:(NSInputStream*) input {
  return (OrderBarcodeBindReq*)[[[OrderBarcodeBindReq builder] mergeFromInputStream:input] build];
}
+ (OrderBarcodeBindReq*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (OrderBarcodeBindReq*)[[[OrderBarcodeBindReq builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (OrderBarcodeBindReq*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (OrderBarcodeBindReq*)[[[OrderBarcodeBindReq builder] mergeFromCodedInputStream:input] build];
}
+ (OrderBarcodeBindReq*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (OrderBarcodeBindReq*)[[[OrderBarcodeBindReq builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (OrderBarcodeBindReq_Builder*) builder {
  return [[[OrderBarcodeBindReq_Builder alloc] init] autorelease];
}
+ (OrderBarcodeBindReq_Builder*) builderWithPrototype:(OrderBarcodeBindReq*) prototype {
  return [[OrderBarcodeBindReq builder] mergeFrom:prototype];
}
- (OrderBarcodeBindReq_Builder*) builder {
  return [OrderBarcodeBindReq builder];
}
@end

@interface OrderBarcodeBindReq_Builder()
@property (retain) OrderBarcodeBindReq* result;
@end

@implementation OrderBarcodeBindReq_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[OrderBarcodeBindReq alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (OrderBarcodeBindReq_Builder*) clear {
  self.result = [[[OrderBarcodeBindReq alloc] init] autorelease];
  return self;
}
- (OrderBarcodeBindReq_Builder*) clone {
  return [OrderBarcodeBindReq builderWithPrototype:result];
}
- (OrderBarcodeBindReq*) defaultInstance {
  return [OrderBarcodeBindReq defaultInstance];
}
- (OrderBarcodeBindReq*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (OrderBarcodeBindReq*) buildPartial {
  OrderBarcodeBindReq* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (OrderBarcodeBindReq_Builder*) mergeFrom:(OrderBarcodeBindReq*) other {
  if (other == [OrderBarcodeBindReq defaultInstance]) {
    return self;
  }
  if (other.hasSid) {
    [self setSid:other.sid];
  }
  if (other.hasLoginId) {
    [self setLoginId:other.loginId];
  }
  if (other.hasOrderId) {
    [self setOrderId:other.orderId];
  }
  if (other.hasBarcode) {
    [self setBarcode:other.barcode];
  }
  if (other.hasBindType) {
    [self setBindType:other.bindType];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (OrderBarcodeBindReq_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (OrderBarcodeBindReq_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setSid:[input readString]];
        break;
      }
      case 16: {
        [self setLoginId:[input readInt32]];
        break;
      }
      case 24: {
        [self setOrderId:[input readInt64]];
        break;
      }
      case 34: {
        [self setBarcode:[input readString]];
        break;
      }
      case 40: {
        [self setBindType:[input readInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasSid {
  return result.hasSid;
}
- (NSString*) sid {
  return result.sid;
}
- (OrderBarcodeBindReq_Builder*) setSid:(NSString*) value {
  result.hasSid = YES;
  result.sid = value;
  return self;
}
- (OrderBarcodeBindReq_Builder*) clearSid {
  result.hasSid = NO;
  result.sid = @"";
  return self;
}
- (BOOL) hasLoginId {
  return result.hasLoginId;
}
- (int32_t) loginId {
  return result.loginId;
}
- (OrderBarcodeBindReq_Builder*) setLoginId:(int32_t) value {
  result.hasLoginId = YES;
  result.loginId = value;
  return self;
}
- (OrderBarcodeBindReq_Builder*) clearLoginId {
  result.hasLoginId = NO;
  result.loginId = 0;
  return self;
}
- (BOOL) hasOrderId {
  return result.hasOrderId;
}
- (int64_t) orderId {
  return result.orderId;
}
- (OrderBarcodeBindReq_Builder*) setOrderId:(int64_t) value {
  result.hasOrderId = YES;
  result.orderId = value;
  return self;
}
- (OrderBarcodeBindReq_Builder*) clearOrderId {
  result.hasOrderId = NO;
  result.orderId = 0L;
  return self;
}
- (BOOL) hasBarcode {
  return result.hasBarcode;
}
- (NSString*) barcode {
  return result.barcode;
}
- (OrderBarcodeBindReq_Builder*) setBarcode:(NSString*) value {
  result.hasBarcode = YES;
  result.barcode = value;
  return self;
}
- (OrderBarcodeBindReq_Builder*) clearBarcode {
  result.hasBarcode = NO;
  result.barcode = @"";
  return self;
}
- (BOOL) hasBindType {
  return result.hasBindType;
}
- (int32_t) bindType {
  return result.bindType;
}
- (OrderBarcodeBindReq_Builder*) setBindType:(int32_t) value {
  result.hasBindType = YES;
  result.bindType = value;
  return self;
}
- (OrderBarcodeBindReq_Builder*) clearBindType {
  result.hasBindType = NO;
  result.bindType = 0;
  return self;
}
@end

@interface OrderBarcodeBindRes ()
@property int32_t retCode;
@property (retain) NSString* sid;
@property int32_t loginId;
@end

@implementation OrderBarcodeBindRes

- (BOOL) hasRetCode {
  return !!hasRetCode_;
}
- (void) setHasRetCode:(BOOL) value {
  hasRetCode_ = !!value;
}
@synthesize retCode;
- (BOOL) hasSid {
  return !!hasSid_;
}
- (void) setHasSid:(BOOL) value {
  hasSid_ = !!value;
}
@synthesize sid;
- (BOOL) hasLoginId {
  return !!hasLoginId_;
}
- (void) setHasLoginId:(BOOL) value {
  hasLoginId_ = !!value;
}
@synthesize loginId;
- (void) dealloc {
  self.sid = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.retCode = 0;
    self.sid = @"";
    self.loginId = 0;
  }
  return self;
}
static OrderBarcodeBindRes* defaultOrderBarcodeBindResInstance = nil;
+ (void) initialize {
  if (self == [OrderBarcodeBindRes class]) {
    defaultOrderBarcodeBindResInstance = [[OrderBarcodeBindRes alloc] init];
  }
}
+ (OrderBarcodeBindRes*) defaultInstance {
  return defaultOrderBarcodeBindResInstance;
}
- (OrderBarcodeBindRes*) defaultInstance {
  return defaultOrderBarcodeBindResInstance;
}
- (BOOL) isInitialized {
  if (!self.hasRetCode) {
    return NO;
  }
  if (!self.hasSid) {
    return NO;
  }
  if (!self.hasLoginId) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasRetCode) {
    [output writeInt32:1 value:self.retCode];
  }
  if (self.hasSid) {
    [output writeString:2 value:self.sid];
  }
  if (self.hasLoginId) {
    [output writeInt32:3 value:self.loginId];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasRetCode) {
    size += computeInt32Size(1, self.retCode);
  }
  if (self.hasSid) {
    size += computeStringSize(2, self.sid);
  }
  if (self.hasLoginId) {
    size += computeInt32Size(3, self.loginId);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (OrderBarcodeBindRes*) parseFromData:(NSData*) data {
  return (OrderBarcodeBindRes*)[[[OrderBarcodeBindRes builder] mergeFromData:data] build];
}
+ (OrderBarcodeBindRes*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (OrderBarcodeBindRes*)[[[OrderBarcodeBindRes builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (OrderBarcodeBindRes*) parseFromInputStream:(NSInputStream*) input {
  return (OrderBarcodeBindRes*)[[[OrderBarcodeBindRes builder] mergeFromInputStream:input] build];
}
+ (OrderBarcodeBindRes*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (OrderBarcodeBindRes*)[[[OrderBarcodeBindRes builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (OrderBarcodeBindRes*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (OrderBarcodeBindRes*)[[[OrderBarcodeBindRes builder] mergeFromCodedInputStream:input] build];
}
+ (OrderBarcodeBindRes*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (OrderBarcodeBindRes*)[[[OrderBarcodeBindRes builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (OrderBarcodeBindRes_Builder*) builder {
  return [[[OrderBarcodeBindRes_Builder alloc] init] autorelease];
}
+ (OrderBarcodeBindRes_Builder*) builderWithPrototype:(OrderBarcodeBindRes*) prototype {
  return [[OrderBarcodeBindRes builder] mergeFrom:prototype];
}
- (OrderBarcodeBindRes_Builder*) builder {
  return [OrderBarcodeBindRes builder];
}
@end

@interface OrderBarcodeBindRes_Builder()
@property (retain) OrderBarcodeBindRes* result;
@end

@implementation OrderBarcodeBindRes_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[OrderBarcodeBindRes alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (OrderBarcodeBindRes_Builder*) clear {
  self.result = [[[OrderBarcodeBindRes alloc] init] autorelease];
  return self;
}
- (OrderBarcodeBindRes_Builder*) clone {
  return [OrderBarcodeBindRes builderWithPrototype:result];
}
- (OrderBarcodeBindRes*) defaultInstance {
  return [OrderBarcodeBindRes defaultInstance];
}
- (OrderBarcodeBindRes*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (OrderBarcodeBindRes*) buildPartial {
  OrderBarcodeBindRes* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (OrderBarcodeBindRes_Builder*) mergeFrom:(OrderBarcodeBindRes*) other {
  if (other == [OrderBarcodeBindRes defaultInstance]) {
    return self;
  }
  if (other.hasRetCode) {
    [self setRetCode:other.retCode];
  }
  if (other.hasSid) {
    [self setSid:other.sid];
  }
  if (other.hasLoginId) {
    [self setLoginId:other.loginId];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (OrderBarcodeBindRes_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (OrderBarcodeBindRes_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setRetCode:[input readInt32]];
        break;
      }
      case 18: {
        [self setSid:[input readString]];
        break;
      }
      case 24: {
        [self setLoginId:[input readInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasRetCode {
  return result.hasRetCode;
}
- (int32_t) retCode {
  return result.retCode;
}
- (OrderBarcodeBindRes_Builder*) setRetCode:(int32_t) value {
  result.hasRetCode = YES;
  result.retCode = value;
  return self;
}
- (OrderBarcodeBindRes_Builder*) clearRetCode {
  result.hasRetCode = NO;
  result.retCode = 0;
  return self;
}
- (BOOL) hasSid {
  return result.hasSid;
}
- (NSString*) sid {
  return result.sid;
}
- (OrderBarcodeBindRes_Builder*) setSid:(NSString*) value {
  result.hasSid = YES;
  result.sid = value;
  return self;
}
- (OrderBarcodeBindRes_Builder*) clearSid {
  result.hasSid = NO;
  result.sid = @"";
  return self;
}
- (BOOL) hasLoginId {
  return result.hasLoginId;
}
- (int32_t) loginId {
  return result.loginId;
}
- (OrderBarcodeBindRes_Builder*) setLoginId:(int32_t) value {
  result.hasLoginId = YES;
  result.loginId = value;
  return self;
}
- (OrderBarcodeBindRes_Builder*) clearLoginId {
  result.hasLoginId = NO;
  result.loginId = 0;
  return self;
}
@end

@interface TaskGroupInfo ()
@property int64_t taskId;
@property int32_t taskType;
@property int64_t orderId;
@property (retain) NSString* orderNum;
@property int32_t serveId;
@property (retain) NSString* serveNum;
@property (retain) NSString* serveName;
@property Float64 price;
@property int32_t quantity;
@property Float64 discount;
@property Float64 amount;
@property int32_t orderStatus;
@property int32_t status;
@property (retain) NSString* orderCreateDate;
@property (retain) NSString* orderPaidDate;
@property (retain) NSString* operBarcode;
@property (retain) NSString* operPickPwd;
@property (retain) NSString* createDate;
@property int32_t gridId;
@property (retain) NSString* gridInfo;
@property (retain) NSString* desc;
@end

@implementation TaskGroupInfo

- (BOOL) hasTaskId {
  return !!hasTaskId_;
}
- (void) setHasTaskId:(BOOL) value {
  hasTaskId_ = !!value;
}
@synthesize taskId;
- (BOOL) hasTaskType {
  return !!hasTaskType_;
}
- (void) setHasTaskType:(BOOL) value {
  hasTaskType_ = !!value;
}
@synthesize taskType;
- (BOOL) hasOrderId {
  return !!hasOrderId_;
}
- (void) setHasOrderId:(BOOL) value {
  hasOrderId_ = !!value;
}
@synthesize orderId;
- (BOOL) hasOrderNum {
  return !!hasOrderNum_;
}
- (void) setHasOrderNum:(BOOL) value {
  hasOrderNum_ = !!value;
}
@synthesize orderNum;
- (BOOL) hasServeId {
  return !!hasServeId_;
}
- (void) setHasServeId:(BOOL) value {
  hasServeId_ = !!value;
}
@synthesize serveId;
- (BOOL) hasServeNum {
  return !!hasServeNum_;
}
- (void) setHasServeNum:(BOOL) value {
  hasServeNum_ = !!value;
}
@synthesize serveNum;
- (BOOL) hasServeName {
  return !!hasServeName_;
}
- (void) setHasServeName:(BOOL) value {
  hasServeName_ = !!value;
}
@synthesize serveName;
- (BOOL) hasPrice {
  return !!hasPrice_;
}
- (void) setHasPrice:(BOOL) value {
  hasPrice_ = !!value;
}
@synthesize price;
- (BOOL) hasQuantity {
  return !!hasQuantity_;
}
- (void) setHasQuantity:(BOOL) value {
  hasQuantity_ = !!value;
}
@synthesize quantity;
- (BOOL) hasDiscount {
  return !!hasDiscount_;
}
- (void) setHasDiscount:(BOOL) value {
  hasDiscount_ = !!value;
}
@synthesize discount;
- (BOOL) hasAmount {
  return !!hasAmount_;
}
- (void) setHasAmount:(BOOL) value {
  hasAmount_ = !!value;
}
@synthesize amount;
- (BOOL) hasOrderStatus {
  return !!hasOrderStatus_;
}
- (void) setHasOrderStatus:(BOOL) value {
  hasOrderStatus_ = !!value;
}
@synthesize orderStatus;
- (BOOL) hasStatus {
  return !!hasStatus_;
}
- (void) setHasStatus:(BOOL) value {
  hasStatus_ = !!value;
}
@synthesize status;
- (BOOL) hasOrderCreateDate {
  return !!hasOrderCreateDate_;
}
- (void) setHasOrderCreateDate:(BOOL) value {
  hasOrderCreateDate_ = !!value;
}
@synthesize orderCreateDate;
- (BOOL) hasOrderPaidDate {
  return !!hasOrderPaidDate_;
}
- (void) setHasOrderPaidDate:(BOOL) value {
  hasOrderPaidDate_ = !!value;
}
@synthesize orderPaidDate;
- (BOOL) hasOperBarcode {
  return !!hasOperBarcode_;
}
- (void) setHasOperBarcode:(BOOL) value {
  hasOperBarcode_ = !!value;
}
@synthesize operBarcode;
- (BOOL) hasOperPickPwd {
  return !!hasOperPickPwd_;
}
- (void) setHasOperPickPwd:(BOOL) value {
  hasOperPickPwd_ = !!value;
}
@synthesize operPickPwd;
- (BOOL) hasCreateDate {
  return !!hasCreateDate_;
}
- (void) setHasCreateDate:(BOOL) value {
  hasCreateDate_ = !!value;
}
@synthesize createDate;
- (BOOL) hasGridId {
  return !!hasGridId_;
}
- (void) setHasGridId:(BOOL) value {
  hasGridId_ = !!value;
}
@synthesize gridId;
- (BOOL) hasGridInfo {
  return !!hasGridInfo_;
}
- (void) setHasGridInfo:(BOOL) value {
  hasGridInfo_ = !!value;
}
@synthesize gridInfo;
- (BOOL) hasDesc {
  return !!hasDesc_;
}
- (void) setHasDesc:(BOOL) value {
  hasDesc_ = !!value;
}
@synthesize desc;
- (void) dealloc {
  self.orderNum = nil;
  self.serveNum = nil;
  self.serveName = nil;
  self.orderCreateDate = nil;
  self.orderPaidDate = nil;
  self.operBarcode = nil;
  self.operPickPwd = nil;
  self.createDate = nil;
  self.gridInfo = nil;
  self.desc = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.taskId = 0L;
    self.taskType = 0;
    self.orderId = 0L;
    self.orderNum = @"";
    self.serveId = 0;
    self.serveNum = @"";
    self.serveName = @"";
    self.price = 0;
    self.quantity = 0;
    self.discount = 0;
    self.amount = 0;
    self.orderStatus = 0;
    self.status = 0;
    self.orderCreateDate = @"";
    self.orderPaidDate = @"";
    self.operBarcode = @"";
    self.operPickPwd = @"";
    self.createDate = @"";
    self.gridId = 0;
    self.gridInfo = @"";
    self.desc = @"";
  }
  return self;
}
static TaskGroupInfo* defaultTaskGroupInfoInstance = nil;
+ (void) initialize {
  if (self == [TaskGroupInfo class]) {
    defaultTaskGroupInfoInstance = [[TaskGroupInfo alloc] init];
  }
}
+ (TaskGroupInfo*) defaultInstance {
  return defaultTaskGroupInfoInstance;
}
- (TaskGroupInfo*) defaultInstance {
  return defaultTaskGroupInfoInstance;
}
- (BOOL) isInitialized {
  if (!self.hasTaskId) {
    return NO;
  }
  if (!self.hasTaskType) {
    return NO;
  }
  if (!self.hasOrderId) {
    return NO;
  }
  if (!self.hasOrderNum) {
    return NO;
  }
  if (!self.hasServeId) {
    return NO;
  }
  if (!self.hasServeNum) {
    return NO;
  }
  if (!self.hasServeName) {
    return NO;
  }
  if (!self.hasPrice) {
    return NO;
  }
  if (!self.hasQuantity) {
    return NO;
  }
  if (!self.hasDiscount) {
    return NO;
  }
  if (!self.hasAmount) {
    return NO;
  }
  if (!self.hasOrderStatus) {
    return NO;
  }
  if (!self.hasStatus) {
    return NO;
  }
  if (!self.hasOrderCreateDate) {
    return NO;
  }
  if (!self.hasOrderPaidDate) {
    return NO;
  }
  if (!self.hasOperBarcode) {
    return NO;
  }
  if (!self.hasOperPickPwd) {
    return NO;
  }
  if (!self.hasCreateDate) {
    return NO;
  }
  if (!self.hasGridId) {
    return NO;
  }
  if (!self.hasGridInfo) {
    return NO;
  }
  if (!self.hasDesc) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasTaskId) {
    [output writeInt64:1 value:self.taskId];
  }
  if (self.hasTaskType) {
    [output writeInt32:2 value:self.taskType];
  }
  if (self.hasOrderId) {
    [output writeInt64:3 value:self.orderId];
  }
  if (self.hasOrderNum) {
    [output writeString:4 value:self.orderNum];
  }
  if (self.hasServeId) {
    [output writeInt32:5 value:self.serveId];
  }
  if (self.hasServeNum) {
    [output writeString:6 value:self.serveNum];
  }
  if (self.hasServeName) {
    [output writeString:7 value:self.serveName];
  }
  if (self.hasPrice) {
    [output writeDouble:8 value:self.price];
  }
  if (self.hasQuantity) {
    [output writeInt32:9 value:self.quantity];
  }
  if (self.hasDiscount) {
    [output writeDouble:10 value:self.discount];
  }
  if (self.hasAmount) {
    [output writeDouble:11 value:self.amount];
  }
  if (self.hasOrderStatus) {
    [output writeInt32:12 value:self.orderStatus];
  }
  if (self.hasStatus) {
    [output writeInt32:13 value:self.status];
  }
  if (self.hasOrderCreateDate) {
    [output writeString:14 value:self.orderCreateDate];
  }
  if (self.hasOrderPaidDate) {
    [output writeString:15 value:self.orderPaidDate];
  }
  if (self.hasOperBarcode) {
    [output writeString:16 value:self.operBarcode];
  }
  if (self.hasOperPickPwd) {
    [output writeString:17 value:self.operPickPwd];
  }
  if (self.hasCreateDate) {
    [output writeString:18 value:self.createDate];
  }
  if (self.hasGridId) {
    [output writeInt32:19 value:self.gridId];
  }
  if (self.hasGridInfo) {
    [output writeString:20 value:self.gridInfo];
  }
  if (self.hasDesc) {
    [output writeString:21 value:self.desc];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasTaskId) {
    size += computeInt64Size(1, self.taskId);
  }
  if (self.hasTaskType) {
    size += computeInt32Size(2, self.taskType);
  }
  if (self.hasOrderId) {
    size += computeInt64Size(3, self.orderId);
  }
  if (self.hasOrderNum) {
    size += computeStringSize(4, self.orderNum);
  }
  if (self.hasServeId) {
    size += computeInt32Size(5, self.serveId);
  }
  if (self.hasServeNum) {
    size += computeStringSize(6, self.serveNum);
  }
  if (self.hasServeName) {
    size += computeStringSize(7, self.serveName);
  }
  if (self.hasPrice) {
    size += computeDoubleSize(8, self.price);
  }
  if (self.hasQuantity) {
    size += computeInt32Size(9, self.quantity);
  }
  if (self.hasDiscount) {
    size += computeDoubleSize(10, self.discount);
  }
  if (self.hasAmount) {
    size += computeDoubleSize(11, self.amount);
  }
  if (self.hasOrderStatus) {
    size += computeInt32Size(12, self.orderStatus);
  }
  if (self.hasStatus) {
    size += computeInt32Size(13, self.status);
  }
  if (self.hasOrderCreateDate) {
    size += computeStringSize(14, self.orderCreateDate);
  }
  if (self.hasOrderPaidDate) {
    size += computeStringSize(15, self.orderPaidDate);
  }
  if (self.hasOperBarcode) {
    size += computeStringSize(16, self.operBarcode);
  }
  if (self.hasOperPickPwd) {
    size += computeStringSize(17, self.operPickPwd);
  }
  if (self.hasCreateDate) {
    size += computeStringSize(18, self.createDate);
  }
  if (self.hasGridId) {
    size += computeInt32Size(19, self.gridId);
  }
  if (self.hasGridInfo) {
    size += computeStringSize(20, self.gridInfo);
  }
  if (self.hasDesc) {
    size += computeStringSize(21, self.desc);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (TaskGroupInfo*) parseFromData:(NSData*) data {
  return (TaskGroupInfo*)[[[TaskGroupInfo builder] mergeFromData:data] build];
}
+ (TaskGroupInfo*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TaskGroupInfo*)[[[TaskGroupInfo builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (TaskGroupInfo*) parseFromInputStream:(NSInputStream*) input {
  return (TaskGroupInfo*)[[[TaskGroupInfo builder] mergeFromInputStream:input] build];
}
+ (TaskGroupInfo*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TaskGroupInfo*)[[[TaskGroupInfo builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TaskGroupInfo*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TaskGroupInfo*)[[[TaskGroupInfo builder] mergeFromCodedInputStream:input] build];
}
+ (TaskGroupInfo*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TaskGroupInfo*)[[[TaskGroupInfo builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TaskGroupInfo_Builder*) builder {
  return [[[TaskGroupInfo_Builder alloc] init] autorelease];
}
+ (TaskGroupInfo_Builder*) builderWithPrototype:(TaskGroupInfo*) prototype {
  return [[TaskGroupInfo builder] mergeFrom:prototype];
}
- (TaskGroupInfo_Builder*) builder {
  return [TaskGroupInfo builder];
}
@end

@interface TaskGroupInfo_Builder()
@property (retain) TaskGroupInfo* result;
@end

@implementation TaskGroupInfo_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[TaskGroupInfo alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (TaskGroupInfo_Builder*) clear {
  self.result = [[[TaskGroupInfo alloc] init] autorelease];
  return self;
}
- (TaskGroupInfo_Builder*) clone {
  return [TaskGroupInfo builderWithPrototype:result];
}
- (TaskGroupInfo*) defaultInstance {
  return [TaskGroupInfo defaultInstance];
}
- (TaskGroupInfo*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (TaskGroupInfo*) buildPartial {
  TaskGroupInfo* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (TaskGroupInfo_Builder*) mergeFrom:(TaskGroupInfo*) other {
  if (other == [TaskGroupInfo defaultInstance]) {
    return self;
  }
  if (other.hasTaskId) {
    [self setTaskId:other.taskId];
  }
  if (other.hasTaskType) {
    [self setTaskType:other.taskType];
  }
  if (other.hasOrderId) {
    [self setOrderId:other.orderId];
  }
  if (other.hasOrderNum) {
    [self setOrderNum:other.orderNum];
  }
  if (other.hasServeId) {
    [self setServeId:other.serveId];
  }
  if (other.hasServeNum) {
    [self setServeNum:other.serveNum];
  }
  if (other.hasServeName) {
    [self setServeName:other.serveName];
  }
  if (other.hasPrice) {
    [self setPrice:other.price];
  }
  if (other.hasQuantity) {
    [self setQuantity:other.quantity];
  }
  if (other.hasDiscount) {
    [self setDiscount:other.discount];
  }
  if (other.hasAmount) {
    [self setAmount:other.amount];
  }
  if (other.hasOrderStatus) {
    [self setOrderStatus:other.orderStatus];
  }
  if (other.hasStatus) {
    [self setStatus:other.status];
  }
  if (other.hasOrderCreateDate) {
    [self setOrderCreateDate:other.orderCreateDate];
  }
  if (other.hasOrderPaidDate) {
    [self setOrderPaidDate:other.orderPaidDate];
  }
  if (other.hasOperBarcode) {
    [self setOperBarcode:other.operBarcode];
  }
  if (other.hasOperPickPwd) {
    [self setOperPickPwd:other.operPickPwd];
  }
  if (other.hasCreateDate) {
    [self setCreateDate:other.createDate];
  }
  if (other.hasGridId) {
    [self setGridId:other.gridId];
  }
  if (other.hasGridInfo) {
    [self setGridInfo:other.gridInfo];
  }
  if (other.hasDesc) {
    [self setDesc:other.desc];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (TaskGroupInfo_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (TaskGroupInfo_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setTaskId:[input readInt64]];
        break;
      }
      case 16: {
        [self setTaskType:[input readInt32]];
        break;
      }
      case 24: {
        [self setOrderId:[input readInt64]];
        break;
      }
      case 34: {
        [self setOrderNum:[input readString]];
        break;
      }
      case 40: {
        [self setServeId:[input readInt32]];
        break;
      }
      case 50: {
        [self setServeNum:[input readString]];
        break;
      }
      case 58: {
        [self setServeName:[input readString]];
        break;
      }
      case 65: {
        [self setPrice:[input readDouble]];
        break;
      }
      case 72: {
        [self setQuantity:[input readInt32]];
        break;
      }
      case 81: {
        [self setDiscount:[input readDouble]];
        break;
      }
      case 89: {
        [self setAmount:[input readDouble]];
        break;
      }
      case 96: {
        [self setOrderStatus:[input readInt32]];
        break;
      }
      case 104: {
        [self setStatus:[input readInt32]];
        break;
      }
      case 114: {
        [self setOrderCreateDate:[input readString]];
        break;
      }
      case 122: {
        [self setOrderPaidDate:[input readString]];
        break;
      }
      case 130: {
        [self setOperBarcode:[input readString]];
        break;
      }
      case 138: {
        [self setOperPickPwd:[input readString]];
        break;
      }
      case 146: {
        [self setCreateDate:[input readString]];
        break;
      }
      case 152: {
        [self setGridId:[input readInt32]];
        break;
      }
      case 162: {
        [self setGridInfo:[input readString]];
        break;
      }
      case 170: {
        [self setDesc:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasTaskId {
  return result.hasTaskId;
}
- (int64_t) taskId {
  return result.taskId;
}
- (TaskGroupInfo_Builder*) setTaskId:(int64_t) value {
  result.hasTaskId = YES;
  result.taskId = value;
  return self;
}
- (TaskGroupInfo_Builder*) clearTaskId {
  result.hasTaskId = NO;
  result.taskId = 0L;
  return self;
}
- (BOOL) hasTaskType {
  return result.hasTaskType;
}
- (int32_t) taskType {
  return result.taskType;
}
- (TaskGroupInfo_Builder*) setTaskType:(int32_t) value {
  result.hasTaskType = YES;
  result.taskType = value;
  return self;
}
- (TaskGroupInfo_Builder*) clearTaskType {
  result.hasTaskType = NO;
  result.taskType = 0;
  return self;
}
- (BOOL) hasOrderId {
  return result.hasOrderId;
}
- (int64_t) orderId {
  return result.orderId;
}
- (TaskGroupInfo_Builder*) setOrderId:(int64_t) value {
  result.hasOrderId = YES;
  result.orderId = value;
  return self;
}
- (TaskGroupInfo_Builder*) clearOrderId {
  result.hasOrderId = NO;
  result.orderId = 0L;
  return self;
}
- (BOOL) hasOrderNum {
  return result.hasOrderNum;
}
- (NSString*) orderNum {
  return result.orderNum;
}
- (TaskGroupInfo_Builder*) setOrderNum:(NSString*) value {
  result.hasOrderNum = YES;
  result.orderNum = value;
  return self;
}
- (TaskGroupInfo_Builder*) clearOrderNum {
  result.hasOrderNum = NO;
  result.orderNum = @"";
  return self;
}
- (BOOL) hasServeId {
  return result.hasServeId;
}
- (int32_t) serveId {
  return result.serveId;
}
- (TaskGroupInfo_Builder*) setServeId:(int32_t) value {
  result.hasServeId = YES;
  result.serveId = value;
  return self;
}
- (TaskGroupInfo_Builder*) clearServeId {
  result.hasServeId = NO;
  result.serveId = 0;
  return self;
}
- (BOOL) hasServeNum {
  return result.hasServeNum;
}
- (NSString*) serveNum {
  return result.serveNum;
}
- (TaskGroupInfo_Builder*) setServeNum:(NSString*) value {
  result.hasServeNum = YES;
  result.serveNum = value;
  return self;
}
- (TaskGroupInfo_Builder*) clearServeNum {
  result.hasServeNum = NO;
  result.serveNum = @"";
  return self;
}
- (BOOL) hasServeName {
  return result.hasServeName;
}
- (NSString*) serveName {
  return result.serveName;
}
- (TaskGroupInfo_Builder*) setServeName:(NSString*) value {
  result.hasServeName = YES;
  result.serveName = value;
  return self;
}
- (TaskGroupInfo_Builder*) clearServeName {
  result.hasServeName = NO;
  result.serveName = @"";
  return self;
}
- (BOOL) hasPrice {
  return result.hasPrice;
}
- (Float64) price {
  return result.price;
}
- (TaskGroupInfo_Builder*) setPrice:(Float64) value {
  result.hasPrice = YES;
  result.price = value;
  return self;
}
- (TaskGroupInfo_Builder*) clearPrice {
  result.hasPrice = NO;
  result.price = 0;
  return self;
}
- (BOOL) hasQuantity {
  return result.hasQuantity;
}
- (int32_t) quantity {
  return result.quantity;
}
- (TaskGroupInfo_Builder*) setQuantity:(int32_t) value {
  result.hasQuantity = YES;
  result.quantity = value;
  return self;
}
- (TaskGroupInfo_Builder*) clearQuantity {
  result.hasQuantity = NO;
  result.quantity = 0;
  return self;
}
- (BOOL) hasDiscount {
  return result.hasDiscount;
}
- (Float64) discount {
  return result.discount;
}
- (TaskGroupInfo_Builder*) setDiscount:(Float64) value {
  result.hasDiscount = YES;
  result.discount = value;
  return self;
}
- (TaskGroupInfo_Builder*) clearDiscount {
  result.hasDiscount = NO;
  result.discount = 0;
  return self;
}
- (BOOL) hasAmount {
  return result.hasAmount;
}
- (Float64) amount {
  return result.amount;
}
- (TaskGroupInfo_Builder*) setAmount:(Float64) value {
  result.hasAmount = YES;
  result.amount = value;
  return self;
}
- (TaskGroupInfo_Builder*) clearAmount {
  result.hasAmount = NO;
  result.amount = 0;
  return self;
}
- (BOOL) hasOrderStatus {
  return result.hasOrderStatus;
}
- (int32_t) orderStatus {
  return result.orderStatus;
}
- (TaskGroupInfo_Builder*) setOrderStatus:(int32_t) value {
  result.hasOrderStatus = YES;
  result.orderStatus = value;
  return self;
}
- (TaskGroupInfo_Builder*) clearOrderStatus {
  result.hasOrderStatus = NO;
  result.orderStatus = 0;
  return self;
}
- (BOOL) hasStatus {
  return result.hasStatus;
}
- (int32_t) status {
  return result.status;
}
- (TaskGroupInfo_Builder*) setStatus:(int32_t) value {
  result.hasStatus = YES;
  result.status = value;
  return self;
}
- (TaskGroupInfo_Builder*) clearStatus {
  result.hasStatus = NO;
  result.status = 0;
  return self;
}
- (BOOL) hasOrderCreateDate {
  return result.hasOrderCreateDate;
}
- (NSString*) orderCreateDate {
  return result.orderCreateDate;
}
- (TaskGroupInfo_Builder*) setOrderCreateDate:(NSString*) value {
  result.hasOrderCreateDate = YES;
  result.orderCreateDate = value;
  return self;
}
- (TaskGroupInfo_Builder*) clearOrderCreateDate {
  result.hasOrderCreateDate = NO;
  result.orderCreateDate = @"";
  return self;
}
- (BOOL) hasOrderPaidDate {
  return result.hasOrderPaidDate;
}
- (NSString*) orderPaidDate {
  return result.orderPaidDate;
}
- (TaskGroupInfo_Builder*) setOrderPaidDate:(NSString*) value {
  result.hasOrderPaidDate = YES;
  result.orderPaidDate = value;
  return self;
}
- (TaskGroupInfo_Builder*) clearOrderPaidDate {
  result.hasOrderPaidDate = NO;
  result.orderPaidDate = @"";
  return self;
}
- (BOOL) hasOperBarcode {
  return result.hasOperBarcode;
}
- (NSString*) operBarcode {
  return result.operBarcode;
}
- (TaskGroupInfo_Builder*) setOperBarcode:(NSString*) value {
  result.hasOperBarcode = YES;
  result.operBarcode = value;
  return self;
}
- (TaskGroupInfo_Builder*) clearOperBarcode {
  result.hasOperBarcode = NO;
  result.operBarcode = @"";
  return self;
}
- (BOOL) hasOperPickPwd {
  return result.hasOperPickPwd;
}
- (NSString*) operPickPwd {
  return result.operPickPwd;
}
- (TaskGroupInfo_Builder*) setOperPickPwd:(NSString*) value {
  result.hasOperPickPwd = YES;
  result.operPickPwd = value;
  return self;
}
- (TaskGroupInfo_Builder*) clearOperPickPwd {
  result.hasOperPickPwd = NO;
  result.operPickPwd = @"";
  return self;
}
- (BOOL) hasCreateDate {
  return result.hasCreateDate;
}
- (NSString*) createDate {
  return result.createDate;
}
- (TaskGroupInfo_Builder*) setCreateDate:(NSString*) value {
  result.hasCreateDate = YES;
  result.createDate = value;
  return self;
}
- (TaskGroupInfo_Builder*) clearCreateDate {
  result.hasCreateDate = NO;
  result.createDate = @"";
  return self;
}
- (BOOL) hasGridId {
  return result.hasGridId;
}
- (int32_t) gridId {
  return result.gridId;
}
- (TaskGroupInfo_Builder*) setGridId:(int32_t) value {
  result.hasGridId = YES;
  result.gridId = value;
  return self;
}
- (TaskGroupInfo_Builder*) clearGridId {
  result.hasGridId = NO;
  result.gridId = 0;
  return self;
}
- (BOOL) hasGridInfo {
  return result.hasGridInfo;
}
- (NSString*) gridInfo {
  return result.gridInfo;
}
- (TaskGroupInfo_Builder*) setGridInfo:(NSString*) value {
  result.hasGridInfo = YES;
  result.gridInfo = value;
  return self;
}
- (TaskGroupInfo_Builder*) clearGridInfo {
  result.hasGridInfo = NO;
  result.gridInfo = @"";
  return self;
}
- (BOOL) hasDesc {
  return result.hasDesc;
}
- (NSString*) desc {
  return result.desc;
}
- (TaskGroupInfo_Builder*) setDesc:(NSString*) value {
  result.hasDesc = YES;
  result.desc = value;
  return self;
}
- (TaskGroupInfo_Builder*) clearDesc {
  result.hasDesc = NO;
  result.desc = @"";
  return self;
}
@end

@interface OperOrderListQueryReq ()
@property (retain) NSString* sid;
@property int32_t loginId;
@property int32_t status;
@end

@implementation OperOrderListQueryReq

- (BOOL) hasSid {
  return !!hasSid_;
}
- (void) setHasSid:(BOOL) value {
  hasSid_ = !!value;
}
@synthesize sid;
- (BOOL) hasLoginId {
  return !!hasLoginId_;
}
- (void) setHasLoginId:(BOOL) value {
  hasLoginId_ = !!value;
}
@synthesize loginId;
- (BOOL) hasStatus {
  return !!hasStatus_;
}
- (void) setHasStatus:(BOOL) value {
  hasStatus_ = !!value;
}
@synthesize status;
- (void) dealloc {
  self.sid = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.sid = @"";
    self.loginId = 0;
    self.status = 0;
  }
  return self;
}
static OperOrderListQueryReq* defaultOperOrderListQueryReqInstance = nil;
+ (void) initialize {
  if (self == [OperOrderListQueryReq class]) {
    defaultOperOrderListQueryReqInstance = [[OperOrderListQueryReq alloc] init];
  }
}
+ (OperOrderListQueryReq*) defaultInstance {
  return defaultOperOrderListQueryReqInstance;
}
- (OperOrderListQueryReq*) defaultInstance {
  return defaultOperOrderListQueryReqInstance;
}
- (BOOL) isInitialized {
  if (!self.hasSid) {
    return NO;
  }
  if (!self.hasLoginId) {
    return NO;
  }
  if (!self.hasStatus) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasSid) {
    [output writeString:1 value:self.sid];
  }
  if (self.hasLoginId) {
    [output writeInt32:2 value:self.loginId];
  }
  if (self.hasStatus) {
    [output writeInt32:3 value:self.status];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasSid) {
    size += computeStringSize(1, self.sid);
  }
  if (self.hasLoginId) {
    size += computeInt32Size(2, self.loginId);
  }
  if (self.hasStatus) {
    size += computeInt32Size(3, self.status);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (OperOrderListQueryReq*) parseFromData:(NSData*) data {
  return (OperOrderListQueryReq*)[[[OperOrderListQueryReq builder] mergeFromData:data] build];
}
+ (OperOrderListQueryReq*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (OperOrderListQueryReq*)[[[OperOrderListQueryReq builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (OperOrderListQueryReq*) parseFromInputStream:(NSInputStream*) input {
  return (OperOrderListQueryReq*)[[[OperOrderListQueryReq builder] mergeFromInputStream:input] build];
}
+ (OperOrderListQueryReq*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (OperOrderListQueryReq*)[[[OperOrderListQueryReq builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (OperOrderListQueryReq*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (OperOrderListQueryReq*)[[[OperOrderListQueryReq builder] mergeFromCodedInputStream:input] build];
}
+ (OperOrderListQueryReq*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (OperOrderListQueryReq*)[[[OperOrderListQueryReq builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (OperOrderListQueryReq_Builder*) builder {
  return [[[OperOrderListQueryReq_Builder alloc] init] autorelease];
}
+ (OperOrderListQueryReq_Builder*) builderWithPrototype:(OperOrderListQueryReq*) prototype {
  return [[OperOrderListQueryReq builder] mergeFrom:prototype];
}
- (OperOrderListQueryReq_Builder*) builder {
  return [OperOrderListQueryReq builder];
}
@end

@interface OperOrderListQueryReq_Builder()
@property (retain) OperOrderListQueryReq* result;
@end

@implementation OperOrderListQueryReq_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[OperOrderListQueryReq alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (OperOrderListQueryReq_Builder*) clear {
  self.result = [[[OperOrderListQueryReq alloc] init] autorelease];
  return self;
}
- (OperOrderListQueryReq_Builder*) clone {
  return [OperOrderListQueryReq builderWithPrototype:result];
}
- (OperOrderListQueryReq*) defaultInstance {
  return [OperOrderListQueryReq defaultInstance];
}
- (OperOrderListQueryReq*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (OperOrderListQueryReq*) buildPartial {
  OperOrderListQueryReq* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (OperOrderListQueryReq_Builder*) mergeFrom:(OperOrderListQueryReq*) other {
  if (other == [OperOrderListQueryReq defaultInstance]) {
    return self;
  }
  if (other.hasSid) {
    [self setSid:other.sid];
  }
  if (other.hasLoginId) {
    [self setLoginId:other.loginId];
  }
  if (other.hasStatus) {
    [self setStatus:other.status];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (OperOrderListQueryReq_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (OperOrderListQueryReq_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setSid:[input readString]];
        break;
      }
      case 16: {
        [self setLoginId:[input readInt32]];
        break;
      }
      case 24: {
        [self setStatus:[input readInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasSid {
  return result.hasSid;
}
- (NSString*) sid {
  return result.sid;
}
- (OperOrderListQueryReq_Builder*) setSid:(NSString*) value {
  result.hasSid = YES;
  result.sid = value;
  return self;
}
- (OperOrderListQueryReq_Builder*) clearSid {
  result.hasSid = NO;
  result.sid = @"";
  return self;
}
- (BOOL) hasLoginId {
  return result.hasLoginId;
}
- (int32_t) loginId {
  return result.loginId;
}
- (OperOrderListQueryReq_Builder*) setLoginId:(int32_t) value {
  result.hasLoginId = YES;
  result.loginId = value;
  return self;
}
- (OperOrderListQueryReq_Builder*) clearLoginId {
  result.hasLoginId = NO;
  result.loginId = 0;
  return self;
}
- (BOOL) hasStatus {
  return result.hasStatus;
}
- (int32_t) status {
  return result.status;
}
- (OperOrderListQueryReq_Builder*) setStatus:(int32_t) value {
  result.hasStatus = YES;
  result.status = value;
  return self;
}
- (OperOrderListQueryReq_Builder*) clearStatus {
  result.hasStatus = NO;
  result.status = 0;
  return self;
}
@end

@interface OperOrderListQueryRes ()
@property int32_t retCode;
@property (retain) NSString* sid;
@property int32_t loginId;
@property (retain) NSMutableArray* mutableTaskGroupsList;
@end

@implementation OperOrderListQueryRes

- (BOOL) hasRetCode {
  return !!hasRetCode_;
}
- (void) setHasRetCode:(BOOL) value {
  hasRetCode_ = !!value;
}
@synthesize retCode;
- (BOOL) hasSid {
  return !!hasSid_;
}
- (void) setHasSid:(BOOL) value {
  hasSid_ = !!value;
}
@synthesize sid;
- (BOOL) hasLoginId {
  return !!hasLoginId_;
}
- (void) setHasLoginId:(BOOL) value {
  hasLoginId_ = !!value;
}
@synthesize loginId;
@synthesize mutableTaskGroupsList;
- (void) dealloc {
  self.sid = nil;
  self.mutableTaskGroupsList = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.retCode = 0;
    self.sid = @"";
    self.loginId = 0;
  }
  return self;
}
static OperOrderListQueryRes* defaultOperOrderListQueryResInstance = nil;
+ (void) initialize {
  if (self == [OperOrderListQueryRes class]) {
    defaultOperOrderListQueryResInstance = [[OperOrderListQueryRes alloc] init];
  }
}
+ (OperOrderListQueryRes*) defaultInstance {
  return defaultOperOrderListQueryResInstance;
}
- (OperOrderListQueryRes*) defaultInstance {
  return defaultOperOrderListQueryResInstance;
}
- (NSArray*) taskGroupsList {
  return mutableTaskGroupsList;
}
- (TaskGroupInfo*) taskGroupsAtIndex:(int32_t) index {
  id value = [mutableTaskGroupsList objectAtIndex:index];
  return value;
}
- (BOOL) isInitialized {
  if (!self.hasRetCode) {
    return NO;
  }
  if (!self.hasSid) {
    return NO;
  }
  if (!self.hasLoginId) {
    return NO;
  }
  for (TaskGroupInfo* element in self.taskGroupsList) {
    if (!element.isInitialized) {
      return NO;
    }
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasRetCode) {
    [output writeInt32:1 value:self.retCode];
  }
  if (self.hasSid) {
    [output writeString:2 value:self.sid];
  }
  if (self.hasLoginId) {
    [output writeInt32:3 value:self.loginId];
  }
  for (TaskGroupInfo* element in self.taskGroupsList) {
    [output writeMessage:4 value:element];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasRetCode) {
    size += computeInt32Size(1, self.retCode);
  }
  if (self.hasSid) {
    size += computeStringSize(2, self.sid);
  }
  if (self.hasLoginId) {
    size += computeInt32Size(3, self.loginId);
  }
  for (TaskGroupInfo* element in self.taskGroupsList) {
    size += computeMessageSize(4, element);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (OperOrderListQueryRes*) parseFromData:(NSData*) data {
  return (OperOrderListQueryRes*)[[[OperOrderListQueryRes builder] mergeFromData:data] build];
}
+ (OperOrderListQueryRes*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (OperOrderListQueryRes*)[[[OperOrderListQueryRes builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (OperOrderListQueryRes*) parseFromInputStream:(NSInputStream*) input {
  return (OperOrderListQueryRes*)[[[OperOrderListQueryRes builder] mergeFromInputStream:input] build];
}
+ (OperOrderListQueryRes*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (OperOrderListQueryRes*)[[[OperOrderListQueryRes builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (OperOrderListQueryRes*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (OperOrderListQueryRes*)[[[OperOrderListQueryRes builder] mergeFromCodedInputStream:input] build];
}
+ (OperOrderListQueryRes*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (OperOrderListQueryRes*)[[[OperOrderListQueryRes builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (OperOrderListQueryRes_Builder*) builder {
  return [[[OperOrderListQueryRes_Builder alloc] init] autorelease];
}
+ (OperOrderListQueryRes_Builder*) builderWithPrototype:(OperOrderListQueryRes*) prototype {
  return [[OperOrderListQueryRes builder] mergeFrom:prototype];
}
- (OperOrderListQueryRes_Builder*) builder {
  return [OperOrderListQueryRes builder];
}
@end

@interface OperOrderListQueryRes_Builder()
@property (retain) OperOrderListQueryRes* result;
@end

@implementation OperOrderListQueryRes_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[OperOrderListQueryRes alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (OperOrderListQueryRes_Builder*) clear {
  self.result = [[[OperOrderListQueryRes alloc] init] autorelease];
  return self;
}
- (OperOrderListQueryRes_Builder*) clone {
  return [OperOrderListQueryRes builderWithPrototype:result];
}
- (OperOrderListQueryRes*) defaultInstance {
  return [OperOrderListQueryRes defaultInstance];
}
- (OperOrderListQueryRes*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (OperOrderListQueryRes*) buildPartial {
  OperOrderListQueryRes* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (OperOrderListQueryRes_Builder*) mergeFrom:(OperOrderListQueryRes*) other {
  if (other == [OperOrderListQueryRes defaultInstance]) {
    return self;
  }
  if (other.hasRetCode) {
    [self setRetCode:other.retCode];
  }
  if (other.hasSid) {
    [self setSid:other.sid];
  }
  if (other.hasLoginId) {
    [self setLoginId:other.loginId];
  }
  if (other.mutableTaskGroupsList.count > 0) {
    if (result.mutableTaskGroupsList == nil) {
      result.mutableTaskGroupsList = [NSMutableArray array];
    }
    [result.mutableTaskGroupsList addObjectsFromArray:other.mutableTaskGroupsList];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (OperOrderListQueryRes_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (OperOrderListQueryRes_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setRetCode:[input readInt32]];
        break;
      }
      case 18: {
        [self setSid:[input readString]];
        break;
      }
      case 24: {
        [self setLoginId:[input readInt32]];
        break;
      }
      case 34: {
        TaskGroupInfo_Builder* subBuilder = [TaskGroupInfo builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addTaskGroups:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL) hasRetCode {
  return result.hasRetCode;
}
- (int32_t) retCode {
  return result.retCode;
}
- (OperOrderListQueryRes_Builder*) setRetCode:(int32_t) value {
  result.hasRetCode = YES;
  result.retCode = value;
  return self;
}
- (OperOrderListQueryRes_Builder*) clearRetCode {
  result.hasRetCode = NO;
  result.retCode = 0;
  return self;
}
- (BOOL) hasSid {
  return result.hasSid;
}
- (NSString*) sid {
  return result.sid;
}
- (OperOrderListQueryRes_Builder*) setSid:(NSString*) value {
  result.hasSid = YES;
  result.sid = value;
  return self;
}
- (OperOrderListQueryRes_Builder*) clearSid {
  result.hasSid = NO;
  result.sid = @"";
  return self;
}
- (BOOL) hasLoginId {
  return result.hasLoginId;
}
- (int32_t) loginId {
  return result.loginId;
}
- (OperOrderListQueryRes_Builder*) setLoginId:(int32_t) value {
  result.hasLoginId = YES;
  result.loginId = value;
  return self;
}
- (OperOrderListQueryRes_Builder*) clearLoginId {
  result.hasLoginId = NO;
  result.loginId = 0;
  return self;
}
- (NSArray*) taskGroupsList {
  if (result.mutableTaskGroupsList == nil) { return [NSArray array]; }
  return result.mutableTaskGroupsList;
}
- (TaskGroupInfo*) taskGroupsAtIndex:(int32_t) index {
  return [result taskGroupsAtIndex:index];
}
- (OperOrderListQueryRes_Builder*) replaceTaskGroupsAtIndex:(int32_t) index with:(TaskGroupInfo*) value {
  [result.mutableTaskGroupsList replaceObjectAtIndex:index withObject:value];
  return self;
}
- (OperOrderListQueryRes_Builder*) addAllTaskGroups:(NSArray*) values {
  if (result.mutableTaskGroupsList == nil) {
    result.mutableTaskGroupsList = [NSMutableArray array];
  }
  [result.mutableTaskGroupsList addObjectsFromArray:values];
  return self;
}
- (OperOrderListQueryRes_Builder*) clearTaskGroupsList {
  result.mutableTaskGroupsList = nil;
  return self;
}
- (OperOrderListQueryRes_Builder*) addTaskGroups:(TaskGroupInfo*) value {
  if (result.mutableTaskGroupsList == nil) {
    result.mutableTaskGroupsList = [NSMutableArray array];
  }
  [result.mutableTaskGroupsList addObject:value];
  return self;
}
@end

@interface SysBulletin ()
@property (retain) NSString* sid;
@property int32_t loginId;
@property int64_t bulletinId;
@property int32_t bulletinType;
@property (retain) NSString* title;
@property (retain) NSString* content;
@property (retain) NSString* publisherName;
@end

@implementation SysBulletin

- (BOOL) hasSid {
  return !!hasSid_;
}
- (void) setHasSid:(BOOL) value {
  hasSid_ = !!value;
}
@synthesize sid;
- (BOOL) hasLoginId {
  return !!hasLoginId_;
}
- (void) setHasLoginId:(BOOL) value {
  hasLoginId_ = !!value;
}
@synthesize loginId;
- (BOOL) hasBulletinId {
  return !!hasBulletinId_;
}
- (void) setHasBulletinId:(BOOL) value {
  hasBulletinId_ = !!value;
}
@synthesize bulletinId;
- (BOOL) hasBulletinType {
  return !!hasBulletinType_;
}
- (void) setHasBulletinType:(BOOL) value {
  hasBulletinType_ = !!value;
}
@synthesize bulletinType;
- (BOOL) hasTitle {
  return !!hasTitle_;
}
- (void) setHasTitle:(BOOL) value {
  hasTitle_ = !!value;
}
@synthesize title;
- (BOOL) hasContent {
  return !!hasContent_;
}
- (void) setHasContent:(BOOL) value {
  hasContent_ = !!value;
}
@synthesize content;
- (BOOL) hasPublisherName {
  return !!hasPublisherName_;
}
- (void) setHasPublisherName:(BOOL) value {
  hasPublisherName_ = !!value;
}
@synthesize publisherName;
- (void) dealloc {
  self.sid = nil;
  self.title = nil;
  self.content = nil;
  self.publisherName = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.sid = @"";
    self.loginId = 0;
    self.bulletinId = 0L;
    self.bulletinType = 0;
    self.title = @"";
    self.content = @"";
    self.publisherName = @"";
  }
  return self;
}
static SysBulletin* defaultSysBulletinInstance = nil;
+ (void) initialize {
  if (self == [SysBulletin class]) {
    defaultSysBulletinInstance = [[SysBulletin alloc] init];
  }
}
+ (SysBulletin*) defaultInstance {
  return defaultSysBulletinInstance;
}
- (SysBulletin*) defaultInstance {
  return defaultSysBulletinInstance;
}
- (BOOL) isInitialized {
  if (!self.hasSid) {
    return NO;
  }
  if (!self.hasLoginId) {
    return NO;
  }
  if (!self.hasBulletinId) {
    return NO;
  }
  if (!self.hasBulletinType) {
    return NO;
  }
  if (!self.hasTitle) {
    return NO;
  }
  if (!self.hasContent) {
    return NO;
  }
  if (!self.hasPublisherName) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasSid) {
    [output writeString:1 value:self.sid];
  }
  if (self.hasLoginId) {
    [output writeInt32:2 value:self.loginId];
  }
  if (self.hasBulletinId) {
    [output writeInt64:3 value:self.bulletinId];
  }
  if (self.hasBulletinType) {
    [output writeInt32:4 value:self.bulletinType];
  }
  if (self.hasTitle) {
    [output writeString:5 value:self.title];
  }
  if (self.hasContent) {
    [output writeString:6 value:self.content];
  }
  if (self.hasPublisherName) {
    [output writeString:7 value:self.publisherName];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasSid) {
    size += computeStringSize(1, self.sid);
  }
  if (self.hasLoginId) {
    size += computeInt32Size(2, self.loginId);
  }
  if (self.hasBulletinId) {
    size += computeInt64Size(3, self.bulletinId);
  }
  if (self.hasBulletinType) {
    size += computeInt32Size(4, self.bulletinType);
  }
  if (self.hasTitle) {
    size += computeStringSize(5, self.title);
  }
  if (self.hasContent) {
    size += computeStringSize(6, self.content);
  }
  if (self.hasPublisherName) {
    size += computeStringSize(7, self.publisherName);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (SysBulletin*) parseFromData:(NSData*) data {
  return (SysBulletin*)[[[SysBulletin builder] mergeFromData:data] build];
}
+ (SysBulletin*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (SysBulletin*)[[[SysBulletin builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (SysBulletin*) parseFromInputStream:(NSInputStream*) input {
  return (SysBulletin*)[[[SysBulletin builder] mergeFromInputStream:input] build];
}
+ (SysBulletin*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (SysBulletin*)[[[SysBulletin builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (SysBulletin*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (SysBulletin*)[[[SysBulletin builder] mergeFromCodedInputStream:input] build];
}
+ (SysBulletin*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (SysBulletin*)[[[SysBulletin builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (SysBulletin_Builder*) builder {
  return [[[SysBulletin_Builder alloc] init] autorelease];
}
+ (SysBulletin_Builder*) builderWithPrototype:(SysBulletin*) prototype {
  return [[SysBulletin builder] mergeFrom:prototype];
}
- (SysBulletin_Builder*) builder {
  return [SysBulletin builder];
}
@end

@interface SysBulletin_Builder()
@property (retain) SysBulletin* result;
@end

@implementation SysBulletin_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[SysBulletin alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (SysBulletin_Builder*) clear {
  self.result = [[[SysBulletin alloc] init] autorelease];
  return self;
}
- (SysBulletin_Builder*) clone {
  return [SysBulletin builderWithPrototype:result];
}
- (SysBulletin*) defaultInstance {
  return [SysBulletin defaultInstance];
}
- (SysBulletin*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (SysBulletin*) buildPartial {
  SysBulletin* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (SysBulletin_Builder*) mergeFrom:(SysBulletin*) other {
  if (other == [SysBulletin defaultInstance]) {
    return self;
  }
  if (other.hasSid) {
    [self setSid:other.sid];
  }
  if (other.hasLoginId) {
    [self setLoginId:other.loginId];
  }
  if (other.hasBulletinId) {
    [self setBulletinId:other.bulletinId];
  }
  if (other.hasBulletinType) {
    [self setBulletinType:other.bulletinType];
  }
  if (other.hasTitle) {
    [self setTitle:other.title];
  }
  if (other.hasContent) {
    [self setContent:other.content];
  }
  if (other.hasPublisherName) {
    [self setPublisherName:other.publisherName];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (SysBulletin_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (SysBulletin_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setSid:[input readString]];
        break;
      }
      case 16: {
        [self setLoginId:[input readInt32]];
        break;
      }
      case 24: {
        [self setBulletinId:[input readInt64]];
        break;
      }
      case 32: {
        [self setBulletinType:[input readInt32]];
        break;
      }
      case 42: {
        [self setTitle:[input readString]];
        break;
      }
      case 50: {
        [self setContent:[input readString]];
        break;
      }
      case 58: {
        [self setPublisherName:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasSid {
  return result.hasSid;
}
- (NSString*) sid {
  return result.sid;
}
- (SysBulletin_Builder*) setSid:(NSString*) value {
  result.hasSid = YES;
  result.sid = value;
  return self;
}
- (SysBulletin_Builder*) clearSid {
  result.hasSid = NO;
  result.sid = @"";
  return self;
}
- (BOOL) hasLoginId {
  return result.hasLoginId;
}
- (int32_t) loginId {
  return result.loginId;
}
- (SysBulletin_Builder*) setLoginId:(int32_t) value {
  result.hasLoginId = YES;
  result.loginId = value;
  return self;
}
- (SysBulletin_Builder*) clearLoginId {
  result.hasLoginId = NO;
  result.loginId = 0;
  return self;
}
- (BOOL) hasBulletinId {
  return result.hasBulletinId;
}
- (int64_t) bulletinId {
  return result.bulletinId;
}
- (SysBulletin_Builder*) setBulletinId:(int64_t) value {
  result.hasBulletinId = YES;
  result.bulletinId = value;
  return self;
}
- (SysBulletin_Builder*) clearBulletinId {
  result.hasBulletinId = NO;
  result.bulletinId = 0L;
  return self;
}
- (BOOL) hasBulletinType {
  return result.hasBulletinType;
}
- (int32_t) bulletinType {
  return result.bulletinType;
}
- (SysBulletin_Builder*) setBulletinType:(int32_t) value {
  result.hasBulletinType = YES;
  result.bulletinType = value;
  return self;
}
- (SysBulletin_Builder*) clearBulletinType {
  result.hasBulletinType = NO;
  result.bulletinType = 0;
  return self;
}
- (BOOL) hasTitle {
  return result.hasTitle;
}
- (NSString*) title {
  return result.title;
}
- (SysBulletin_Builder*) setTitle:(NSString*) value {
  result.hasTitle = YES;
  result.title = value;
  return self;
}
- (SysBulletin_Builder*) clearTitle {
  result.hasTitle = NO;
  result.title = @"";
  return self;
}
- (BOOL) hasContent {
  return result.hasContent;
}
- (NSString*) content {
  return result.content;
}
- (SysBulletin_Builder*) setContent:(NSString*) value {
  result.hasContent = YES;
  result.content = value;
  return self;
}
- (SysBulletin_Builder*) clearContent {
  result.hasContent = NO;
  result.content = @"";
  return self;
}
- (BOOL) hasPublisherName {
  return result.hasPublisherName;
}
- (NSString*) publisherName {
  return result.publisherName;
}
- (SysBulletin_Builder*) setPublisherName:(NSString*) value {
  result.hasPublisherName = YES;
  result.publisherName = value;
  return self;
}
- (SysBulletin_Builder*) clearPublisherName {
  result.hasPublisherName = NO;
  result.publisherName = @"";
  return self;
}
@end

@interface StandardRes ()
@property int32_t retCode;
@property (retain) NSString* sid;
@property (retain) NSString* msg;
@end

@implementation StandardRes

- (BOOL) hasRetCode {
  return !!hasRetCode_;
}
- (void) setHasRetCode:(BOOL) value {
  hasRetCode_ = !!value;
}
@synthesize retCode;
- (BOOL) hasSid {
  return !!hasSid_;
}
- (void) setHasSid:(BOOL) value {
  hasSid_ = !!value;
}
@synthesize sid;
- (BOOL) hasMsg {
  return !!hasMsg_;
}
- (void) setHasMsg:(BOOL) value {
  hasMsg_ = !!value;
}
@synthesize msg;
- (void) dealloc {
  self.sid = nil;
  self.msg = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.retCode = 0;
    self.sid = @"";
    self.msg = @"";
  }
  return self;
}
static StandardRes* defaultStandardResInstance = nil;
+ (void) initialize {
  if (self == [StandardRes class]) {
    defaultStandardResInstance = [[StandardRes alloc] init];
  }
}
+ (StandardRes*) defaultInstance {
  return defaultStandardResInstance;
}
- (StandardRes*) defaultInstance {
  return defaultStandardResInstance;
}
- (BOOL) isInitialized {
  if (!self.hasRetCode) {
    return NO;
  }
  if (!self.hasSid) {
    return NO;
  }
  if (!self.hasMsg) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasRetCode) {
    [output writeInt32:1 value:self.retCode];
  }
  if (self.hasSid) {
    [output writeString:2 value:self.sid];
  }
  if (self.hasMsg) {
    [output writeString:3 value:self.msg];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasRetCode) {
    size += computeInt32Size(1, self.retCode);
  }
  if (self.hasSid) {
    size += computeStringSize(2, self.sid);
  }
  if (self.hasMsg) {
    size += computeStringSize(3, self.msg);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (StandardRes*) parseFromData:(NSData*) data {
  return (StandardRes*)[[[StandardRes builder] mergeFromData:data] build];
}
+ (StandardRes*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (StandardRes*)[[[StandardRes builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (StandardRes*) parseFromInputStream:(NSInputStream*) input {
  return (StandardRes*)[[[StandardRes builder] mergeFromInputStream:input] build];
}
+ (StandardRes*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (StandardRes*)[[[StandardRes builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (StandardRes*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (StandardRes*)[[[StandardRes builder] mergeFromCodedInputStream:input] build];
}
+ (StandardRes*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (StandardRes*)[[[StandardRes builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (StandardRes_Builder*) builder {
  return [[[StandardRes_Builder alloc] init] autorelease];
}
+ (StandardRes_Builder*) builderWithPrototype:(StandardRes*) prototype {
  return [[StandardRes builder] mergeFrom:prototype];
}
- (StandardRes_Builder*) builder {
  return [StandardRes builder];
}
@end

@interface StandardRes_Builder()
@property (retain) StandardRes* result;
@end

@implementation StandardRes_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[StandardRes alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (StandardRes_Builder*) clear {
  self.result = [[[StandardRes alloc] init] autorelease];
  return self;
}
- (StandardRes_Builder*) clone {
  return [StandardRes builderWithPrototype:result];
}
- (StandardRes*) defaultInstance {
  return [StandardRes defaultInstance];
}
- (StandardRes*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (StandardRes*) buildPartial {
  StandardRes* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (StandardRes_Builder*) mergeFrom:(StandardRes*) other {
  if (other == [StandardRes defaultInstance]) {
    return self;
  }
  if (other.hasRetCode) {
    [self setRetCode:other.retCode];
  }
  if (other.hasSid) {
    [self setSid:other.sid];
  }
  if (other.hasMsg) {
    [self setMsg:other.msg];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (StandardRes_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (StandardRes_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setRetCode:[input readInt32]];
        break;
      }
      case 18: {
        [self setSid:[input readString]];
        break;
      }
      case 26: {
        [self setMsg:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasRetCode {
  return result.hasRetCode;
}
- (int32_t) retCode {
  return result.retCode;
}
- (StandardRes_Builder*) setRetCode:(int32_t) value {
  result.hasRetCode = YES;
  result.retCode = value;
  return self;
}
- (StandardRes_Builder*) clearRetCode {
  result.hasRetCode = NO;
  result.retCode = 0;
  return self;
}
- (BOOL) hasSid {
  return result.hasSid;
}
- (NSString*) sid {
  return result.sid;
}
- (StandardRes_Builder*) setSid:(NSString*) value {
  result.hasSid = YES;
  result.sid = value;
  return self;
}
- (StandardRes_Builder*) clearSid {
  result.hasSid = NO;
  result.sid = @"";
  return self;
}
- (BOOL) hasMsg {
  return result.hasMsg;
}
- (NSString*) msg {
  return result.msg;
}
- (StandardRes_Builder*) setMsg:(NSString*) value {
  result.hasMsg = YES;
  result.msg = value;
  return self;
}
- (StandardRes_Builder*) clearMsg {
  result.hasMsg = NO;
  result.msg = @"";
  return self;
}
@end

@interface GetValidateCodeReq ()
@property (retain) NSString* sid;
@property (retain) NSString* phoneNumber;
@end

@implementation GetValidateCodeReq

- (BOOL) hasSid {
  return !!hasSid_;
}
- (void) setHasSid:(BOOL) value {
  hasSid_ = !!value;
}
@synthesize sid;
- (BOOL) hasPhoneNumber {
  return !!hasPhoneNumber_;
}
- (void) setHasPhoneNumber:(BOOL) value {
  hasPhoneNumber_ = !!value;
}
@synthesize phoneNumber;
- (void) dealloc {
  self.sid = nil;
  self.phoneNumber = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.sid = @"";
    self.phoneNumber = @"";
  }
  return self;
}
static GetValidateCodeReq* defaultGetValidateCodeReqInstance = nil;
+ (void) initialize {
  if (self == [GetValidateCodeReq class]) {
    defaultGetValidateCodeReqInstance = [[GetValidateCodeReq alloc] init];
  }
}
+ (GetValidateCodeReq*) defaultInstance {
  return defaultGetValidateCodeReqInstance;
}
- (GetValidateCodeReq*) defaultInstance {
  return defaultGetValidateCodeReqInstance;
}
- (BOOL) isInitialized {
  if (!self.hasSid) {
    return NO;
  }
  if (!self.hasPhoneNumber) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasSid) {
    [output writeString:1 value:self.sid];
  }
  if (self.hasPhoneNumber) {
    [output writeString:2 value:self.phoneNumber];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasSid) {
    size += computeStringSize(1, self.sid);
  }
  if (self.hasPhoneNumber) {
    size += computeStringSize(2, self.phoneNumber);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (GetValidateCodeReq*) parseFromData:(NSData*) data {
  return (GetValidateCodeReq*)[[[GetValidateCodeReq builder] mergeFromData:data] build];
}
+ (GetValidateCodeReq*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (GetValidateCodeReq*)[[[GetValidateCodeReq builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (GetValidateCodeReq*) parseFromInputStream:(NSInputStream*) input {
  return (GetValidateCodeReq*)[[[GetValidateCodeReq builder] mergeFromInputStream:input] build];
}
+ (GetValidateCodeReq*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (GetValidateCodeReq*)[[[GetValidateCodeReq builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (GetValidateCodeReq*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (GetValidateCodeReq*)[[[GetValidateCodeReq builder] mergeFromCodedInputStream:input] build];
}
+ (GetValidateCodeReq*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (GetValidateCodeReq*)[[[GetValidateCodeReq builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (GetValidateCodeReq_Builder*) builder {
  return [[[GetValidateCodeReq_Builder alloc] init] autorelease];
}
+ (GetValidateCodeReq_Builder*) builderWithPrototype:(GetValidateCodeReq*) prototype {
  return [[GetValidateCodeReq builder] mergeFrom:prototype];
}
- (GetValidateCodeReq_Builder*) builder {
  return [GetValidateCodeReq builder];
}
@end

@interface GetValidateCodeReq_Builder()
@property (retain) GetValidateCodeReq* result;
@end

@implementation GetValidateCodeReq_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[GetValidateCodeReq alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (GetValidateCodeReq_Builder*) clear {
  self.result = [[[GetValidateCodeReq alloc] init] autorelease];
  return self;
}
- (GetValidateCodeReq_Builder*) clone {
  return [GetValidateCodeReq builderWithPrototype:result];
}
- (GetValidateCodeReq*) defaultInstance {
  return [GetValidateCodeReq defaultInstance];
}
- (GetValidateCodeReq*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (GetValidateCodeReq*) buildPartial {
  GetValidateCodeReq* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (GetValidateCodeReq_Builder*) mergeFrom:(GetValidateCodeReq*) other {
  if (other == [GetValidateCodeReq defaultInstance]) {
    return self;
  }
  if (other.hasSid) {
    [self setSid:other.sid];
  }
  if (other.hasPhoneNumber) {
    [self setPhoneNumber:other.phoneNumber];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (GetValidateCodeReq_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (GetValidateCodeReq_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setSid:[input readString]];
        break;
      }
      case 18: {
        [self setPhoneNumber:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasSid {
  return result.hasSid;
}
- (NSString*) sid {
  return result.sid;
}
- (GetValidateCodeReq_Builder*) setSid:(NSString*) value {
  result.hasSid = YES;
  result.sid = value;
  return self;
}
- (GetValidateCodeReq_Builder*) clearSid {
  result.hasSid = NO;
  result.sid = @"";
  return self;
}
- (BOOL) hasPhoneNumber {
  return result.hasPhoneNumber;
}
- (NSString*) phoneNumber {
  return result.phoneNumber;
}
- (GetValidateCodeReq_Builder*) setPhoneNumber:(NSString*) value {
  result.hasPhoneNumber = YES;
  result.phoneNumber = value;
  return self;
}
- (GetValidateCodeReq_Builder*) clearPhoneNumber {
  result.hasPhoneNumber = NO;
  result.phoneNumber = @"";
  return self;
}
@end

@interface UserRegistReq ()
@property (retain) NSString* sid;
@property (retain) NSString* phoneNumber;
@property (retain) NSString* loginPwd;
@property (retain) NSString* validateCode;
@end

@implementation UserRegistReq

- (BOOL) hasSid {
  return !!hasSid_;
}
- (void) setHasSid:(BOOL) value {
  hasSid_ = !!value;
}
@synthesize sid;
- (BOOL) hasPhoneNumber {
  return !!hasPhoneNumber_;
}
- (void) setHasPhoneNumber:(BOOL) value {
  hasPhoneNumber_ = !!value;
}
@synthesize phoneNumber;
- (BOOL) hasLoginPwd {
  return !!hasLoginPwd_;
}
- (void) setHasLoginPwd:(BOOL) value {
  hasLoginPwd_ = !!value;
}
@synthesize loginPwd;
- (BOOL) hasValidateCode {
  return !!hasValidateCode_;
}
- (void) setHasValidateCode:(BOOL) value {
  hasValidateCode_ = !!value;
}
@synthesize validateCode;
- (void) dealloc {
  self.sid = nil;
  self.phoneNumber = nil;
  self.loginPwd = nil;
  self.validateCode = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.sid = @"";
    self.phoneNumber = @"";
    self.loginPwd = @"";
    self.validateCode = @"";
  }
  return self;
}
static UserRegistReq* defaultUserRegistReqInstance = nil;
+ (void) initialize {
  if (self == [UserRegistReq class]) {
    defaultUserRegistReqInstance = [[UserRegistReq alloc] init];
  }
}
+ (UserRegistReq*) defaultInstance {
  return defaultUserRegistReqInstance;
}
- (UserRegistReq*) defaultInstance {
  return defaultUserRegistReqInstance;
}
- (BOOL) isInitialized {
  if (!self.hasSid) {
    return NO;
  }
  if (!self.hasPhoneNumber) {
    return NO;
  }
  if (!self.hasLoginPwd) {
    return NO;
  }
  if (!self.hasValidateCode) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasSid) {
    [output writeString:1 value:self.sid];
  }
  if (self.hasPhoneNumber) {
    [output writeString:2 value:self.phoneNumber];
  }
  if (self.hasLoginPwd) {
    [output writeString:3 value:self.loginPwd];
  }
  if (self.hasValidateCode) {
    [output writeString:4 value:self.validateCode];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasSid) {
    size += computeStringSize(1, self.sid);
  }
  if (self.hasPhoneNumber) {
    size += computeStringSize(2, self.phoneNumber);
  }
  if (self.hasLoginPwd) {
    size += computeStringSize(3, self.loginPwd);
  }
  if (self.hasValidateCode) {
    size += computeStringSize(4, self.validateCode);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (UserRegistReq*) parseFromData:(NSData*) data {
  return (UserRegistReq*)[[[UserRegistReq builder] mergeFromData:data] build];
}
+ (UserRegistReq*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (UserRegistReq*)[[[UserRegistReq builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (UserRegistReq*) parseFromInputStream:(NSInputStream*) input {
  return (UserRegistReq*)[[[UserRegistReq builder] mergeFromInputStream:input] build];
}
+ (UserRegistReq*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (UserRegistReq*)[[[UserRegistReq builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (UserRegistReq*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (UserRegistReq*)[[[UserRegistReq builder] mergeFromCodedInputStream:input] build];
}
+ (UserRegistReq*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (UserRegistReq*)[[[UserRegistReq builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (UserRegistReq_Builder*) builder {
  return [[[UserRegistReq_Builder alloc] init] autorelease];
}
+ (UserRegistReq_Builder*) builderWithPrototype:(UserRegistReq*) prototype {
  return [[UserRegistReq builder] mergeFrom:prototype];
}
- (UserRegistReq_Builder*) builder {
  return [UserRegistReq builder];
}
@end

@interface UserRegistReq_Builder()
@property (retain) UserRegistReq* result;
@end

@implementation UserRegistReq_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[UserRegistReq alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (UserRegistReq_Builder*) clear {
  self.result = [[[UserRegistReq alloc] init] autorelease];
  return self;
}
- (UserRegistReq_Builder*) clone {
  return [UserRegistReq builderWithPrototype:result];
}
- (UserRegistReq*) defaultInstance {
  return [UserRegistReq defaultInstance];
}
- (UserRegistReq*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (UserRegistReq*) buildPartial {
  UserRegistReq* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (UserRegistReq_Builder*) mergeFrom:(UserRegistReq*) other {
  if (other == [UserRegistReq defaultInstance]) {
    return self;
  }
  if (other.hasSid) {
    [self setSid:other.sid];
  }
  if (other.hasPhoneNumber) {
    [self setPhoneNumber:other.phoneNumber];
  }
  if (other.hasLoginPwd) {
    [self setLoginPwd:other.loginPwd];
  }
  if (other.hasValidateCode) {
    [self setValidateCode:other.validateCode];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (UserRegistReq_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (UserRegistReq_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setSid:[input readString]];
        break;
      }
      case 18: {
        [self setPhoneNumber:[input readString]];
        break;
      }
      case 26: {
        [self setLoginPwd:[input readString]];
        break;
      }
      case 34: {
        [self setValidateCode:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasSid {
  return result.hasSid;
}
- (NSString*) sid {
  return result.sid;
}
- (UserRegistReq_Builder*) setSid:(NSString*) value {
  result.hasSid = YES;
  result.sid = value;
  return self;
}
- (UserRegistReq_Builder*) clearSid {
  result.hasSid = NO;
  result.sid = @"";
  return self;
}
- (BOOL) hasPhoneNumber {
  return result.hasPhoneNumber;
}
- (NSString*) phoneNumber {
  return result.phoneNumber;
}
- (UserRegistReq_Builder*) setPhoneNumber:(NSString*) value {
  result.hasPhoneNumber = YES;
  result.phoneNumber = value;
  return self;
}
- (UserRegistReq_Builder*) clearPhoneNumber {
  result.hasPhoneNumber = NO;
  result.phoneNumber = @"";
  return self;
}
- (BOOL) hasLoginPwd {
  return result.hasLoginPwd;
}
- (NSString*) loginPwd {
  return result.loginPwd;
}
- (UserRegistReq_Builder*) setLoginPwd:(NSString*) value {
  result.hasLoginPwd = YES;
  result.loginPwd = value;
  return self;
}
- (UserRegistReq_Builder*) clearLoginPwd {
  result.hasLoginPwd = NO;
  result.loginPwd = @"";
  return self;
}
- (BOOL) hasValidateCode {
  return result.hasValidateCode;
}
- (NSString*) validateCode {
  return result.validateCode;
}
- (UserRegistReq_Builder*) setValidateCode:(NSString*) value {
  result.hasValidateCode = YES;
  result.validateCode = value;
  return self;
}
- (UserRegistReq_Builder*) clearValidateCode {
  result.hasValidateCode = NO;
  result.validateCode = @"";
  return self;
}
@end

@interface UserInfo ()
@property (retain) NSString* name;
@property int32_t sex;
@property (retain) NSString* carNo;
@property (retain) NSString* parkSlot;
@property int32_t parkType;
@property int32_t cartype;
@property (retain) NSString* carColor;
@property (retain) NSString* dispCarType;
@end

@implementation UserInfo

- (BOOL) hasName {
  return !!hasName_;
}
- (void) setHasName:(BOOL) value {
  hasName_ = !!value;
}
@synthesize name;
- (BOOL) hasSex {
  return !!hasSex_;
}
- (void) setHasSex:(BOOL) value {
  hasSex_ = !!value;
}
@synthesize sex;
- (BOOL) hasCarNo {
  return !!hasCarNo_;
}
- (void) setHasCarNo:(BOOL) value {
  hasCarNo_ = !!value;
}
@synthesize carNo;
- (BOOL) hasParkSlot {
  return !!hasParkSlot_;
}
- (void) setHasParkSlot:(BOOL) value {
  hasParkSlot_ = !!value;
}
@synthesize parkSlot;
- (BOOL) hasParkType {
  return !!hasParkType_;
}
- (void) setHasParkType:(BOOL) value {
  hasParkType_ = !!value;
}
@synthesize parkType;
- (BOOL) hasCartype {
  return !!hasCartype_;
}
- (void) setHasCartype:(BOOL) value {
  hasCartype_ = !!value;
}
@synthesize cartype;
- (BOOL) hasCarColor {
  return !!hasCarColor_;
}
- (void) setHasCarColor:(BOOL) value {
  hasCarColor_ = !!value;
}
@synthesize carColor;
- (BOOL) hasDispCarType {
  return !!hasDispCarType_;
}
- (void) setHasDispCarType:(BOOL) value {
  hasDispCarType_ = !!value;
}
@synthesize dispCarType;
- (void) dealloc {
  self.name = nil;
  self.carNo = nil;
  self.parkSlot = nil;
  self.carColor = nil;
  self.dispCarType = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.name = @"";
    self.sex = 0;
    self.carNo = @"";
    self.parkSlot = @"";
    self.parkType = 0;
    self.cartype = 0;
    self.carColor = @"";
    self.dispCarType = @"";
  }
  return self;
}
static UserInfo* defaultUserInfoInstance = nil;
+ (void) initialize {
  if (self == [UserInfo class]) {
    defaultUserInfoInstance = [[UserInfo alloc] init];
  }
}
+ (UserInfo*) defaultInstance {
  return defaultUserInfoInstance;
}
- (UserInfo*) defaultInstance {
  return defaultUserInfoInstance;
}
- (BOOL) isInitialized {
  if (!self.hasName) {
    return NO;
  }
  if (!self.hasSex) {
    return NO;
  }
  if (!self.hasCarNo) {
    return NO;
  }
  if (!self.hasParkSlot) {
    return NO;
  }
  if (!self.hasCartype) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasName) {
    [output writeString:1 value:self.name];
  }
  if (self.hasSex) {
    [output writeInt32:2 value:self.sex];
  }
  if (self.hasCarNo) {
    [output writeString:3 value:self.carNo];
  }
  if (self.hasParkSlot) {
    [output writeString:4 value:self.parkSlot];
  }
  if (self.hasParkType) {
    [output writeInt32:5 value:self.parkType];
  }
  if (self.hasCartype) {
    [output writeInt32:6 value:self.cartype];
  }
  if (self.hasCarColor) {
    [output writeString:7 value:self.carColor];
  }
  if (self.hasDispCarType) {
    [output writeString:8 value:self.dispCarType];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasName) {
    size += computeStringSize(1, self.name);
  }
  if (self.hasSex) {
    size += computeInt32Size(2, self.sex);
  }
  if (self.hasCarNo) {
    size += computeStringSize(3, self.carNo);
  }
  if (self.hasParkSlot) {
    size += computeStringSize(4, self.parkSlot);
  }
  if (self.hasParkType) {
    size += computeInt32Size(5, self.parkType);
  }
  if (self.hasCartype) {
    size += computeInt32Size(6, self.cartype);
  }
  if (self.hasCarColor) {
    size += computeStringSize(7, self.carColor);
  }
  if (self.hasDispCarType) {
    size += computeStringSize(8, self.dispCarType);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (UserInfo*) parseFromData:(NSData*) data {
  return (UserInfo*)[[[UserInfo builder] mergeFromData:data] build];
}
+ (UserInfo*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (UserInfo*)[[[UserInfo builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (UserInfo*) parseFromInputStream:(NSInputStream*) input {
  return (UserInfo*)[[[UserInfo builder] mergeFromInputStream:input] build];
}
+ (UserInfo*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (UserInfo*)[[[UserInfo builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (UserInfo*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (UserInfo*)[[[UserInfo builder] mergeFromCodedInputStream:input] build];
}
+ (UserInfo*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (UserInfo*)[[[UserInfo builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (UserInfo_Builder*) builder {
  return [[[UserInfo_Builder alloc] init] autorelease];
}
+ (UserInfo_Builder*) builderWithPrototype:(UserInfo*) prototype {
  return [[UserInfo builder] mergeFrom:prototype];
}
- (UserInfo_Builder*) builder {
  return [UserInfo builder];
}
@end

@interface UserInfo_Builder()
@property (retain) UserInfo* result;
@end

@implementation UserInfo_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[UserInfo alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (UserInfo_Builder*) clear {
  self.result = [[[UserInfo alloc] init] autorelease];
  return self;
}
- (UserInfo_Builder*) clone {
  return [UserInfo builderWithPrototype:result];
}
- (UserInfo*) defaultInstance {
  return [UserInfo defaultInstance];
}
- (UserInfo*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (UserInfo*) buildPartial {
  UserInfo* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (UserInfo_Builder*) mergeFrom:(UserInfo*) other {
  if (other == [UserInfo defaultInstance]) {
    return self;
  }
  if (other.hasName) {
    [self setName:other.name];
  }
  if (other.hasSex) {
    [self setSex:other.sex];
  }
  if (other.hasCarNo) {
    [self setCarNo:other.carNo];
  }
  if (other.hasParkSlot) {
    [self setParkSlot:other.parkSlot];
  }
  if (other.hasParkType) {
    [self setParkType:other.parkType];
  }
  if (other.hasCartype) {
    [self setCartype:other.cartype];
  }
  if (other.hasCarColor) {
    [self setCarColor:other.carColor];
  }
  if (other.hasDispCarType) {
    [self setDispCarType:other.dispCarType];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (UserInfo_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (UserInfo_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setName:[input readString]];
        break;
      }
      case 16: {
        [self setSex:[input readInt32]];
        break;
      }
      case 26: {
        [self setCarNo:[input readString]];
        break;
      }
      case 34: {
        [self setParkSlot:[input readString]];
        break;
      }
      case 40: {
        [self setParkType:[input readInt32]];
        break;
      }
      case 48: {
        [self setCartype:[input readInt32]];
        break;
      }
      case 58: {
        [self setCarColor:[input readString]];
        break;
      }
      case 66: {
        [self setDispCarType:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasName {
  return result.hasName;
}
- (NSString*) name {
  return result.name;
}
- (UserInfo_Builder*) setName:(NSString*) value {
  result.hasName = YES;
  result.name = value;
  return self;
}
- (UserInfo_Builder*) clearName {
  result.hasName = NO;
  result.name = @"";
  return self;
}
- (BOOL) hasSex {
  return result.hasSex;
}
- (int32_t) sex {
  return result.sex;
}
- (UserInfo_Builder*) setSex:(int32_t) value {
  result.hasSex = YES;
  result.sex = value;
  return self;
}
- (UserInfo_Builder*) clearSex {
  result.hasSex = NO;
  result.sex = 0;
  return self;
}
- (BOOL) hasCarNo {
  return result.hasCarNo;
}
- (NSString*) carNo {
  return result.carNo;
}
- (UserInfo_Builder*) setCarNo:(NSString*) value {
  result.hasCarNo = YES;
  result.carNo = value;
  return self;
}
- (UserInfo_Builder*) clearCarNo {
  result.hasCarNo = NO;
  result.carNo = @"";
  return self;
}
- (BOOL) hasParkSlot {
  return result.hasParkSlot;
}
- (NSString*) parkSlot {
  return result.parkSlot;
}
- (UserInfo_Builder*) setParkSlot:(NSString*) value {
  result.hasParkSlot = YES;
  result.parkSlot = value;
  return self;
}
- (UserInfo_Builder*) clearParkSlot {
  result.hasParkSlot = NO;
  result.parkSlot = @"";
  return self;
}
- (BOOL) hasParkType {
  return result.hasParkType;
}
- (int32_t) parkType {
  return result.parkType;
}
- (UserInfo_Builder*) setParkType:(int32_t) value {
  result.hasParkType = YES;
  result.parkType = value;
  return self;
}
- (UserInfo_Builder*) clearParkType {
  result.hasParkType = NO;
  result.parkType = 0;
  return self;
}
- (BOOL) hasCartype {
  return result.hasCartype;
}
- (int32_t) cartype {
  return result.cartype;
}
- (UserInfo_Builder*) setCartype:(int32_t) value {
  result.hasCartype = YES;
  result.cartype = value;
  return self;
}
- (UserInfo_Builder*) clearCartype {
  result.hasCartype = NO;
  result.cartype = 0;
  return self;
}
- (BOOL) hasCarColor {
  return result.hasCarColor;
}
- (NSString*) carColor {
  return result.carColor;
}
- (UserInfo_Builder*) setCarColor:(NSString*) value {
  result.hasCarColor = YES;
  result.carColor = value;
  return self;
}
- (UserInfo_Builder*) clearCarColor {
  result.hasCarColor = NO;
  result.carColor = @"";
  return self;
}
- (BOOL) hasDispCarType {
  return result.hasDispCarType;
}
- (NSString*) dispCarType {
  return result.dispCarType;
}
- (UserInfo_Builder*) setDispCarType:(NSString*) value {
  result.hasDispCarType = YES;
  result.dispCarType = value;
  return self;
}
- (UserInfo_Builder*) clearDispCarType {
  result.hasDispCarType = NO;
  result.dispCarType = @"";
  return self;
}
@end

@interface UserInfoModReq ()
@property (retain) NSString* sid;
@property int32_t loginId;
@property (retain) UserInfo* userInfoId;
@end

@implementation UserInfoModReq

- (BOOL) hasSid {
  return !!hasSid_;
}
- (void) setHasSid:(BOOL) value {
  hasSid_ = !!value;
}
@synthesize sid;
- (BOOL) hasLoginId {
  return !!hasLoginId_;
}
- (void) setHasLoginId:(BOOL) value {
  hasLoginId_ = !!value;
}
@synthesize loginId;
- (BOOL) hasUserInfoId {
  return !!hasUserInfoId_;
}
- (void) setHasUserInfoId:(BOOL) value {
  hasUserInfoId_ = !!value;
}
@synthesize userInfoId;
- (void) dealloc {
  self.sid = nil;
  self.userInfoId = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.sid = @"";
    self.loginId = 0;
    self.userInfoId = [UserInfo defaultInstance];
  }
  return self;
}
static UserInfoModReq* defaultUserInfoModReqInstance = nil;
+ (void) initialize {
  if (self == [UserInfoModReq class]) {
    defaultUserInfoModReqInstance = [[UserInfoModReq alloc] init];
  }
}
+ (UserInfoModReq*) defaultInstance {
  return defaultUserInfoModReqInstance;
}
- (UserInfoModReq*) defaultInstance {
  return defaultUserInfoModReqInstance;
}
- (BOOL) isInitialized {
  if (!self.hasSid) {
    return NO;
  }
  if (!self.hasLoginId) {
    return NO;
  }
  if (!self.hasUserInfoId) {
    return NO;
  }
  if (!self.userInfoId.isInitialized) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasSid) {
    [output writeString:1 value:self.sid];
  }
  if (self.hasLoginId) {
    [output writeInt32:2 value:self.loginId];
  }
  if (self.hasUserInfoId) {
    [output writeMessage:3 value:self.userInfoId];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasSid) {
    size += computeStringSize(1, self.sid);
  }
  if (self.hasLoginId) {
    size += computeInt32Size(2, self.loginId);
  }
  if (self.hasUserInfoId) {
    size += computeMessageSize(3, self.userInfoId);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (UserInfoModReq*) parseFromData:(NSData*) data {
  return (UserInfoModReq*)[[[UserInfoModReq builder] mergeFromData:data] build];
}
+ (UserInfoModReq*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (UserInfoModReq*)[[[UserInfoModReq builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (UserInfoModReq*) parseFromInputStream:(NSInputStream*) input {
  return (UserInfoModReq*)[[[UserInfoModReq builder] mergeFromInputStream:input] build];
}
+ (UserInfoModReq*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (UserInfoModReq*)[[[UserInfoModReq builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (UserInfoModReq*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (UserInfoModReq*)[[[UserInfoModReq builder] mergeFromCodedInputStream:input] build];
}
+ (UserInfoModReq*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (UserInfoModReq*)[[[UserInfoModReq builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (UserInfoModReq_Builder*) builder {
  return [[[UserInfoModReq_Builder alloc] init] autorelease];
}
+ (UserInfoModReq_Builder*) builderWithPrototype:(UserInfoModReq*) prototype {
  return [[UserInfoModReq builder] mergeFrom:prototype];
}
- (UserInfoModReq_Builder*) builder {
  return [UserInfoModReq builder];
}
@end

@interface UserInfoModReq_Builder()
@property (retain) UserInfoModReq* result;
@end

@implementation UserInfoModReq_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[UserInfoModReq alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (UserInfoModReq_Builder*) clear {
  self.result = [[[UserInfoModReq alloc] init] autorelease];
  return self;
}
- (UserInfoModReq_Builder*) clone {
  return [UserInfoModReq builderWithPrototype:result];
}
- (UserInfoModReq*) defaultInstance {
  return [UserInfoModReq defaultInstance];
}
- (UserInfoModReq*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (UserInfoModReq*) buildPartial {
  UserInfoModReq* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (UserInfoModReq_Builder*) mergeFrom:(UserInfoModReq*) other {
  if (other == [UserInfoModReq defaultInstance]) {
    return self;
  }
  if (other.hasSid) {
    [self setSid:other.sid];
  }
  if (other.hasLoginId) {
    [self setLoginId:other.loginId];
  }
  if (other.hasUserInfoId) {
    [self mergeUserInfoId:other.userInfoId];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (UserInfoModReq_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (UserInfoModReq_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setSid:[input readString]];
        break;
      }
      case 16: {
        [self setLoginId:[input readInt32]];
        break;
      }
      case 26: {
        UserInfo_Builder* subBuilder = [UserInfo builder];
        if (self.hasUserInfoId) {
          [subBuilder mergeFrom:self.userInfoId];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setUserInfoId:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL) hasSid {
  return result.hasSid;
}
- (NSString*) sid {
  return result.sid;
}
- (UserInfoModReq_Builder*) setSid:(NSString*) value {
  result.hasSid = YES;
  result.sid = value;
  return self;
}
- (UserInfoModReq_Builder*) clearSid {
  result.hasSid = NO;
  result.sid = @"";
  return self;
}
- (BOOL) hasLoginId {
  return result.hasLoginId;
}
- (int32_t) loginId {
  return result.loginId;
}
- (UserInfoModReq_Builder*) setLoginId:(int32_t) value {
  result.hasLoginId = YES;
  result.loginId = value;
  return self;
}
- (UserInfoModReq_Builder*) clearLoginId {
  result.hasLoginId = NO;
  result.loginId = 0;
  return self;
}
- (BOOL) hasUserInfoId {
  return result.hasUserInfoId;
}
- (UserInfo*) userInfoId {
  return result.userInfoId;
}
- (UserInfoModReq_Builder*) setUserInfoId:(UserInfo*) value {
  result.hasUserInfoId = YES;
  result.userInfoId = value;
  return self;
}
- (UserInfoModReq_Builder*) setUserInfoIdBuilder:(UserInfo_Builder*) builderForValue {
  return [self setUserInfoId:[builderForValue build]];
}
- (UserInfoModReq_Builder*) mergeUserInfoId:(UserInfo*) value {
  if (result.hasUserInfoId &&
      result.userInfoId != [UserInfo defaultInstance]) {
    result.userInfoId =
      [[[UserInfo builderWithPrototype:result.userInfoId] mergeFrom:value] buildPartial];
  } else {
    result.userInfoId = value;
  }
  result.hasUserInfoId = YES;
  return self;
}
- (UserInfoModReq_Builder*) clearUserInfoId {
  result.hasUserInfoId = NO;
  result.userInfoId = [UserInfo defaultInstance];
  return self;
}
@end

@interface CarBandInfo ()
@property int32_t bandId;
@property (retain) NSString* bandName;
@property (retain) NSString* sequ;
@end

@implementation CarBandInfo

- (BOOL) hasBandId {
  return !!hasBandId_;
}
- (void) setHasBandId:(BOOL) value {
  hasBandId_ = !!value;
}
@synthesize bandId;
- (BOOL) hasBandName {
  return !!hasBandName_;
}
- (void) setHasBandName:(BOOL) value {
  hasBandName_ = !!value;
}
@synthesize bandName;
- (BOOL) hasSequ {
  return !!hasSequ_;
}
- (void) setHasSequ:(BOOL) value {
  hasSequ_ = !!value;
}
@synthesize sequ;
- (void) dealloc {
  self.bandName = nil;
  self.sequ = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.bandId = 0;
    self.bandName = @"";
    self.sequ = @"";
  }
  return self;
}
static CarBandInfo* defaultCarBandInfoInstance = nil;
+ (void) initialize {
  if (self == [CarBandInfo class]) {
    defaultCarBandInfoInstance = [[CarBandInfo alloc] init];
  }
}
+ (CarBandInfo*) defaultInstance {
  return defaultCarBandInfoInstance;
}
- (CarBandInfo*) defaultInstance {
  return defaultCarBandInfoInstance;
}
- (BOOL) isInitialized {
  if (!self.hasBandId) {
    return NO;
  }
  if (!self.hasBandName) {
    return NO;
  }
  if (!self.hasSequ) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasBandId) {
    [output writeInt32:1 value:self.bandId];
  }
  if (self.hasBandName) {
    [output writeString:2 value:self.bandName];
  }
  if (self.hasSequ) {
    [output writeString:3 value:self.sequ];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasBandId) {
    size += computeInt32Size(1, self.bandId);
  }
  if (self.hasBandName) {
    size += computeStringSize(2, self.bandName);
  }
  if (self.hasSequ) {
    size += computeStringSize(3, self.sequ);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (CarBandInfo*) parseFromData:(NSData*) data {
  return (CarBandInfo*)[[[CarBandInfo builder] mergeFromData:data] build];
}
+ (CarBandInfo*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CarBandInfo*)[[[CarBandInfo builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (CarBandInfo*) parseFromInputStream:(NSInputStream*) input {
  return (CarBandInfo*)[[[CarBandInfo builder] mergeFromInputStream:input] build];
}
+ (CarBandInfo*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CarBandInfo*)[[[CarBandInfo builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CarBandInfo*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (CarBandInfo*)[[[CarBandInfo builder] mergeFromCodedInputStream:input] build];
}
+ (CarBandInfo*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CarBandInfo*)[[[CarBandInfo builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CarBandInfo_Builder*) builder {
  return [[[CarBandInfo_Builder alloc] init] autorelease];
}
+ (CarBandInfo_Builder*) builderWithPrototype:(CarBandInfo*) prototype {
  return [[CarBandInfo builder] mergeFrom:prototype];
}
- (CarBandInfo_Builder*) builder {
  return [CarBandInfo builder];
}
@end

@interface CarBandInfo_Builder()
@property (retain) CarBandInfo* result;
@end

@implementation CarBandInfo_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[CarBandInfo alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (CarBandInfo_Builder*) clear {
  self.result = [[[CarBandInfo alloc] init] autorelease];
  return self;
}
- (CarBandInfo_Builder*) clone {
  return [CarBandInfo builderWithPrototype:result];
}
- (CarBandInfo*) defaultInstance {
  return [CarBandInfo defaultInstance];
}
- (CarBandInfo*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (CarBandInfo*) buildPartial {
  CarBandInfo* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (CarBandInfo_Builder*) mergeFrom:(CarBandInfo*) other {
  if (other == [CarBandInfo defaultInstance]) {
    return self;
  }
  if (other.hasBandId) {
    [self setBandId:other.bandId];
  }
  if (other.hasBandName) {
    [self setBandName:other.bandName];
  }
  if (other.hasSequ) {
    [self setSequ:other.sequ];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (CarBandInfo_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (CarBandInfo_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setBandId:[input readInt32]];
        break;
      }
      case 18: {
        [self setBandName:[input readString]];
        break;
      }
      case 26: {
        [self setSequ:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasBandId {
  return result.hasBandId;
}
- (int32_t) bandId {
  return result.bandId;
}
- (CarBandInfo_Builder*) setBandId:(int32_t) value {
  result.hasBandId = YES;
  result.bandId = value;
  return self;
}
- (CarBandInfo_Builder*) clearBandId {
  result.hasBandId = NO;
  result.bandId = 0;
  return self;
}
- (BOOL) hasBandName {
  return result.hasBandName;
}
- (NSString*) bandName {
  return result.bandName;
}
- (CarBandInfo_Builder*) setBandName:(NSString*) value {
  result.hasBandName = YES;
  result.bandName = value;
  return self;
}
- (CarBandInfo_Builder*) clearBandName {
  result.hasBandName = NO;
  result.bandName = @"";
  return self;
}
- (BOOL) hasSequ {
  return result.hasSequ;
}
- (NSString*) sequ {
  return result.sequ;
}
- (CarBandInfo_Builder*) setSequ:(NSString*) value {
  result.hasSequ = YES;
  result.sequ = value;
  return self;
}
- (CarBandInfo_Builder*) clearSequ {
  result.hasSequ = NO;
  result.sequ = @"";
  return self;
}
@end

@interface GetCarBandReq ()
@property (retain) NSString* sid;
@property int32_t loginId;
@end

@implementation GetCarBandReq

- (BOOL) hasSid {
  return !!hasSid_;
}
- (void) setHasSid:(BOOL) value {
  hasSid_ = !!value;
}
@synthesize sid;
- (BOOL) hasLoginId {
  return !!hasLoginId_;
}
- (void) setHasLoginId:(BOOL) value {
  hasLoginId_ = !!value;
}
@synthesize loginId;
- (void) dealloc {
  self.sid = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.sid = @"";
    self.loginId = 0;
  }
  return self;
}
static GetCarBandReq* defaultGetCarBandReqInstance = nil;
+ (void) initialize {
  if (self == [GetCarBandReq class]) {
    defaultGetCarBandReqInstance = [[GetCarBandReq alloc] init];
  }
}
+ (GetCarBandReq*) defaultInstance {
  return defaultGetCarBandReqInstance;
}
- (GetCarBandReq*) defaultInstance {
  return defaultGetCarBandReqInstance;
}
- (BOOL) isInitialized {
  if (!self.hasSid) {
    return NO;
  }
  if (!self.hasLoginId) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasSid) {
    [output writeString:1 value:self.sid];
  }
  if (self.hasLoginId) {
    [output writeInt32:2 value:self.loginId];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasSid) {
    size += computeStringSize(1, self.sid);
  }
  if (self.hasLoginId) {
    size += computeInt32Size(2, self.loginId);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (GetCarBandReq*) parseFromData:(NSData*) data {
  return (GetCarBandReq*)[[[GetCarBandReq builder] mergeFromData:data] build];
}
+ (GetCarBandReq*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (GetCarBandReq*)[[[GetCarBandReq builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (GetCarBandReq*) parseFromInputStream:(NSInputStream*) input {
  return (GetCarBandReq*)[[[GetCarBandReq builder] mergeFromInputStream:input] build];
}
+ (GetCarBandReq*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (GetCarBandReq*)[[[GetCarBandReq builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (GetCarBandReq*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (GetCarBandReq*)[[[GetCarBandReq builder] mergeFromCodedInputStream:input] build];
}
+ (GetCarBandReq*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (GetCarBandReq*)[[[GetCarBandReq builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (GetCarBandReq_Builder*) builder {
  return [[[GetCarBandReq_Builder alloc] init] autorelease];
}
+ (GetCarBandReq_Builder*) builderWithPrototype:(GetCarBandReq*) prototype {
  return [[GetCarBandReq builder] mergeFrom:prototype];
}
- (GetCarBandReq_Builder*) builder {
  return [GetCarBandReq builder];
}
@end

@interface GetCarBandReq_Builder()
@property (retain) GetCarBandReq* result;
@end

@implementation GetCarBandReq_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[GetCarBandReq alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (GetCarBandReq_Builder*) clear {
  self.result = [[[GetCarBandReq alloc] init] autorelease];
  return self;
}
- (GetCarBandReq_Builder*) clone {
  return [GetCarBandReq builderWithPrototype:result];
}
- (GetCarBandReq*) defaultInstance {
  return [GetCarBandReq defaultInstance];
}
- (GetCarBandReq*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (GetCarBandReq*) buildPartial {
  GetCarBandReq* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (GetCarBandReq_Builder*) mergeFrom:(GetCarBandReq*) other {
  if (other == [GetCarBandReq defaultInstance]) {
    return self;
  }
  if (other.hasSid) {
    [self setSid:other.sid];
  }
  if (other.hasLoginId) {
    [self setLoginId:other.loginId];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (GetCarBandReq_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (GetCarBandReq_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setSid:[input readString]];
        break;
      }
      case 16: {
        [self setLoginId:[input readInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasSid {
  return result.hasSid;
}
- (NSString*) sid {
  return result.sid;
}
- (GetCarBandReq_Builder*) setSid:(NSString*) value {
  result.hasSid = YES;
  result.sid = value;
  return self;
}
- (GetCarBandReq_Builder*) clearSid {
  result.hasSid = NO;
  result.sid = @"";
  return self;
}
- (BOOL) hasLoginId {
  return result.hasLoginId;
}
- (int32_t) loginId {
  return result.loginId;
}
- (GetCarBandReq_Builder*) setLoginId:(int32_t) value {
  result.hasLoginId = YES;
  result.loginId = value;
  return self;
}
- (GetCarBandReq_Builder*) clearLoginId {
  result.hasLoginId = NO;
  result.loginId = 0;
  return self;
}
@end

@interface GetCarBandRes ()
@property int32_t retCode;
@property (retain) NSString* sid;
@property int32_t loginId;
@property (retain) NSMutableArray* mutableCarBandGroupList;
@end

@implementation GetCarBandRes

- (BOOL) hasRetCode {
  return !!hasRetCode_;
}
- (void) setHasRetCode:(BOOL) value {
  hasRetCode_ = !!value;
}
@synthesize retCode;
- (BOOL) hasSid {
  return !!hasSid_;
}
- (void) setHasSid:(BOOL) value {
  hasSid_ = !!value;
}
@synthesize sid;
- (BOOL) hasLoginId {
  return !!hasLoginId_;
}
- (void) setHasLoginId:(BOOL) value {
  hasLoginId_ = !!value;
}
@synthesize loginId;
@synthesize mutableCarBandGroupList;
- (void) dealloc {
  self.sid = nil;
  self.mutableCarBandGroupList = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.retCode = 0;
    self.sid = @"";
    self.loginId = 0;
  }
  return self;
}
static GetCarBandRes* defaultGetCarBandResInstance = nil;
+ (void) initialize {
  if (self == [GetCarBandRes class]) {
    defaultGetCarBandResInstance = [[GetCarBandRes alloc] init];
  }
}
+ (GetCarBandRes*) defaultInstance {
  return defaultGetCarBandResInstance;
}
- (GetCarBandRes*) defaultInstance {
  return defaultGetCarBandResInstance;
}
- (NSArray*) carBandGroupList {
  return mutableCarBandGroupList;
}
- (CarBandInfo*) carBandGroupAtIndex:(int32_t) index {
  id value = [mutableCarBandGroupList objectAtIndex:index];
  return value;
}
- (BOOL) isInitialized {
  if (!self.hasRetCode) {
    return NO;
  }
  if (!self.hasSid) {
    return NO;
  }
  if (!self.hasLoginId) {
    return NO;
  }
  for (CarBandInfo* element in self.carBandGroupList) {
    if (!element.isInitialized) {
      return NO;
    }
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasRetCode) {
    [output writeInt32:1 value:self.retCode];
  }
  if (self.hasSid) {
    [output writeString:2 value:self.sid];
  }
  if (self.hasLoginId) {
    [output writeInt32:3 value:self.loginId];
  }
  for (CarBandInfo* element in self.carBandGroupList) {
    [output writeMessage:4 value:element];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasRetCode) {
    size += computeInt32Size(1, self.retCode);
  }
  if (self.hasSid) {
    size += computeStringSize(2, self.sid);
  }
  if (self.hasLoginId) {
    size += computeInt32Size(3, self.loginId);
  }
  for (CarBandInfo* element in self.carBandGroupList) {
    size += computeMessageSize(4, element);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (GetCarBandRes*) parseFromData:(NSData*) data {
  return (GetCarBandRes*)[[[GetCarBandRes builder] mergeFromData:data] build];
}
+ (GetCarBandRes*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (GetCarBandRes*)[[[GetCarBandRes builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (GetCarBandRes*) parseFromInputStream:(NSInputStream*) input {
  return (GetCarBandRes*)[[[GetCarBandRes builder] mergeFromInputStream:input] build];
}
+ (GetCarBandRes*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (GetCarBandRes*)[[[GetCarBandRes builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (GetCarBandRes*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (GetCarBandRes*)[[[GetCarBandRes builder] mergeFromCodedInputStream:input] build];
}
+ (GetCarBandRes*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (GetCarBandRes*)[[[GetCarBandRes builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (GetCarBandRes_Builder*) builder {
  return [[[GetCarBandRes_Builder alloc] init] autorelease];
}
+ (GetCarBandRes_Builder*) builderWithPrototype:(GetCarBandRes*) prototype {
  return [[GetCarBandRes builder] mergeFrom:prototype];
}
- (GetCarBandRes_Builder*) builder {
  return [GetCarBandRes builder];
}
@end

@interface GetCarBandRes_Builder()
@property (retain) GetCarBandRes* result;
@end

@implementation GetCarBandRes_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[GetCarBandRes alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (GetCarBandRes_Builder*) clear {
  self.result = [[[GetCarBandRes alloc] init] autorelease];
  return self;
}
- (GetCarBandRes_Builder*) clone {
  return [GetCarBandRes builderWithPrototype:result];
}
- (GetCarBandRes*) defaultInstance {
  return [GetCarBandRes defaultInstance];
}
- (GetCarBandRes*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (GetCarBandRes*) buildPartial {
  GetCarBandRes* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (GetCarBandRes_Builder*) mergeFrom:(GetCarBandRes*) other {
  if (other == [GetCarBandRes defaultInstance]) {
    return self;
  }
  if (other.hasRetCode) {
    [self setRetCode:other.retCode];
  }
  if (other.hasSid) {
    [self setSid:other.sid];
  }
  if (other.hasLoginId) {
    [self setLoginId:other.loginId];
  }
  if (other.mutableCarBandGroupList.count > 0) {
    if (result.mutableCarBandGroupList == nil) {
      result.mutableCarBandGroupList = [NSMutableArray array];
    }
    [result.mutableCarBandGroupList addObjectsFromArray:other.mutableCarBandGroupList];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (GetCarBandRes_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (GetCarBandRes_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setRetCode:[input readInt32]];
        break;
      }
      case 18: {
        [self setSid:[input readString]];
        break;
      }
      case 24: {
        [self setLoginId:[input readInt32]];
        break;
      }
      case 34: {
        CarBandInfo_Builder* subBuilder = [CarBandInfo builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addCarBandGroup:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL) hasRetCode {
  return result.hasRetCode;
}
- (int32_t) retCode {
  return result.retCode;
}
- (GetCarBandRes_Builder*) setRetCode:(int32_t) value {
  result.hasRetCode = YES;
  result.retCode = value;
  return self;
}
- (GetCarBandRes_Builder*) clearRetCode {
  result.hasRetCode = NO;
  result.retCode = 0;
  return self;
}
- (BOOL) hasSid {
  return result.hasSid;
}
- (NSString*) sid {
  return result.sid;
}
- (GetCarBandRes_Builder*) setSid:(NSString*) value {
  result.hasSid = YES;
  result.sid = value;
  return self;
}
- (GetCarBandRes_Builder*) clearSid {
  result.hasSid = NO;
  result.sid = @"";
  return self;
}
- (BOOL) hasLoginId {
  return result.hasLoginId;
}
- (int32_t) loginId {
  return result.loginId;
}
- (GetCarBandRes_Builder*) setLoginId:(int32_t) value {
  result.hasLoginId = YES;
  result.loginId = value;
  return self;
}
- (GetCarBandRes_Builder*) clearLoginId {
  result.hasLoginId = NO;
  result.loginId = 0;
  return self;
}
- (NSArray*) carBandGroupList {
  if (result.mutableCarBandGroupList == nil) { return [NSArray array]; }
  return result.mutableCarBandGroupList;
}
- (CarBandInfo*) carBandGroupAtIndex:(int32_t) index {
  return [result carBandGroupAtIndex:index];
}
- (GetCarBandRes_Builder*) replaceCarBandGroupAtIndex:(int32_t) index with:(CarBandInfo*) value {
  [result.mutableCarBandGroupList replaceObjectAtIndex:index withObject:value];
  return self;
}
- (GetCarBandRes_Builder*) addAllCarBandGroup:(NSArray*) values {
  if (result.mutableCarBandGroupList == nil) {
    result.mutableCarBandGroupList = [NSMutableArray array];
  }
  [result.mutableCarBandGroupList addObjectsFromArray:values];
  return self;
}
- (GetCarBandRes_Builder*) clearCarBandGroupList {
  result.mutableCarBandGroupList = nil;
  return self;
}
- (GetCarBandRes_Builder*) addCarBandGroup:(CarBandInfo*) value {
  if (result.mutableCarBandGroupList == nil) {
    result.mutableCarBandGroupList = [NSMutableArray array];
  }
  [result.mutableCarBandGroupList addObject:value];
  return self;
}
@end

@interface CartypeInfo ()
@property int32_t cartypeId;
@property (retain) NSString* cartypeName;
@end

@implementation CartypeInfo

- (BOOL) hasCartypeId {
  return !!hasCartypeId_;
}
- (void) setHasCartypeId:(BOOL) value {
  hasCartypeId_ = !!value;
}
@synthesize cartypeId;
- (BOOL) hasCartypeName {
  return !!hasCartypeName_;
}
- (void) setHasCartypeName:(BOOL) value {
  hasCartypeName_ = !!value;
}
@synthesize cartypeName;
- (void) dealloc {
  self.cartypeName = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.cartypeId = 0;
    self.cartypeName = @"";
  }
  return self;
}
static CartypeInfo* defaultCartypeInfoInstance = nil;
+ (void) initialize {
  if (self == [CartypeInfo class]) {
    defaultCartypeInfoInstance = [[CartypeInfo alloc] init];
  }
}
+ (CartypeInfo*) defaultInstance {
  return defaultCartypeInfoInstance;
}
- (CartypeInfo*) defaultInstance {
  return defaultCartypeInfoInstance;
}
- (BOOL) isInitialized {
  if (!self.hasCartypeId) {
    return NO;
  }
  if (!self.hasCartypeName) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasCartypeId) {
    [output writeInt32:1 value:self.cartypeId];
  }
  if (self.hasCartypeName) {
    [output writeString:2 value:self.cartypeName];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasCartypeId) {
    size += computeInt32Size(1, self.cartypeId);
  }
  if (self.hasCartypeName) {
    size += computeStringSize(2, self.cartypeName);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (CartypeInfo*) parseFromData:(NSData*) data {
  return (CartypeInfo*)[[[CartypeInfo builder] mergeFromData:data] build];
}
+ (CartypeInfo*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CartypeInfo*)[[[CartypeInfo builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (CartypeInfo*) parseFromInputStream:(NSInputStream*) input {
  return (CartypeInfo*)[[[CartypeInfo builder] mergeFromInputStream:input] build];
}
+ (CartypeInfo*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CartypeInfo*)[[[CartypeInfo builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CartypeInfo*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (CartypeInfo*)[[[CartypeInfo builder] mergeFromCodedInputStream:input] build];
}
+ (CartypeInfo*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CartypeInfo*)[[[CartypeInfo builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CartypeInfo_Builder*) builder {
  return [[[CartypeInfo_Builder alloc] init] autorelease];
}
+ (CartypeInfo_Builder*) builderWithPrototype:(CartypeInfo*) prototype {
  return [[CartypeInfo builder] mergeFrom:prototype];
}
- (CartypeInfo_Builder*) builder {
  return [CartypeInfo builder];
}
@end

@interface CartypeInfo_Builder()
@property (retain) CartypeInfo* result;
@end

@implementation CartypeInfo_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[CartypeInfo alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (CartypeInfo_Builder*) clear {
  self.result = [[[CartypeInfo alloc] init] autorelease];
  return self;
}
- (CartypeInfo_Builder*) clone {
  return [CartypeInfo builderWithPrototype:result];
}
- (CartypeInfo*) defaultInstance {
  return [CartypeInfo defaultInstance];
}
- (CartypeInfo*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (CartypeInfo*) buildPartial {
  CartypeInfo* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (CartypeInfo_Builder*) mergeFrom:(CartypeInfo*) other {
  if (other == [CartypeInfo defaultInstance]) {
    return self;
  }
  if (other.hasCartypeId) {
    [self setCartypeId:other.cartypeId];
  }
  if (other.hasCartypeName) {
    [self setCartypeName:other.cartypeName];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (CartypeInfo_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (CartypeInfo_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setCartypeId:[input readInt32]];
        break;
      }
      case 18: {
        [self setCartypeName:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasCartypeId {
  return result.hasCartypeId;
}
- (int32_t) cartypeId {
  return result.cartypeId;
}
- (CartypeInfo_Builder*) setCartypeId:(int32_t) value {
  result.hasCartypeId = YES;
  result.cartypeId = value;
  return self;
}
- (CartypeInfo_Builder*) clearCartypeId {
  result.hasCartypeId = NO;
  result.cartypeId = 0;
  return self;
}
- (BOOL) hasCartypeName {
  return result.hasCartypeName;
}
- (NSString*) cartypeName {
  return result.cartypeName;
}
- (CartypeInfo_Builder*) setCartypeName:(NSString*) value {
  result.hasCartypeName = YES;
  result.cartypeName = value;
  return self;
}
- (CartypeInfo_Builder*) clearCartypeName {
  result.hasCartypeName = NO;
  result.cartypeName = @"";
  return self;
}
@end

@interface GetCartypeReq ()
@property (retain) NSString* sid;
@property int32_t loginId;
@property int32_t carBand;
@end

@implementation GetCartypeReq

- (BOOL) hasSid {
  return !!hasSid_;
}
- (void) setHasSid:(BOOL) value {
  hasSid_ = !!value;
}
@synthesize sid;
- (BOOL) hasLoginId {
  return !!hasLoginId_;
}
- (void) setHasLoginId:(BOOL) value {
  hasLoginId_ = !!value;
}
@synthesize loginId;
- (BOOL) hasCarBand {
  return !!hasCarBand_;
}
- (void) setHasCarBand:(BOOL) value {
  hasCarBand_ = !!value;
}
@synthesize carBand;
- (void) dealloc {
  self.sid = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.sid = @"";
    self.loginId = 0;
    self.carBand = 0;
  }
  return self;
}
static GetCartypeReq* defaultGetCartypeReqInstance = nil;
+ (void) initialize {
  if (self == [GetCartypeReq class]) {
    defaultGetCartypeReqInstance = [[GetCartypeReq alloc] init];
  }
}
+ (GetCartypeReq*) defaultInstance {
  return defaultGetCartypeReqInstance;
}
- (GetCartypeReq*) defaultInstance {
  return defaultGetCartypeReqInstance;
}
- (BOOL) isInitialized {
  if (!self.hasSid) {
    return NO;
  }
  if (!self.hasLoginId) {
    return NO;
  }
  if (!self.hasCarBand) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasSid) {
    [output writeString:1 value:self.sid];
  }
  if (self.hasLoginId) {
    [output writeInt32:2 value:self.loginId];
  }
  if (self.hasCarBand) {
    [output writeInt32:3 value:self.carBand];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasSid) {
    size += computeStringSize(1, self.sid);
  }
  if (self.hasLoginId) {
    size += computeInt32Size(2, self.loginId);
  }
  if (self.hasCarBand) {
    size += computeInt32Size(3, self.carBand);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (GetCartypeReq*) parseFromData:(NSData*) data {
  return (GetCartypeReq*)[[[GetCartypeReq builder] mergeFromData:data] build];
}
+ (GetCartypeReq*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (GetCartypeReq*)[[[GetCartypeReq builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (GetCartypeReq*) parseFromInputStream:(NSInputStream*) input {
  return (GetCartypeReq*)[[[GetCartypeReq builder] mergeFromInputStream:input] build];
}
+ (GetCartypeReq*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (GetCartypeReq*)[[[GetCartypeReq builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (GetCartypeReq*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (GetCartypeReq*)[[[GetCartypeReq builder] mergeFromCodedInputStream:input] build];
}
+ (GetCartypeReq*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (GetCartypeReq*)[[[GetCartypeReq builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (GetCartypeReq_Builder*) builder {
  return [[[GetCartypeReq_Builder alloc] init] autorelease];
}
+ (GetCartypeReq_Builder*) builderWithPrototype:(GetCartypeReq*) prototype {
  return [[GetCartypeReq builder] mergeFrom:prototype];
}
- (GetCartypeReq_Builder*) builder {
  return [GetCartypeReq builder];
}
@end

@interface GetCartypeReq_Builder()
@property (retain) GetCartypeReq* result;
@end

@implementation GetCartypeReq_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[GetCartypeReq alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (GetCartypeReq_Builder*) clear {
  self.result = [[[GetCartypeReq alloc] init] autorelease];
  return self;
}
- (GetCartypeReq_Builder*) clone {
  return [GetCartypeReq builderWithPrototype:result];
}
- (GetCartypeReq*) defaultInstance {
  return [GetCartypeReq defaultInstance];
}
- (GetCartypeReq*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (GetCartypeReq*) buildPartial {
  GetCartypeReq* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (GetCartypeReq_Builder*) mergeFrom:(GetCartypeReq*) other {
  if (other == [GetCartypeReq defaultInstance]) {
    return self;
  }
  if (other.hasSid) {
    [self setSid:other.sid];
  }
  if (other.hasLoginId) {
    [self setLoginId:other.loginId];
  }
  if (other.hasCarBand) {
    [self setCarBand:other.carBand];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (GetCartypeReq_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (GetCartypeReq_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setSid:[input readString]];
        break;
      }
      case 16: {
        [self setLoginId:[input readInt32]];
        break;
      }
      case 24: {
        [self setCarBand:[input readInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasSid {
  return result.hasSid;
}
- (NSString*) sid {
  return result.sid;
}
- (GetCartypeReq_Builder*) setSid:(NSString*) value {
  result.hasSid = YES;
  result.sid = value;
  return self;
}
- (GetCartypeReq_Builder*) clearSid {
  result.hasSid = NO;
  result.sid = @"";
  return self;
}
- (BOOL) hasLoginId {
  return result.hasLoginId;
}
- (int32_t) loginId {
  return result.loginId;
}
- (GetCartypeReq_Builder*) setLoginId:(int32_t) value {
  result.hasLoginId = YES;
  result.loginId = value;
  return self;
}
- (GetCartypeReq_Builder*) clearLoginId {
  result.hasLoginId = NO;
  result.loginId = 0;
  return self;
}
- (BOOL) hasCarBand {
  return result.hasCarBand;
}
- (int32_t) carBand {
  return result.carBand;
}
- (GetCartypeReq_Builder*) setCarBand:(int32_t) value {
  result.hasCarBand = YES;
  result.carBand = value;
  return self;
}
- (GetCartypeReq_Builder*) clearCarBand {
  result.hasCarBand = NO;
  result.carBand = 0;
  return self;
}
@end

@interface GetCartypeRes ()
@property int32_t retCode;
@property (retain) NSString* sid;
@property int32_t loginId;
@property (retain) NSMutableArray* mutableCartypeGroupList;
@end

@implementation GetCartypeRes

- (BOOL) hasRetCode {
  return !!hasRetCode_;
}
- (void) setHasRetCode:(BOOL) value {
  hasRetCode_ = !!value;
}
@synthesize retCode;
- (BOOL) hasSid {
  return !!hasSid_;
}
- (void) setHasSid:(BOOL) value {
  hasSid_ = !!value;
}
@synthesize sid;
- (BOOL) hasLoginId {
  return !!hasLoginId_;
}
- (void) setHasLoginId:(BOOL) value {
  hasLoginId_ = !!value;
}
@synthesize loginId;
@synthesize mutableCartypeGroupList;
- (void) dealloc {
  self.sid = nil;
  self.mutableCartypeGroupList = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.retCode = 0;
    self.sid = @"";
    self.loginId = 0;
  }
  return self;
}
static GetCartypeRes* defaultGetCartypeResInstance = nil;
+ (void) initialize {
  if (self == [GetCartypeRes class]) {
    defaultGetCartypeResInstance = [[GetCartypeRes alloc] init];
  }
}
+ (GetCartypeRes*) defaultInstance {
  return defaultGetCartypeResInstance;
}
- (GetCartypeRes*) defaultInstance {
  return defaultGetCartypeResInstance;
}
- (NSArray*) cartypeGroupList {
  return mutableCartypeGroupList;
}
- (CartypeInfo*) cartypeGroupAtIndex:(int32_t) index {
  id value = [mutableCartypeGroupList objectAtIndex:index];
  return value;
}
- (BOOL) isInitialized {
  if (!self.hasRetCode) {
    return NO;
  }
  if (!self.hasSid) {
    return NO;
  }
  if (!self.hasLoginId) {
    return NO;
  }
  for (CartypeInfo* element in self.cartypeGroupList) {
    if (!element.isInitialized) {
      return NO;
    }
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasRetCode) {
    [output writeInt32:1 value:self.retCode];
  }
  if (self.hasSid) {
    [output writeString:2 value:self.sid];
  }
  if (self.hasLoginId) {
    [output writeInt32:3 value:self.loginId];
  }
  for (CartypeInfo* element in self.cartypeGroupList) {
    [output writeMessage:4 value:element];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasRetCode) {
    size += computeInt32Size(1, self.retCode);
  }
  if (self.hasSid) {
    size += computeStringSize(2, self.sid);
  }
  if (self.hasLoginId) {
    size += computeInt32Size(3, self.loginId);
  }
  for (CartypeInfo* element in self.cartypeGroupList) {
    size += computeMessageSize(4, element);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (GetCartypeRes*) parseFromData:(NSData*) data {
  return (GetCartypeRes*)[[[GetCartypeRes builder] mergeFromData:data] build];
}
+ (GetCartypeRes*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (GetCartypeRes*)[[[GetCartypeRes builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (GetCartypeRes*) parseFromInputStream:(NSInputStream*) input {
  return (GetCartypeRes*)[[[GetCartypeRes builder] mergeFromInputStream:input] build];
}
+ (GetCartypeRes*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (GetCartypeRes*)[[[GetCartypeRes builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (GetCartypeRes*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (GetCartypeRes*)[[[GetCartypeRes builder] mergeFromCodedInputStream:input] build];
}
+ (GetCartypeRes*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (GetCartypeRes*)[[[GetCartypeRes builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (GetCartypeRes_Builder*) builder {
  return [[[GetCartypeRes_Builder alloc] init] autorelease];
}
+ (GetCartypeRes_Builder*) builderWithPrototype:(GetCartypeRes*) prototype {
  return [[GetCartypeRes builder] mergeFrom:prototype];
}
- (GetCartypeRes_Builder*) builder {
  return [GetCartypeRes builder];
}
@end

@interface GetCartypeRes_Builder()
@property (retain) GetCartypeRes* result;
@end

@implementation GetCartypeRes_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[GetCartypeRes alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (GetCartypeRes_Builder*) clear {
  self.result = [[[GetCartypeRes alloc] init] autorelease];
  return self;
}
- (GetCartypeRes_Builder*) clone {
  return [GetCartypeRes builderWithPrototype:result];
}
- (GetCartypeRes*) defaultInstance {
  return [GetCartypeRes defaultInstance];
}
- (GetCartypeRes*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (GetCartypeRes*) buildPartial {
  GetCartypeRes* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (GetCartypeRes_Builder*) mergeFrom:(GetCartypeRes*) other {
  if (other == [GetCartypeRes defaultInstance]) {
    return self;
  }
  if (other.hasRetCode) {
    [self setRetCode:other.retCode];
  }
  if (other.hasSid) {
    [self setSid:other.sid];
  }
  if (other.hasLoginId) {
    [self setLoginId:other.loginId];
  }
  if (other.mutableCartypeGroupList.count > 0) {
    if (result.mutableCartypeGroupList == nil) {
      result.mutableCartypeGroupList = [NSMutableArray array];
    }
    [result.mutableCartypeGroupList addObjectsFromArray:other.mutableCartypeGroupList];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (GetCartypeRes_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (GetCartypeRes_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setRetCode:[input readInt32]];
        break;
      }
      case 18: {
        [self setSid:[input readString]];
        break;
      }
      case 24: {
        [self setLoginId:[input readInt32]];
        break;
      }
      case 34: {
        CartypeInfo_Builder* subBuilder = [CartypeInfo builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addCartypeGroup:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL) hasRetCode {
  return result.hasRetCode;
}
- (int32_t) retCode {
  return result.retCode;
}
- (GetCartypeRes_Builder*) setRetCode:(int32_t) value {
  result.hasRetCode = YES;
  result.retCode = value;
  return self;
}
- (GetCartypeRes_Builder*) clearRetCode {
  result.hasRetCode = NO;
  result.retCode = 0;
  return self;
}
- (BOOL) hasSid {
  return result.hasSid;
}
- (NSString*) sid {
  return result.sid;
}
- (GetCartypeRes_Builder*) setSid:(NSString*) value {
  result.hasSid = YES;
  result.sid = value;
  return self;
}
- (GetCartypeRes_Builder*) clearSid {
  result.hasSid = NO;
  result.sid = @"";
  return self;
}
- (BOOL) hasLoginId {
  return result.hasLoginId;
}
- (int32_t) loginId {
  return result.loginId;
}
- (GetCartypeRes_Builder*) setLoginId:(int32_t) value {
  result.hasLoginId = YES;
  result.loginId = value;
  return self;
}
- (GetCartypeRes_Builder*) clearLoginId {
  result.hasLoginId = NO;
  result.loginId = 0;
  return self;
}
- (NSArray*) cartypeGroupList {
  if (result.mutableCartypeGroupList == nil) { return [NSArray array]; }
  return result.mutableCartypeGroupList;
}
- (CartypeInfo*) cartypeGroupAtIndex:(int32_t) index {
  return [result cartypeGroupAtIndex:index];
}
- (GetCartypeRes_Builder*) replaceCartypeGroupAtIndex:(int32_t) index with:(CartypeInfo*) value {
  [result.mutableCartypeGroupList replaceObjectAtIndex:index withObject:value];
  return self;
}
- (GetCartypeRes_Builder*) addAllCartypeGroup:(NSArray*) values {
  if (result.mutableCartypeGroupList == nil) {
    result.mutableCartypeGroupList = [NSMutableArray array];
  }
  [result.mutableCartypeGroupList addObjectsFromArray:values];
  return self;
}
- (GetCartypeRes_Builder*) clearCartypeGroupList {
  result.mutableCartypeGroupList = nil;
  return self;
}
- (GetCartypeRes_Builder*) addCartypeGroup:(CartypeInfo*) value {
  if (result.mutableCartypeGroupList == nil) {
    result.mutableCartypeGroupList = [NSMutableArray array];
  }
  [result.mutableCartypeGroupList addObject:value];
  return self;
}
@end

@interface GetUserInfoReq ()
@property (retain) NSString* sid;
@property int32_t loginId;
@end

@implementation GetUserInfoReq

- (BOOL) hasSid {
  return !!hasSid_;
}
- (void) setHasSid:(BOOL) value {
  hasSid_ = !!value;
}
@synthesize sid;
- (BOOL) hasLoginId {
  return !!hasLoginId_;
}
- (void) setHasLoginId:(BOOL) value {
  hasLoginId_ = !!value;
}
@synthesize loginId;
- (void) dealloc {
  self.sid = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.sid = @"";
    self.loginId = 0;
  }
  return self;
}
static GetUserInfoReq* defaultGetUserInfoReqInstance = nil;
+ (void) initialize {
  if (self == [GetUserInfoReq class]) {
    defaultGetUserInfoReqInstance = [[GetUserInfoReq alloc] init];
  }
}
+ (GetUserInfoReq*) defaultInstance {
  return defaultGetUserInfoReqInstance;
}
- (GetUserInfoReq*) defaultInstance {
  return defaultGetUserInfoReqInstance;
}
- (BOOL) isInitialized {
  if (!self.hasSid) {
    return NO;
  }
  if (!self.hasLoginId) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasSid) {
    [output writeString:1 value:self.sid];
  }
  if (self.hasLoginId) {
    [output writeInt32:2 value:self.loginId];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasSid) {
    size += computeStringSize(1, self.sid);
  }
  if (self.hasLoginId) {
    size += computeInt32Size(2, self.loginId);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (GetUserInfoReq*) parseFromData:(NSData*) data {
  return (GetUserInfoReq*)[[[GetUserInfoReq builder] mergeFromData:data] build];
}
+ (GetUserInfoReq*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (GetUserInfoReq*)[[[GetUserInfoReq builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (GetUserInfoReq*) parseFromInputStream:(NSInputStream*) input {
  return (GetUserInfoReq*)[[[GetUserInfoReq builder] mergeFromInputStream:input] build];
}
+ (GetUserInfoReq*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (GetUserInfoReq*)[[[GetUserInfoReq builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (GetUserInfoReq*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (GetUserInfoReq*)[[[GetUserInfoReq builder] mergeFromCodedInputStream:input] build];
}
+ (GetUserInfoReq*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (GetUserInfoReq*)[[[GetUserInfoReq builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (GetUserInfoReq_Builder*) builder {
  return [[[GetUserInfoReq_Builder alloc] init] autorelease];
}
+ (GetUserInfoReq_Builder*) builderWithPrototype:(GetUserInfoReq*) prototype {
  return [[GetUserInfoReq builder] mergeFrom:prototype];
}
- (GetUserInfoReq_Builder*) builder {
  return [GetUserInfoReq builder];
}
@end

@interface GetUserInfoReq_Builder()
@property (retain) GetUserInfoReq* result;
@end

@implementation GetUserInfoReq_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[GetUserInfoReq alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (GetUserInfoReq_Builder*) clear {
  self.result = [[[GetUserInfoReq alloc] init] autorelease];
  return self;
}
- (GetUserInfoReq_Builder*) clone {
  return [GetUserInfoReq builderWithPrototype:result];
}
- (GetUserInfoReq*) defaultInstance {
  return [GetUserInfoReq defaultInstance];
}
- (GetUserInfoReq*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (GetUserInfoReq*) buildPartial {
  GetUserInfoReq* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (GetUserInfoReq_Builder*) mergeFrom:(GetUserInfoReq*) other {
  if (other == [GetUserInfoReq defaultInstance]) {
    return self;
  }
  if (other.hasSid) {
    [self setSid:other.sid];
  }
  if (other.hasLoginId) {
    [self setLoginId:other.loginId];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (GetUserInfoReq_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (GetUserInfoReq_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setSid:[input readString]];
        break;
      }
      case 16: {
        [self setLoginId:[input readInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasSid {
  return result.hasSid;
}
- (NSString*) sid {
  return result.sid;
}
- (GetUserInfoReq_Builder*) setSid:(NSString*) value {
  result.hasSid = YES;
  result.sid = value;
  return self;
}
- (GetUserInfoReq_Builder*) clearSid {
  result.hasSid = NO;
  result.sid = @"";
  return self;
}
- (BOOL) hasLoginId {
  return result.hasLoginId;
}
- (int32_t) loginId {
  return result.loginId;
}
- (GetUserInfoReq_Builder*) setLoginId:(int32_t) value {
  result.hasLoginId = YES;
  result.loginId = value;
  return self;
}
- (GetUserInfoReq_Builder*) clearLoginId {
  result.hasLoginId = NO;
  result.loginId = 0;
  return self;
}
@end

@interface GetUserInfoRes ()
@property int32_t retCode;
@property (retain) NSString* sid;
@property (retain) UserInfo* userInfoId;
@end

@implementation GetUserInfoRes

- (BOOL) hasRetCode {
  return !!hasRetCode_;
}
- (void) setHasRetCode:(BOOL) value {
  hasRetCode_ = !!value;
}
@synthesize retCode;
- (BOOL) hasSid {
  return !!hasSid_;
}
- (void) setHasSid:(BOOL) value {
  hasSid_ = !!value;
}
@synthesize sid;
- (BOOL) hasUserInfoId {
  return !!hasUserInfoId_;
}
- (void) setHasUserInfoId:(BOOL) value {
  hasUserInfoId_ = !!value;
}
@synthesize userInfoId;
- (void) dealloc {
  self.sid = nil;
  self.userInfoId = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.retCode = 0;
    self.sid = @"";
    self.userInfoId = [UserInfo defaultInstance];
  }
  return self;
}
static GetUserInfoRes* defaultGetUserInfoResInstance = nil;
+ (void) initialize {
  if (self == [GetUserInfoRes class]) {
    defaultGetUserInfoResInstance = [[GetUserInfoRes alloc] init];
  }
}
+ (GetUserInfoRes*) defaultInstance {
  return defaultGetUserInfoResInstance;
}
- (GetUserInfoRes*) defaultInstance {
  return defaultGetUserInfoResInstance;
}
- (BOOL) isInitialized {
  if (!self.hasRetCode) {
    return NO;
  }
  if (!self.hasSid) {
    return NO;
  }
  if (!self.hasUserInfoId) {
    return NO;
  }
  if (!self.userInfoId.isInitialized) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasRetCode) {
    [output writeInt32:1 value:self.retCode];
  }
  if (self.hasSid) {
    [output writeString:2 value:self.sid];
  }
  if (self.hasUserInfoId) {
    [output writeMessage:3 value:self.userInfoId];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasRetCode) {
    size += computeInt32Size(1, self.retCode);
  }
  if (self.hasSid) {
    size += computeStringSize(2, self.sid);
  }
  if (self.hasUserInfoId) {
    size += computeMessageSize(3, self.userInfoId);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (GetUserInfoRes*) parseFromData:(NSData*) data {
  return (GetUserInfoRes*)[[[GetUserInfoRes builder] mergeFromData:data] build];
}
+ (GetUserInfoRes*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (GetUserInfoRes*)[[[GetUserInfoRes builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (GetUserInfoRes*) parseFromInputStream:(NSInputStream*) input {
  return (GetUserInfoRes*)[[[GetUserInfoRes builder] mergeFromInputStream:input] build];
}
+ (GetUserInfoRes*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (GetUserInfoRes*)[[[GetUserInfoRes builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (GetUserInfoRes*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (GetUserInfoRes*)[[[GetUserInfoRes builder] mergeFromCodedInputStream:input] build];
}
+ (GetUserInfoRes*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (GetUserInfoRes*)[[[GetUserInfoRes builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (GetUserInfoRes_Builder*) builder {
  return [[[GetUserInfoRes_Builder alloc] init] autorelease];
}
+ (GetUserInfoRes_Builder*) builderWithPrototype:(GetUserInfoRes*) prototype {
  return [[GetUserInfoRes builder] mergeFrom:prototype];
}
- (GetUserInfoRes_Builder*) builder {
  return [GetUserInfoRes builder];
}
@end

@interface GetUserInfoRes_Builder()
@property (retain) GetUserInfoRes* result;
@end

@implementation GetUserInfoRes_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[GetUserInfoRes alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (GetUserInfoRes_Builder*) clear {
  self.result = [[[GetUserInfoRes alloc] init] autorelease];
  return self;
}
- (GetUserInfoRes_Builder*) clone {
  return [GetUserInfoRes builderWithPrototype:result];
}
- (GetUserInfoRes*) defaultInstance {
  return [GetUserInfoRes defaultInstance];
}
- (GetUserInfoRes*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (GetUserInfoRes*) buildPartial {
  GetUserInfoRes* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (GetUserInfoRes_Builder*) mergeFrom:(GetUserInfoRes*) other {
  if (other == [GetUserInfoRes defaultInstance]) {
    return self;
  }
  if (other.hasRetCode) {
    [self setRetCode:other.retCode];
  }
  if (other.hasSid) {
    [self setSid:other.sid];
  }
  if (other.hasUserInfoId) {
    [self mergeUserInfoId:other.userInfoId];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (GetUserInfoRes_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (GetUserInfoRes_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setRetCode:[input readInt32]];
        break;
      }
      case 18: {
        [self setSid:[input readString]];
        break;
      }
      case 26: {
        UserInfo_Builder* subBuilder = [UserInfo builder];
        if (self.hasUserInfoId) {
          [subBuilder mergeFrom:self.userInfoId];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setUserInfoId:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL) hasRetCode {
  return result.hasRetCode;
}
- (int32_t) retCode {
  return result.retCode;
}
- (GetUserInfoRes_Builder*) setRetCode:(int32_t) value {
  result.hasRetCode = YES;
  result.retCode = value;
  return self;
}
- (GetUserInfoRes_Builder*) clearRetCode {
  result.hasRetCode = NO;
  result.retCode = 0;
  return self;
}
- (BOOL) hasSid {
  return result.hasSid;
}
- (NSString*) sid {
  return result.sid;
}
- (GetUserInfoRes_Builder*) setSid:(NSString*) value {
  result.hasSid = YES;
  result.sid = value;
  return self;
}
- (GetUserInfoRes_Builder*) clearSid {
  result.hasSid = NO;
  result.sid = @"";
  return self;
}
- (BOOL) hasUserInfoId {
  return result.hasUserInfoId;
}
- (UserInfo*) userInfoId {
  return result.userInfoId;
}
- (GetUserInfoRes_Builder*) setUserInfoId:(UserInfo*) value {
  result.hasUserInfoId = YES;
  result.userInfoId = value;
  return self;
}
- (GetUserInfoRes_Builder*) setUserInfoIdBuilder:(UserInfo_Builder*) builderForValue {
  return [self setUserInfoId:[builderForValue build]];
}
- (GetUserInfoRes_Builder*) mergeUserInfoId:(UserInfo*) value {
  if (result.hasUserInfoId &&
      result.userInfoId != [UserInfo defaultInstance]) {
    result.userInfoId =
      [[[UserInfo builderWithPrototype:result.userInfoId] mergeFrom:value] buildPartial];
  } else {
    result.userInfoId = value;
  }
  result.hasUserInfoId = YES;
  return self;
}
- (GetUserInfoRes_Builder*) clearUserInfoId {
  result.hasUserInfoId = NO;
  result.userInfoId = [UserInfo defaultInstance];
  return self;
}
@end

@interface UserLoginReq ()
@property int32_t sid;
@property (retain) NSString* phoneNumber;
@property (retain) NSString* loginPwd;
@end

@implementation UserLoginReq

- (BOOL) hasSid {
  return !!hasSid_;
}
- (void) setHasSid:(BOOL) value {
  hasSid_ = !!value;
}
@synthesize sid;
- (BOOL) hasPhoneNumber {
  return !!hasPhoneNumber_;
}
- (void) setHasPhoneNumber:(BOOL) value {
  hasPhoneNumber_ = !!value;
}
@synthesize phoneNumber;
- (BOOL) hasLoginPwd {
  return !!hasLoginPwd_;
}
- (void) setHasLoginPwd:(BOOL) value {
  hasLoginPwd_ = !!value;
}
@synthesize loginPwd;
- (void) dealloc {
  self.phoneNumber = nil;
  self.loginPwd = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.sid = 0;
    self.phoneNumber = @"";
    self.loginPwd = @"";
  }
  return self;
}
static UserLoginReq* defaultUserLoginReqInstance = nil;
+ (void) initialize {
  if (self == [UserLoginReq class]) {
    defaultUserLoginReqInstance = [[UserLoginReq alloc] init];
  }
}
+ (UserLoginReq*) defaultInstance {
  return defaultUserLoginReqInstance;
}
- (UserLoginReq*) defaultInstance {
  return defaultUserLoginReqInstance;
}
- (BOOL) isInitialized {
  if (!self.hasSid) {
    return NO;
  }
  if (!self.hasPhoneNumber) {
    return NO;
  }
  if (!self.hasLoginPwd) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasSid) {
    [output writeInt32:1 value:self.sid];
  }
  if (self.hasPhoneNumber) {
    [output writeString:2 value:self.phoneNumber];
  }
  if (self.hasLoginPwd) {
    [output writeString:3 value:self.loginPwd];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasSid) {
    size += computeInt32Size(1, self.sid);
  }
  if (self.hasPhoneNumber) {
    size += computeStringSize(2, self.phoneNumber);
  }
  if (self.hasLoginPwd) {
    size += computeStringSize(3, self.loginPwd);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (UserLoginReq*) parseFromData:(NSData*) data {
  return (UserLoginReq*)[[[UserLoginReq builder] mergeFromData:data] build];
}
+ (UserLoginReq*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (UserLoginReq*)[[[UserLoginReq builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (UserLoginReq*) parseFromInputStream:(NSInputStream*) input {
  return (UserLoginReq*)[[[UserLoginReq builder] mergeFromInputStream:input] build];
}
+ (UserLoginReq*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (UserLoginReq*)[[[UserLoginReq builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (UserLoginReq*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (UserLoginReq*)[[[UserLoginReq builder] mergeFromCodedInputStream:input] build];
}
+ (UserLoginReq*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (UserLoginReq*)[[[UserLoginReq builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (UserLoginReq_Builder*) builder {
  return [[[UserLoginReq_Builder alloc] init] autorelease];
}
+ (UserLoginReq_Builder*) builderWithPrototype:(UserLoginReq*) prototype {
  return [[UserLoginReq builder] mergeFrom:prototype];
}
- (UserLoginReq_Builder*) builder {
  return [UserLoginReq builder];
}
@end

@interface UserLoginReq_Builder()
@property (retain) UserLoginReq* result;
@end

@implementation UserLoginReq_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[UserLoginReq alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (UserLoginReq_Builder*) clear {
  self.result = [[[UserLoginReq alloc] init] autorelease];
  return self;
}
- (UserLoginReq_Builder*) clone {
  return [UserLoginReq builderWithPrototype:result];
}
- (UserLoginReq*) defaultInstance {
  return [UserLoginReq defaultInstance];
}
- (UserLoginReq*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (UserLoginReq*) buildPartial {
  UserLoginReq* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (UserLoginReq_Builder*) mergeFrom:(UserLoginReq*) other {
  if (other == [UserLoginReq defaultInstance]) {
    return self;
  }
  if (other.hasSid) {
    [self setSid:other.sid];
  }
  if (other.hasPhoneNumber) {
    [self setPhoneNumber:other.phoneNumber];
  }
  if (other.hasLoginPwd) {
    [self setLoginPwd:other.loginPwd];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (UserLoginReq_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (UserLoginReq_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setSid:[input readInt32]];
        break;
      }
      case 18: {
        [self setPhoneNumber:[input readString]];
        break;
      }
      case 26: {
        [self setLoginPwd:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasSid {
  return result.hasSid;
}
- (int32_t) sid {
  return result.sid;
}
- (UserLoginReq_Builder*) setSid:(int32_t) value {
  result.hasSid = YES;
  result.sid = value;
  return self;
}
- (UserLoginReq_Builder*) clearSid {
  result.hasSid = NO;
  result.sid = 0;
  return self;
}
- (BOOL) hasPhoneNumber {
  return result.hasPhoneNumber;
}
- (NSString*) phoneNumber {
  return result.phoneNumber;
}
- (UserLoginReq_Builder*) setPhoneNumber:(NSString*) value {
  result.hasPhoneNumber = YES;
  result.phoneNumber = value;
  return self;
}
- (UserLoginReq_Builder*) clearPhoneNumber {
  result.hasPhoneNumber = NO;
  result.phoneNumber = @"";
  return self;
}
- (BOOL) hasLoginPwd {
  return result.hasLoginPwd;
}
- (NSString*) loginPwd {
  return result.loginPwd;
}
- (UserLoginReq_Builder*) setLoginPwd:(NSString*) value {
  result.hasLoginPwd = YES;
  result.loginPwd = value;
  return self;
}
- (UserLoginReq_Builder*) clearLoginPwd {
  result.hasLoginPwd = NO;
  result.loginPwd = @"";
  return self;
}
@end

@interface GetUserBalanceReq ()
@property (retain) NSString* sid;
@property int32_t loginId;
@end

@implementation GetUserBalanceReq

- (BOOL) hasSid {
  return !!hasSid_;
}
- (void) setHasSid:(BOOL) value {
  hasSid_ = !!value;
}
@synthesize sid;
- (BOOL) hasLoginId {
  return !!hasLoginId_;
}
- (void) setHasLoginId:(BOOL) value {
  hasLoginId_ = !!value;
}
@synthesize loginId;
- (void) dealloc {
  self.sid = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.sid = @"";
    self.loginId = 0;
  }
  return self;
}
static GetUserBalanceReq* defaultGetUserBalanceReqInstance = nil;
+ (void) initialize {
  if (self == [GetUserBalanceReq class]) {
    defaultGetUserBalanceReqInstance = [[GetUserBalanceReq alloc] init];
  }
}
+ (GetUserBalanceReq*) defaultInstance {
  return defaultGetUserBalanceReqInstance;
}
- (GetUserBalanceReq*) defaultInstance {
  return defaultGetUserBalanceReqInstance;
}
- (BOOL) isInitialized {
  if (!self.hasSid) {
    return NO;
  }
  if (!self.hasLoginId) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasSid) {
    [output writeString:1 value:self.sid];
  }
  if (self.hasLoginId) {
    [output writeInt32:2 value:self.loginId];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasSid) {
    size += computeStringSize(1, self.sid);
  }
  if (self.hasLoginId) {
    size += computeInt32Size(2, self.loginId);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (GetUserBalanceReq*) parseFromData:(NSData*) data {
  return (GetUserBalanceReq*)[[[GetUserBalanceReq builder] mergeFromData:data] build];
}
+ (GetUserBalanceReq*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (GetUserBalanceReq*)[[[GetUserBalanceReq builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (GetUserBalanceReq*) parseFromInputStream:(NSInputStream*) input {
  return (GetUserBalanceReq*)[[[GetUserBalanceReq builder] mergeFromInputStream:input] build];
}
+ (GetUserBalanceReq*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (GetUserBalanceReq*)[[[GetUserBalanceReq builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (GetUserBalanceReq*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (GetUserBalanceReq*)[[[GetUserBalanceReq builder] mergeFromCodedInputStream:input] build];
}
+ (GetUserBalanceReq*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (GetUserBalanceReq*)[[[GetUserBalanceReq builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (GetUserBalanceReq_Builder*) builder {
  return [[[GetUserBalanceReq_Builder alloc] init] autorelease];
}
+ (GetUserBalanceReq_Builder*) builderWithPrototype:(GetUserBalanceReq*) prototype {
  return [[GetUserBalanceReq builder] mergeFrom:prototype];
}
- (GetUserBalanceReq_Builder*) builder {
  return [GetUserBalanceReq builder];
}
@end

@interface GetUserBalanceReq_Builder()
@property (retain) GetUserBalanceReq* result;
@end

@implementation GetUserBalanceReq_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[GetUserBalanceReq alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (GetUserBalanceReq_Builder*) clear {
  self.result = [[[GetUserBalanceReq alloc] init] autorelease];
  return self;
}
- (GetUserBalanceReq_Builder*) clone {
  return [GetUserBalanceReq builderWithPrototype:result];
}
- (GetUserBalanceReq*) defaultInstance {
  return [GetUserBalanceReq defaultInstance];
}
- (GetUserBalanceReq*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (GetUserBalanceReq*) buildPartial {
  GetUserBalanceReq* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (GetUserBalanceReq_Builder*) mergeFrom:(GetUserBalanceReq*) other {
  if (other == [GetUserBalanceReq defaultInstance]) {
    return self;
  }
  if (other.hasSid) {
    [self setSid:other.sid];
  }
  if (other.hasLoginId) {
    [self setLoginId:other.loginId];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (GetUserBalanceReq_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (GetUserBalanceReq_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setSid:[input readString]];
        break;
      }
      case 16: {
        [self setLoginId:[input readInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasSid {
  return result.hasSid;
}
- (NSString*) sid {
  return result.sid;
}
- (GetUserBalanceReq_Builder*) setSid:(NSString*) value {
  result.hasSid = YES;
  result.sid = value;
  return self;
}
- (GetUserBalanceReq_Builder*) clearSid {
  result.hasSid = NO;
  result.sid = @"";
  return self;
}
- (BOOL) hasLoginId {
  return result.hasLoginId;
}
- (int32_t) loginId {
  return result.loginId;
}
- (GetUserBalanceReq_Builder*) setLoginId:(int32_t) value {
  result.hasLoginId = YES;
  result.loginId = value;
  return self;
}
- (GetUserBalanceReq_Builder*) clearLoginId {
  result.hasLoginId = NO;
  result.loginId = 0;
  return self;
}
@end

@interface GetUserBalanceRes ()
@property int32_t retCode;
@property (retain) NSString* sid;
@property Float64 balance;
@end

@implementation GetUserBalanceRes

- (BOOL) hasRetCode {
  return !!hasRetCode_;
}
- (void) setHasRetCode:(BOOL) value {
  hasRetCode_ = !!value;
}
@synthesize retCode;
- (BOOL) hasSid {
  return !!hasSid_;
}
- (void) setHasSid:(BOOL) value {
  hasSid_ = !!value;
}
@synthesize sid;
- (BOOL) hasBalance {
  return !!hasBalance_;
}
- (void) setHasBalance:(BOOL) value {
  hasBalance_ = !!value;
}
@synthesize balance;
- (void) dealloc {
  self.sid = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.retCode = 0;
    self.sid = @"";
    self.balance = 0;
  }
  return self;
}
static GetUserBalanceRes* defaultGetUserBalanceResInstance = nil;
+ (void) initialize {
  if (self == [GetUserBalanceRes class]) {
    defaultGetUserBalanceResInstance = [[GetUserBalanceRes alloc] init];
  }
}
+ (GetUserBalanceRes*) defaultInstance {
  return defaultGetUserBalanceResInstance;
}
- (GetUserBalanceRes*) defaultInstance {
  return defaultGetUserBalanceResInstance;
}
- (BOOL) isInitialized {
  if (!self.hasRetCode) {
    return NO;
  }
  if (!self.hasSid) {
    return NO;
  }
  if (!self.hasBalance) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasRetCode) {
    [output writeInt32:1 value:self.retCode];
  }
  if (self.hasSid) {
    [output writeString:2 value:self.sid];
  }
  if (self.hasBalance) {
    [output writeDouble:3 value:self.balance];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasRetCode) {
    size += computeInt32Size(1, self.retCode);
  }
  if (self.hasSid) {
    size += computeStringSize(2, self.sid);
  }
  if (self.hasBalance) {
    size += computeDoubleSize(3, self.balance);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (GetUserBalanceRes*) parseFromData:(NSData*) data {
  return (GetUserBalanceRes*)[[[GetUserBalanceRes builder] mergeFromData:data] build];
}
+ (GetUserBalanceRes*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (GetUserBalanceRes*)[[[GetUserBalanceRes builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (GetUserBalanceRes*) parseFromInputStream:(NSInputStream*) input {
  return (GetUserBalanceRes*)[[[GetUserBalanceRes builder] mergeFromInputStream:input] build];
}
+ (GetUserBalanceRes*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (GetUserBalanceRes*)[[[GetUserBalanceRes builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (GetUserBalanceRes*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (GetUserBalanceRes*)[[[GetUserBalanceRes builder] mergeFromCodedInputStream:input] build];
}
+ (GetUserBalanceRes*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (GetUserBalanceRes*)[[[GetUserBalanceRes builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (GetUserBalanceRes_Builder*) builder {
  return [[[GetUserBalanceRes_Builder alloc] init] autorelease];
}
+ (GetUserBalanceRes_Builder*) builderWithPrototype:(GetUserBalanceRes*) prototype {
  return [[GetUserBalanceRes builder] mergeFrom:prototype];
}
- (GetUserBalanceRes_Builder*) builder {
  return [GetUserBalanceRes builder];
}
@end

@interface GetUserBalanceRes_Builder()
@property (retain) GetUserBalanceRes* result;
@end

@implementation GetUserBalanceRes_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[GetUserBalanceRes alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (GetUserBalanceRes_Builder*) clear {
  self.result = [[[GetUserBalanceRes alloc] init] autorelease];
  return self;
}
- (GetUserBalanceRes_Builder*) clone {
  return [GetUserBalanceRes builderWithPrototype:result];
}
- (GetUserBalanceRes*) defaultInstance {
  return [GetUserBalanceRes defaultInstance];
}
- (GetUserBalanceRes*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (GetUserBalanceRes*) buildPartial {
  GetUserBalanceRes* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (GetUserBalanceRes_Builder*) mergeFrom:(GetUserBalanceRes*) other {
  if (other == [GetUserBalanceRes defaultInstance]) {
    return self;
  }
  if (other.hasRetCode) {
    [self setRetCode:other.retCode];
  }
  if (other.hasSid) {
    [self setSid:other.sid];
  }
  if (other.hasBalance) {
    [self setBalance:other.balance];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (GetUserBalanceRes_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (GetUserBalanceRes_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setRetCode:[input readInt32]];
        break;
      }
      case 18: {
        [self setSid:[input readString]];
        break;
      }
      case 25: {
        [self setBalance:[input readDouble]];
        break;
      }
    }
  }
}
- (BOOL) hasRetCode {
  return result.hasRetCode;
}
- (int32_t) retCode {
  return result.retCode;
}
- (GetUserBalanceRes_Builder*) setRetCode:(int32_t) value {
  result.hasRetCode = YES;
  result.retCode = value;
  return self;
}
- (GetUserBalanceRes_Builder*) clearRetCode {
  result.hasRetCode = NO;
  result.retCode = 0;
  return self;
}
- (BOOL) hasSid {
  return result.hasSid;
}
- (NSString*) sid {
  return result.sid;
}
- (GetUserBalanceRes_Builder*) setSid:(NSString*) value {
  result.hasSid = YES;
  result.sid = value;
  return self;
}
- (GetUserBalanceRes_Builder*) clearSid {
  result.hasSid = NO;
  result.sid = @"";
  return self;
}
- (BOOL) hasBalance {
  return result.hasBalance;
}
- (Float64) balance {
  return result.balance;
}
- (GetUserBalanceRes_Builder*) setBalance:(Float64) value {
  result.hasBalance = YES;
  result.balance = value;
  return self;
}
- (GetUserBalanceRes_Builder*) clearBalance {
  result.hasBalance = NO;
  result.balance = 0;
  return self;
}
@end

@interface UserChargeReq ()
@property (retain) NSString* sid;
@property int32_t loginId;
@property Float64 amount;
@end

@implementation UserChargeReq

- (BOOL) hasSid {
  return !!hasSid_;
}
- (void) setHasSid:(BOOL) value {
  hasSid_ = !!value;
}
@synthesize sid;
- (BOOL) hasLoginId {
  return !!hasLoginId_;
}
- (void) setHasLoginId:(BOOL) value {
  hasLoginId_ = !!value;
}
@synthesize loginId;
- (BOOL) hasAmount {
  return !!hasAmount_;
}
- (void) setHasAmount:(BOOL) value {
  hasAmount_ = !!value;
}
@synthesize amount;
- (void) dealloc {
  self.sid = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.sid = @"";
    self.loginId = 0;
    self.amount = 0;
  }
  return self;
}
static UserChargeReq* defaultUserChargeReqInstance = nil;
+ (void) initialize {
  if (self == [UserChargeReq class]) {
    defaultUserChargeReqInstance = [[UserChargeReq alloc] init];
  }
}
+ (UserChargeReq*) defaultInstance {
  return defaultUserChargeReqInstance;
}
- (UserChargeReq*) defaultInstance {
  return defaultUserChargeReqInstance;
}
- (BOOL) isInitialized {
  if (!self.hasSid) {
    return NO;
  }
  if (!self.hasLoginId) {
    return NO;
  }
  if (!self.hasAmount) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasSid) {
    [output writeString:1 value:self.sid];
  }
  if (self.hasLoginId) {
    [output writeInt32:2 value:self.loginId];
  }
  if (self.hasAmount) {
    [output writeDouble:3 value:self.amount];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasSid) {
    size += computeStringSize(1, self.sid);
  }
  if (self.hasLoginId) {
    size += computeInt32Size(2, self.loginId);
  }
  if (self.hasAmount) {
    size += computeDoubleSize(3, self.amount);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (UserChargeReq*) parseFromData:(NSData*) data {
  return (UserChargeReq*)[[[UserChargeReq builder] mergeFromData:data] build];
}
+ (UserChargeReq*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (UserChargeReq*)[[[UserChargeReq builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (UserChargeReq*) parseFromInputStream:(NSInputStream*) input {
  return (UserChargeReq*)[[[UserChargeReq builder] mergeFromInputStream:input] build];
}
+ (UserChargeReq*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (UserChargeReq*)[[[UserChargeReq builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (UserChargeReq*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (UserChargeReq*)[[[UserChargeReq builder] mergeFromCodedInputStream:input] build];
}
+ (UserChargeReq*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (UserChargeReq*)[[[UserChargeReq builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (UserChargeReq_Builder*) builder {
  return [[[UserChargeReq_Builder alloc] init] autorelease];
}
+ (UserChargeReq_Builder*) builderWithPrototype:(UserChargeReq*) prototype {
  return [[UserChargeReq builder] mergeFrom:prototype];
}
- (UserChargeReq_Builder*) builder {
  return [UserChargeReq builder];
}
@end

@interface UserChargeReq_Builder()
@property (retain) UserChargeReq* result;
@end

@implementation UserChargeReq_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[UserChargeReq alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (UserChargeReq_Builder*) clear {
  self.result = [[[UserChargeReq alloc] init] autorelease];
  return self;
}
- (UserChargeReq_Builder*) clone {
  return [UserChargeReq builderWithPrototype:result];
}
- (UserChargeReq*) defaultInstance {
  return [UserChargeReq defaultInstance];
}
- (UserChargeReq*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (UserChargeReq*) buildPartial {
  UserChargeReq* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (UserChargeReq_Builder*) mergeFrom:(UserChargeReq*) other {
  if (other == [UserChargeReq defaultInstance]) {
    return self;
  }
  if (other.hasSid) {
    [self setSid:other.sid];
  }
  if (other.hasLoginId) {
    [self setLoginId:other.loginId];
  }
  if (other.hasAmount) {
    [self setAmount:other.amount];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (UserChargeReq_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (UserChargeReq_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setSid:[input readString]];
        break;
      }
      case 16: {
        [self setLoginId:[input readInt32]];
        break;
      }
      case 25: {
        [self setAmount:[input readDouble]];
        break;
      }
    }
  }
}
- (BOOL) hasSid {
  return result.hasSid;
}
- (NSString*) sid {
  return result.sid;
}
- (UserChargeReq_Builder*) setSid:(NSString*) value {
  result.hasSid = YES;
  result.sid = value;
  return self;
}
- (UserChargeReq_Builder*) clearSid {
  result.hasSid = NO;
  result.sid = @"";
  return self;
}
- (BOOL) hasLoginId {
  return result.hasLoginId;
}
- (int32_t) loginId {
  return result.loginId;
}
- (UserChargeReq_Builder*) setLoginId:(int32_t) value {
  result.hasLoginId = YES;
  result.loginId = value;
  return self;
}
- (UserChargeReq_Builder*) clearLoginId {
  result.hasLoginId = NO;
  result.loginId = 0;
  return self;
}
- (BOOL) hasAmount {
  return result.hasAmount;
}
- (Float64) amount {
  return result.amount;
}
- (UserChargeReq_Builder*) setAmount:(Float64) value {
  result.hasAmount = YES;
  result.amount = value;
  return self;
}
- (UserChargeReq_Builder*) clearAmount {
  result.hasAmount = NO;
  result.amount = 0;
  return self;
}
@end

@interface GetCSInfoReq ()
@property (retain) NSString* sid;
@property int32_t loginId;
@end

@implementation GetCSInfoReq

- (BOOL) hasSid {
  return !!hasSid_;
}
- (void) setHasSid:(BOOL) value {
  hasSid_ = !!value;
}
@synthesize sid;
- (BOOL) hasLoginId {
  return !!hasLoginId_;
}
- (void) setHasLoginId:(BOOL) value {
  hasLoginId_ = !!value;
}
@synthesize loginId;
- (void) dealloc {
  self.sid = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.sid = @"";
    self.loginId = 0;
  }
  return self;
}
static GetCSInfoReq* defaultGetCSInfoReqInstance = nil;
+ (void) initialize {
  if (self == [GetCSInfoReq class]) {
    defaultGetCSInfoReqInstance = [[GetCSInfoReq alloc] init];
  }
}
+ (GetCSInfoReq*) defaultInstance {
  return defaultGetCSInfoReqInstance;
}
- (GetCSInfoReq*) defaultInstance {
  return defaultGetCSInfoReqInstance;
}
- (BOOL) isInitialized {
  if (!self.hasSid) {
    return NO;
  }
  if (!self.hasLoginId) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasSid) {
    [output writeString:1 value:self.sid];
  }
  if (self.hasLoginId) {
    [output writeInt32:2 value:self.loginId];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasSid) {
    size += computeStringSize(1, self.sid);
  }
  if (self.hasLoginId) {
    size += computeInt32Size(2, self.loginId);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (GetCSInfoReq*) parseFromData:(NSData*) data {
  return (GetCSInfoReq*)[[[GetCSInfoReq builder] mergeFromData:data] build];
}
+ (GetCSInfoReq*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (GetCSInfoReq*)[[[GetCSInfoReq builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (GetCSInfoReq*) parseFromInputStream:(NSInputStream*) input {
  return (GetCSInfoReq*)[[[GetCSInfoReq builder] mergeFromInputStream:input] build];
}
+ (GetCSInfoReq*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (GetCSInfoReq*)[[[GetCSInfoReq builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (GetCSInfoReq*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (GetCSInfoReq*)[[[GetCSInfoReq builder] mergeFromCodedInputStream:input] build];
}
+ (GetCSInfoReq*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (GetCSInfoReq*)[[[GetCSInfoReq builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (GetCSInfoReq_Builder*) builder {
  return [[[GetCSInfoReq_Builder alloc] init] autorelease];
}
+ (GetCSInfoReq_Builder*) builderWithPrototype:(GetCSInfoReq*) prototype {
  return [[GetCSInfoReq builder] mergeFrom:prototype];
}
- (GetCSInfoReq_Builder*) builder {
  return [GetCSInfoReq builder];
}
@end

@interface GetCSInfoReq_Builder()
@property (retain) GetCSInfoReq* result;
@end

@implementation GetCSInfoReq_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[GetCSInfoReq alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (GetCSInfoReq_Builder*) clear {
  self.result = [[[GetCSInfoReq alloc] init] autorelease];
  return self;
}
- (GetCSInfoReq_Builder*) clone {
  return [GetCSInfoReq builderWithPrototype:result];
}
- (GetCSInfoReq*) defaultInstance {
  return [GetCSInfoReq defaultInstance];
}
- (GetCSInfoReq*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (GetCSInfoReq*) buildPartial {
  GetCSInfoReq* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (GetCSInfoReq_Builder*) mergeFrom:(GetCSInfoReq*) other {
  if (other == [GetCSInfoReq defaultInstance]) {
    return self;
  }
  if (other.hasSid) {
    [self setSid:other.sid];
  }
  if (other.hasLoginId) {
    [self setLoginId:other.loginId];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (GetCSInfoReq_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (GetCSInfoReq_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setSid:[input readString]];
        break;
      }
      case 16: {
        [self setLoginId:[input readInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasSid {
  return result.hasSid;
}
- (NSString*) sid {
  return result.sid;
}
- (GetCSInfoReq_Builder*) setSid:(NSString*) value {
  result.hasSid = YES;
  result.sid = value;
  return self;
}
- (GetCSInfoReq_Builder*) clearSid {
  result.hasSid = NO;
  result.sid = @"";
  return self;
}
- (BOOL) hasLoginId {
  return result.hasLoginId;
}
- (int32_t) loginId {
  return result.loginId;
}
- (GetCSInfoReq_Builder*) setLoginId:(int32_t) value {
  result.hasLoginId = YES;
  result.loginId = value;
  return self;
}
- (GetCSInfoReq_Builder*) clearLoginId {
  result.hasLoginId = NO;
  result.loginId = 0;
  return self;
}
@end

@interface GetCSInfoRes ()
@property int32_t retCode;
@property (retain) NSString* sid;
@property (retain) NSString* csinfo;
@property (retain) NSString* version;
@end

@implementation GetCSInfoRes

- (BOOL) hasRetCode {
  return !!hasRetCode_;
}
- (void) setHasRetCode:(BOOL) value {
  hasRetCode_ = !!value;
}
@synthesize retCode;
- (BOOL) hasSid {
  return !!hasSid_;
}
- (void) setHasSid:(BOOL) value {
  hasSid_ = !!value;
}
@synthesize sid;
- (BOOL) hasCsinfo {
  return !!hasCsinfo_;
}
- (void) setHasCsinfo:(BOOL) value {
  hasCsinfo_ = !!value;
}
@synthesize csinfo;
- (BOOL) hasVersion {
  return !!hasVersion_;
}
- (void) setHasVersion:(BOOL) value {
  hasVersion_ = !!value;
}
@synthesize version;
- (void) dealloc {
  self.sid = nil;
  self.csinfo = nil;
  self.version = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.retCode = 0;
    self.sid = @"";
    self.csinfo = @"";
    self.version = @"";
  }
  return self;
}
static GetCSInfoRes* defaultGetCSInfoResInstance = nil;
+ (void) initialize {
  if (self == [GetCSInfoRes class]) {
    defaultGetCSInfoResInstance = [[GetCSInfoRes alloc] init];
  }
}
+ (GetCSInfoRes*) defaultInstance {
  return defaultGetCSInfoResInstance;
}
- (GetCSInfoRes*) defaultInstance {
  return defaultGetCSInfoResInstance;
}
- (BOOL) isInitialized {
  if (!self.hasRetCode) {
    return NO;
  }
  if (!self.hasSid) {
    return NO;
  }
  if (!self.hasCsinfo) {
    return NO;
  }
  if (!self.hasVersion) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasRetCode) {
    [output writeInt32:1 value:self.retCode];
  }
  if (self.hasSid) {
    [output writeString:2 value:self.sid];
  }
  if (self.hasCsinfo) {
    [output writeString:3 value:self.csinfo];
  }
  if (self.hasVersion) {
    [output writeString:4 value:self.version];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasRetCode) {
    size += computeInt32Size(1, self.retCode);
  }
  if (self.hasSid) {
    size += computeStringSize(2, self.sid);
  }
  if (self.hasCsinfo) {
    size += computeStringSize(3, self.csinfo);
  }
  if (self.hasVersion) {
    size += computeStringSize(4, self.version);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (GetCSInfoRes*) parseFromData:(NSData*) data {
  return (GetCSInfoRes*)[[[GetCSInfoRes builder] mergeFromData:data] build];
}
+ (GetCSInfoRes*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (GetCSInfoRes*)[[[GetCSInfoRes builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (GetCSInfoRes*) parseFromInputStream:(NSInputStream*) input {
  return (GetCSInfoRes*)[[[GetCSInfoRes builder] mergeFromInputStream:input] build];
}
+ (GetCSInfoRes*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (GetCSInfoRes*)[[[GetCSInfoRes builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (GetCSInfoRes*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (GetCSInfoRes*)[[[GetCSInfoRes builder] mergeFromCodedInputStream:input] build];
}
+ (GetCSInfoRes*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (GetCSInfoRes*)[[[GetCSInfoRes builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (GetCSInfoRes_Builder*) builder {
  return [[[GetCSInfoRes_Builder alloc] init] autorelease];
}
+ (GetCSInfoRes_Builder*) builderWithPrototype:(GetCSInfoRes*) prototype {
  return [[GetCSInfoRes builder] mergeFrom:prototype];
}
- (GetCSInfoRes_Builder*) builder {
  return [GetCSInfoRes builder];
}
@end

@interface GetCSInfoRes_Builder()
@property (retain) GetCSInfoRes* result;
@end

@implementation GetCSInfoRes_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[GetCSInfoRes alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (GetCSInfoRes_Builder*) clear {
  self.result = [[[GetCSInfoRes alloc] init] autorelease];
  return self;
}
- (GetCSInfoRes_Builder*) clone {
  return [GetCSInfoRes builderWithPrototype:result];
}
- (GetCSInfoRes*) defaultInstance {
  return [GetCSInfoRes defaultInstance];
}
- (GetCSInfoRes*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (GetCSInfoRes*) buildPartial {
  GetCSInfoRes* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (GetCSInfoRes_Builder*) mergeFrom:(GetCSInfoRes*) other {
  if (other == [GetCSInfoRes defaultInstance]) {
    return self;
  }
  if (other.hasRetCode) {
    [self setRetCode:other.retCode];
  }
  if (other.hasSid) {
    [self setSid:other.sid];
  }
  if (other.hasCsinfo) {
    [self setCsinfo:other.csinfo];
  }
  if (other.hasVersion) {
    [self setVersion:other.version];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (GetCSInfoRes_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (GetCSInfoRes_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setRetCode:[input readInt32]];
        break;
      }
      case 18: {
        [self setSid:[input readString]];
        break;
      }
      case 26: {
        [self setCsinfo:[input readString]];
        break;
      }
      case 34: {
        [self setVersion:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasRetCode {
  return result.hasRetCode;
}
- (int32_t) retCode {
  return result.retCode;
}
- (GetCSInfoRes_Builder*) setRetCode:(int32_t) value {
  result.hasRetCode = YES;
  result.retCode = value;
  return self;
}
- (GetCSInfoRes_Builder*) clearRetCode {
  result.hasRetCode = NO;
  result.retCode = 0;
  return self;
}
- (BOOL) hasSid {
  return result.hasSid;
}
- (NSString*) sid {
  return result.sid;
}
- (GetCSInfoRes_Builder*) setSid:(NSString*) value {
  result.hasSid = YES;
  result.sid = value;
  return self;
}
- (GetCSInfoRes_Builder*) clearSid {
  result.hasSid = NO;
  result.sid = @"";
  return self;
}
- (BOOL) hasCsinfo {
  return result.hasCsinfo;
}
- (NSString*) csinfo {
  return result.csinfo;
}
- (GetCSInfoRes_Builder*) setCsinfo:(NSString*) value {
  result.hasCsinfo = YES;
  result.csinfo = value;
  return self;
}
- (GetCSInfoRes_Builder*) clearCsinfo {
  result.hasCsinfo = NO;
  result.csinfo = @"";
  return self;
}
- (BOOL) hasVersion {
  return result.hasVersion;
}
- (NSString*) version {
  return result.version;
}
- (GetCSInfoRes_Builder*) setVersion:(NSString*) value {
  result.hasVersion = YES;
  result.version = value;
  return self;
}
- (GetCSInfoRes_Builder*) clearVersion {
  result.hasVersion = NO;
  result.version = @"";
  return self;
}
@end

@interface ChangePasswdReq ()
@property (retain) NSString* sid;
@property int32_t loginId;
@property int32_t userType;
@property (retain) NSString* oldpasswd;
@property (retain) NSString* newpasswd;
@end

@implementation ChangePasswdReq

- (BOOL) hasSid {
  return !!hasSid_;
}
- (void) setHasSid:(BOOL) value {
  hasSid_ = !!value;
}
@synthesize sid;
- (BOOL) hasLoginId {
  return !!hasLoginId_;
}
- (void) setHasLoginId:(BOOL) value {
  hasLoginId_ = !!value;
}
@synthesize loginId;
- (BOOL) hasUserType {
  return !!hasUserType_;
}
- (void) setHasUserType:(BOOL) value {
  hasUserType_ = !!value;
}
@synthesize userType;
- (BOOL) hasOldpasswd {
  return !!hasOldpasswd_;
}
- (void) setHasOldpasswd:(BOOL) value {
  hasOldpasswd_ = !!value;
}
@synthesize oldpasswd;
- (BOOL) hasNewpasswd {
  return !!hasNewpasswd_;
}
- (void) setHasNewpasswd:(BOOL) value {
  hasNewpasswd_ = !!value;
}
@synthesize newpasswd;
- (void) dealloc {
  self.sid = nil;
  self.oldpasswd = nil;
  self.newpasswd = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.sid = @"";
    self.loginId = 0;
    self.userType = 0;
    self.oldpasswd = @"";
    self.newpasswd = @"";
  }
  return self;
}
static ChangePasswdReq* defaultChangePasswdReqInstance = nil;
+ (void) initialize {
  if (self == [ChangePasswdReq class]) {
    defaultChangePasswdReqInstance = [[ChangePasswdReq alloc] init];
  }
}
+ (ChangePasswdReq*) defaultInstance {
  return defaultChangePasswdReqInstance;
}
- (ChangePasswdReq*) defaultInstance {
  return defaultChangePasswdReqInstance;
}
- (BOOL) isInitialized {
  if (!self.hasSid) {
    return NO;
  }
  if (!self.hasLoginId) {
    return NO;
  }
  if (!self.hasUserType) {
    return NO;
  }
  if (!self.hasOldpasswd) {
    return NO;
  }
  if (!self.hasNewpasswd) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasSid) {
    [output writeString:1 value:self.sid];
  }
  if (self.hasLoginId) {
    [output writeInt32:2 value:self.loginId];
  }
  if (self.hasUserType) {
    [output writeInt32:3 value:self.userType];
  }
  if (self.hasOldpasswd) {
    [output writeString:4 value:self.oldpasswd];
  }
  if (self.hasNewpasswd) {
    [output writeString:5 value:self.newpasswd];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasSid) {
    size += computeStringSize(1, self.sid);
  }
  if (self.hasLoginId) {
    size += computeInt32Size(2, self.loginId);
  }
  if (self.hasUserType) {
    size += computeInt32Size(3, self.userType);
  }
  if (self.hasOldpasswd) {
    size += computeStringSize(4, self.oldpasswd);
  }
  if (self.hasNewpasswd) {
    size += computeStringSize(5, self.newpasswd);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (ChangePasswdReq*) parseFromData:(NSData*) data {
  return (ChangePasswdReq*)[[[ChangePasswdReq builder] mergeFromData:data] build];
}
+ (ChangePasswdReq*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ChangePasswdReq*)[[[ChangePasswdReq builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (ChangePasswdReq*) parseFromInputStream:(NSInputStream*) input {
  return (ChangePasswdReq*)[[[ChangePasswdReq builder] mergeFromInputStream:input] build];
}
+ (ChangePasswdReq*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ChangePasswdReq*)[[[ChangePasswdReq builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (ChangePasswdReq*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (ChangePasswdReq*)[[[ChangePasswdReq builder] mergeFromCodedInputStream:input] build];
}
+ (ChangePasswdReq*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ChangePasswdReq*)[[[ChangePasswdReq builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (ChangePasswdReq_Builder*) builder {
  return [[[ChangePasswdReq_Builder alloc] init] autorelease];
}
+ (ChangePasswdReq_Builder*) builderWithPrototype:(ChangePasswdReq*) prototype {
  return [[ChangePasswdReq builder] mergeFrom:prototype];
}
- (ChangePasswdReq_Builder*) builder {
  return [ChangePasswdReq builder];
}
@end

@interface ChangePasswdReq_Builder()
@property (retain) ChangePasswdReq* result;
@end

@implementation ChangePasswdReq_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[ChangePasswdReq alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (ChangePasswdReq_Builder*) clear {
  self.result = [[[ChangePasswdReq alloc] init] autorelease];
  return self;
}
- (ChangePasswdReq_Builder*) clone {
  return [ChangePasswdReq builderWithPrototype:result];
}
- (ChangePasswdReq*) defaultInstance {
  return [ChangePasswdReq defaultInstance];
}
- (ChangePasswdReq*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (ChangePasswdReq*) buildPartial {
  ChangePasswdReq* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (ChangePasswdReq_Builder*) mergeFrom:(ChangePasswdReq*) other {
  if (other == [ChangePasswdReq defaultInstance]) {
    return self;
  }
  if (other.hasSid) {
    [self setSid:other.sid];
  }
  if (other.hasLoginId) {
    [self setLoginId:other.loginId];
  }
  if (other.hasUserType) {
    [self setUserType:other.userType];
  }
  if (other.hasOldpasswd) {
    [self setOldpasswd:other.oldpasswd];
  }
  if (other.hasNewpasswd) {
    [self setNewpasswd:other.newpasswd];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (ChangePasswdReq_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (ChangePasswdReq_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setSid:[input readString]];
        break;
      }
      case 16: {
        [self setLoginId:[input readInt32]];
        break;
      }
      case 24: {
        [self setUserType:[input readInt32]];
        break;
      }
      case 34: {
        [self setOldpasswd:[input readString]];
        break;
      }
      case 42: {
        [self setNewpasswd:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasSid {
  return result.hasSid;
}
- (NSString*) sid {
  return result.sid;
}
- (ChangePasswdReq_Builder*) setSid:(NSString*) value {
  result.hasSid = YES;
  result.sid = value;
  return self;
}
- (ChangePasswdReq_Builder*) clearSid {
  result.hasSid = NO;
  result.sid = @"";
  return self;
}
- (BOOL) hasLoginId {
  return result.hasLoginId;
}
- (int32_t) loginId {
  return result.loginId;
}
- (ChangePasswdReq_Builder*) setLoginId:(int32_t) value {
  result.hasLoginId = YES;
  result.loginId = value;
  return self;
}
- (ChangePasswdReq_Builder*) clearLoginId {
  result.hasLoginId = NO;
  result.loginId = 0;
  return self;
}
- (BOOL) hasUserType {
  return result.hasUserType;
}
- (int32_t) userType {
  return result.userType;
}
- (ChangePasswdReq_Builder*) setUserType:(int32_t) value {
  result.hasUserType = YES;
  result.userType = value;
  return self;
}
- (ChangePasswdReq_Builder*) clearUserType {
  result.hasUserType = NO;
  result.userType = 0;
  return self;
}
- (BOOL) hasOldpasswd {
  return result.hasOldpasswd;
}
- (NSString*) oldpasswd {
  return result.oldpasswd;
}
- (ChangePasswdReq_Builder*) setOldpasswd:(NSString*) value {
  result.hasOldpasswd = YES;
  result.oldpasswd = value;
  return self;
}
- (ChangePasswdReq_Builder*) clearOldpasswd {
  result.hasOldpasswd = NO;
  result.oldpasswd = @"";
  return self;
}
- (BOOL) hasNewpasswd {
  return result.hasNewpasswd;
}
- (NSString*) newpasswd {
  return result.newpasswd;
}
- (ChangePasswdReq_Builder*) setNewpasswd:(NSString*) value {
  result.hasNewpasswd = YES;
  result.newpasswd = value;
  return self;
}
- (ChangePasswdReq_Builder*) clearNewpasswd {
  result.hasNewpasswd = NO;
  result.newpasswd = @"";
  return self;
}
@end

@interface CheckScanCodeReq ()
@property (retain) NSString* sid;
@property int32_t loginId;
@property (retain) NSString* barcode;
@property int32_t userType;
@end

@implementation CheckScanCodeReq

- (BOOL) hasSid {
  return !!hasSid_;
}
- (void) setHasSid:(BOOL) value {
  hasSid_ = !!value;
}
@synthesize sid;
- (BOOL) hasLoginId {
  return !!hasLoginId_;
}
- (void) setHasLoginId:(BOOL) value {
  hasLoginId_ = !!value;
}
@synthesize loginId;
- (BOOL) hasBarcode {
  return !!hasBarcode_;
}
- (void) setHasBarcode:(BOOL) value {
  hasBarcode_ = !!value;
}
@synthesize barcode;
- (BOOL) hasUserType {
  return !!hasUserType_;
}
- (void) setHasUserType:(BOOL) value {
  hasUserType_ = !!value;
}
@synthesize userType;
- (void) dealloc {
  self.sid = nil;
  self.barcode = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.sid = @"";
    self.loginId = 0;
    self.barcode = @"";
    self.userType = 1;
  }
  return self;
}
static CheckScanCodeReq* defaultCheckScanCodeReqInstance = nil;
+ (void) initialize {
  if (self == [CheckScanCodeReq class]) {
    defaultCheckScanCodeReqInstance = [[CheckScanCodeReq alloc] init];
  }
}
+ (CheckScanCodeReq*) defaultInstance {
  return defaultCheckScanCodeReqInstance;
}
- (CheckScanCodeReq*) defaultInstance {
  return defaultCheckScanCodeReqInstance;
}
- (BOOL) isInitialized {
  if (!self.hasSid) {
    return NO;
  }
  if (!self.hasLoginId) {
    return NO;
  }
  if (!self.hasBarcode) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasSid) {
    [output writeString:1 value:self.sid];
  }
  if (self.hasLoginId) {
    [output writeInt32:2 value:self.loginId];
  }
  if (self.hasBarcode) {
    [output writeString:3 value:self.barcode];
  }
  if (self.hasUserType) {
    [output writeInt32:4 value:self.userType];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasSid) {
    size += computeStringSize(1, self.sid);
  }
  if (self.hasLoginId) {
    size += computeInt32Size(2, self.loginId);
  }
  if (self.hasBarcode) {
    size += computeStringSize(3, self.barcode);
  }
  if (self.hasUserType) {
    size += computeInt32Size(4, self.userType);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (CheckScanCodeReq*) parseFromData:(NSData*) data {
  return (CheckScanCodeReq*)[[[CheckScanCodeReq builder] mergeFromData:data] build];
}
+ (CheckScanCodeReq*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CheckScanCodeReq*)[[[CheckScanCodeReq builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (CheckScanCodeReq*) parseFromInputStream:(NSInputStream*) input {
  return (CheckScanCodeReq*)[[[CheckScanCodeReq builder] mergeFromInputStream:input] build];
}
+ (CheckScanCodeReq*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CheckScanCodeReq*)[[[CheckScanCodeReq builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CheckScanCodeReq*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (CheckScanCodeReq*)[[[CheckScanCodeReq builder] mergeFromCodedInputStream:input] build];
}
+ (CheckScanCodeReq*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CheckScanCodeReq*)[[[CheckScanCodeReq builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CheckScanCodeReq_Builder*) builder {
  return [[[CheckScanCodeReq_Builder alloc] init] autorelease];
}
+ (CheckScanCodeReq_Builder*) builderWithPrototype:(CheckScanCodeReq*) prototype {
  return [[CheckScanCodeReq builder] mergeFrom:prototype];
}
- (CheckScanCodeReq_Builder*) builder {
  return [CheckScanCodeReq builder];
}
@end

@interface CheckScanCodeReq_Builder()
@property (retain) CheckScanCodeReq* result;
@end

@implementation CheckScanCodeReq_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[CheckScanCodeReq alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (CheckScanCodeReq_Builder*) clear {
  self.result = [[[CheckScanCodeReq alloc] init] autorelease];
  return self;
}
- (CheckScanCodeReq_Builder*) clone {
  return [CheckScanCodeReq builderWithPrototype:result];
}
- (CheckScanCodeReq*) defaultInstance {
  return [CheckScanCodeReq defaultInstance];
}
- (CheckScanCodeReq*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (CheckScanCodeReq*) buildPartial {
  CheckScanCodeReq* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (CheckScanCodeReq_Builder*) mergeFrom:(CheckScanCodeReq*) other {
  if (other == [CheckScanCodeReq defaultInstance]) {
    return self;
  }
  if (other.hasSid) {
    [self setSid:other.sid];
  }
  if (other.hasLoginId) {
    [self setLoginId:other.loginId];
  }
  if (other.hasBarcode) {
    [self setBarcode:other.barcode];
  }
  if (other.hasUserType) {
    [self setUserType:other.userType];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (CheckScanCodeReq_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (CheckScanCodeReq_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setSid:[input readString]];
        break;
      }
      case 16: {
        [self setLoginId:[input readInt32]];
        break;
      }
      case 26: {
        [self setBarcode:[input readString]];
        break;
      }
      case 32: {
        [self setUserType:[input readInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasSid {
  return result.hasSid;
}
- (NSString*) sid {
  return result.sid;
}
- (CheckScanCodeReq_Builder*) setSid:(NSString*) value {
  result.hasSid = YES;
  result.sid = value;
  return self;
}
- (CheckScanCodeReq_Builder*) clearSid {
  result.hasSid = NO;
  result.sid = @"";
  return self;
}
- (BOOL) hasLoginId {
  return result.hasLoginId;
}
- (int32_t) loginId {
  return result.loginId;
}
- (CheckScanCodeReq_Builder*) setLoginId:(int32_t) value {
  result.hasLoginId = YES;
  result.loginId = value;
  return self;
}
- (CheckScanCodeReq_Builder*) clearLoginId {
  result.hasLoginId = NO;
  result.loginId = 0;
  return self;
}
- (BOOL) hasBarcode {
  return result.hasBarcode;
}
- (NSString*) barcode {
  return result.barcode;
}
- (CheckScanCodeReq_Builder*) setBarcode:(NSString*) value {
  result.hasBarcode = YES;
  result.barcode = value;
  return self;
}
- (CheckScanCodeReq_Builder*) clearBarcode {
  result.hasBarcode = NO;
  result.barcode = @"";
  return self;
}
- (BOOL) hasUserType {
  return result.hasUserType;
}
- (int32_t) userType {
  return result.userType;
}
- (CheckScanCodeReq_Builder*) setUserType:(int32_t) value {
  result.hasUserType = YES;
  result.userType = value;
  return self;
}
- (CheckScanCodeReq_Builder*) clearUserType {
  result.hasUserType = NO;
  result.userType = 1;
  return self;
}
@end

@interface CheckScanCodeRes ()
@property int32_t retCode;
@property (retain) NSString* sid;
@property int32_t loginId;
@property int64_t orderId;
@property int32_t status;
@end

@implementation CheckScanCodeRes

- (BOOL) hasRetCode {
  return !!hasRetCode_;
}
- (void) setHasRetCode:(BOOL) value {
  hasRetCode_ = !!value;
}
@synthesize retCode;
- (BOOL) hasSid {
  return !!hasSid_;
}
- (void) setHasSid:(BOOL) value {
  hasSid_ = !!value;
}
@synthesize sid;
- (BOOL) hasLoginId {
  return !!hasLoginId_;
}
- (void) setHasLoginId:(BOOL) value {
  hasLoginId_ = !!value;
}
@synthesize loginId;
- (BOOL) hasOrderId {
  return !!hasOrderId_;
}
- (void) setHasOrderId:(BOOL) value {
  hasOrderId_ = !!value;
}
@synthesize orderId;
- (BOOL) hasStatus {
  return !!hasStatus_;
}
- (void) setHasStatus:(BOOL) value {
  hasStatus_ = !!value;
}
@synthesize status;
- (void) dealloc {
  self.sid = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.retCode = 0;
    self.sid = @"";
    self.loginId = 0;
    self.orderId = 0L;
    self.status = 0;
  }
  return self;
}
static CheckScanCodeRes* defaultCheckScanCodeResInstance = nil;
+ (void) initialize {
  if (self == [CheckScanCodeRes class]) {
    defaultCheckScanCodeResInstance = [[CheckScanCodeRes alloc] init];
  }
}
+ (CheckScanCodeRes*) defaultInstance {
  return defaultCheckScanCodeResInstance;
}
- (CheckScanCodeRes*) defaultInstance {
  return defaultCheckScanCodeResInstance;
}
- (BOOL) isInitialized {
  if (!self.hasRetCode) {
    return NO;
  }
  if (!self.hasSid) {
    return NO;
  }
  if (!self.hasLoginId) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasRetCode) {
    [output writeInt32:1 value:self.retCode];
  }
  if (self.hasSid) {
    [output writeString:2 value:self.sid];
  }
  if (self.hasLoginId) {
    [output writeInt32:3 value:self.loginId];
  }
  if (self.hasOrderId) {
    [output writeInt64:4 value:self.orderId];
  }
  if (self.hasStatus) {
    [output writeInt32:5 value:self.status];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasRetCode) {
    size += computeInt32Size(1, self.retCode);
  }
  if (self.hasSid) {
    size += computeStringSize(2, self.sid);
  }
  if (self.hasLoginId) {
    size += computeInt32Size(3, self.loginId);
  }
  if (self.hasOrderId) {
    size += computeInt64Size(4, self.orderId);
  }
  if (self.hasStatus) {
    size += computeInt32Size(5, self.status);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (CheckScanCodeRes*) parseFromData:(NSData*) data {
  return (CheckScanCodeRes*)[[[CheckScanCodeRes builder] mergeFromData:data] build];
}
+ (CheckScanCodeRes*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CheckScanCodeRes*)[[[CheckScanCodeRes builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (CheckScanCodeRes*) parseFromInputStream:(NSInputStream*) input {
  return (CheckScanCodeRes*)[[[CheckScanCodeRes builder] mergeFromInputStream:input] build];
}
+ (CheckScanCodeRes*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CheckScanCodeRes*)[[[CheckScanCodeRes builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CheckScanCodeRes*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (CheckScanCodeRes*)[[[CheckScanCodeRes builder] mergeFromCodedInputStream:input] build];
}
+ (CheckScanCodeRes*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CheckScanCodeRes*)[[[CheckScanCodeRes builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CheckScanCodeRes_Builder*) builder {
  return [[[CheckScanCodeRes_Builder alloc] init] autorelease];
}
+ (CheckScanCodeRes_Builder*) builderWithPrototype:(CheckScanCodeRes*) prototype {
  return [[CheckScanCodeRes builder] mergeFrom:prototype];
}
- (CheckScanCodeRes_Builder*) builder {
  return [CheckScanCodeRes builder];
}
@end

@interface CheckScanCodeRes_Builder()
@property (retain) CheckScanCodeRes* result;
@end

@implementation CheckScanCodeRes_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[CheckScanCodeRes alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (CheckScanCodeRes_Builder*) clear {
  self.result = [[[CheckScanCodeRes alloc] init] autorelease];
  return self;
}
- (CheckScanCodeRes_Builder*) clone {
  return [CheckScanCodeRes builderWithPrototype:result];
}
- (CheckScanCodeRes*) defaultInstance {
  return [CheckScanCodeRes defaultInstance];
}
- (CheckScanCodeRes*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (CheckScanCodeRes*) buildPartial {
  CheckScanCodeRes* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (CheckScanCodeRes_Builder*) mergeFrom:(CheckScanCodeRes*) other {
  if (other == [CheckScanCodeRes defaultInstance]) {
    return self;
  }
  if (other.hasRetCode) {
    [self setRetCode:other.retCode];
  }
  if (other.hasSid) {
    [self setSid:other.sid];
  }
  if (other.hasLoginId) {
    [self setLoginId:other.loginId];
  }
  if (other.hasOrderId) {
    [self setOrderId:other.orderId];
  }
  if (other.hasStatus) {
    [self setStatus:other.status];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (CheckScanCodeRes_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (CheckScanCodeRes_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setRetCode:[input readInt32]];
        break;
      }
      case 18: {
        [self setSid:[input readString]];
        break;
      }
      case 24: {
        [self setLoginId:[input readInt32]];
        break;
      }
      case 32: {
        [self setOrderId:[input readInt64]];
        break;
      }
      case 40: {
        [self setStatus:[input readInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasRetCode {
  return result.hasRetCode;
}
- (int32_t) retCode {
  return result.retCode;
}
- (CheckScanCodeRes_Builder*) setRetCode:(int32_t) value {
  result.hasRetCode = YES;
  result.retCode = value;
  return self;
}
- (CheckScanCodeRes_Builder*) clearRetCode {
  result.hasRetCode = NO;
  result.retCode = 0;
  return self;
}
- (BOOL) hasSid {
  return result.hasSid;
}
- (NSString*) sid {
  return result.sid;
}
- (CheckScanCodeRes_Builder*) setSid:(NSString*) value {
  result.hasSid = YES;
  result.sid = value;
  return self;
}
- (CheckScanCodeRes_Builder*) clearSid {
  result.hasSid = NO;
  result.sid = @"";
  return self;
}
- (BOOL) hasLoginId {
  return result.hasLoginId;
}
- (int32_t) loginId {
  return result.loginId;
}
- (CheckScanCodeRes_Builder*) setLoginId:(int32_t) value {
  result.hasLoginId = YES;
  result.loginId = value;
  return self;
}
- (CheckScanCodeRes_Builder*) clearLoginId {
  result.hasLoginId = NO;
  result.loginId = 0;
  return self;
}
- (BOOL) hasOrderId {
  return result.hasOrderId;
}
- (int64_t) orderId {
  return result.orderId;
}
- (CheckScanCodeRes_Builder*) setOrderId:(int64_t) value {
  result.hasOrderId = YES;
  result.orderId = value;
  return self;
}
- (CheckScanCodeRes_Builder*) clearOrderId {
  result.hasOrderId = NO;
  result.orderId = 0L;
  return self;
}
- (BOOL) hasStatus {
  return result.hasStatus;
}
- (int32_t) status {
  return result.status;
}
- (CheckScanCodeRes_Builder*) setStatus:(int32_t) value {
  result.hasStatus = YES;
  result.status = value;
  return self;
}
- (CheckScanCodeRes_Builder*) clearStatus {
  result.hasStatus = NO;
  result.status = 0;
  return self;
}
@end

@interface CancelOrderReq ()
@property (retain) NSString* sid;
@property int32_t loginId;
@property int64_t orderId;
@end

@implementation CancelOrderReq

- (BOOL) hasSid {
  return !!hasSid_;
}
- (void) setHasSid:(BOOL) value {
  hasSid_ = !!value;
}
@synthesize sid;
- (BOOL) hasLoginId {
  return !!hasLoginId_;
}
- (void) setHasLoginId:(BOOL) value {
  hasLoginId_ = !!value;
}
@synthesize loginId;
- (BOOL) hasOrderId {
  return !!hasOrderId_;
}
- (void) setHasOrderId:(BOOL) value {
  hasOrderId_ = !!value;
}
@synthesize orderId;
- (void) dealloc {
  self.sid = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.sid = @"";
    self.loginId = 0;
    self.orderId = 0L;
  }
  return self;
}
static CancelOrderReq* defaultCancelOrderReqInstance = nil;
+ (void) initialize {
  if (self == [CancelOrderReq class]) {
    defaultCancelOrderReqInstance = [[CancelOrderReq alloc] init];
  }
}
+ (CancelOrderReq*) defaultInstance {
  return defaultCancelOrderReqInstance;
}
- (CancelOrderReq*) defaultInstance {
  return defaultCancelOrderReqInstance;
}
- (BOOL) isInitialized {
  if (!self.hasSid) {
    return NO;
  }
  if (!self.hasLoginId) {
    return NO;
  }
  if (!self.hasOrderId) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasSid) {
    [output writeString:1 value:self.sid];
  }
  if (self.hasLoginId) {
    [output writeInt32:2 value:self.loginId];
  }
  if (self.hasOrderId) {
    [output writeInt64:3 value:self.orderId];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasSid) {
    size += computeStringSize(1, self.sid);
  }
  if (self.hasLoginId) {
    size += computeInt32Size(2, self.loginId);
  }
  if (self.hasOrderId) {
    size += computeInt64Size(3, self.orderId);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (CancelOrderReq*) parseFromData:(NSData*) data {
  return (CancelOrderReq*)[[[CancelOrderReq builder] mergeFromData:data] build];
}
+ (CancelOrderReq*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CancelOrderReq*)[[[CancelOrderReq builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (CancelOrderReq*) parseFromInputStream:(NSInputStream*) input {
  return (CancelOrderReq*)[[[CancelOrderReq builder] mergeFromInputStream:input] build];
}
+ (CancelOrderReq*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CancelOrderReq*)[[[CancelOrderReq builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CancelOrderReq*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (CancelOrderReq*)[[[CancelOrderReq builder] mergeFromCodedInputStream:input] build];
}
+ (CancelOrderReq*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CancelOrderReq*)[[[CancelOrderReq builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CancelOrderReq_Builder*) builder {
  return [[[CancelOrderReq_Builder alloc] init] autorelease];
}
+ (CancelOrderReq_Builder*) builderWithPrototype:(CancelOrderReq*) prototype {
  return [[CancelOrderReq builder] mergeFrom:prototype];
}
- (CancelOrderReq_Builder*) builder {
  return [CancelOrderReq builder];
}
@end

@interface CancelOrderReq_Builder()
@property (retain) CancelOrderReq* result;
@end

@implementation CancelOrderReq_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[CancelOrderReq alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (CancelOrderReq_Builder*) clear {
  self.result = [[[CancelOrderReq alloc] init] autorelease];
  return self;
}
- (CancelOrderReq_Builder*) clone {
  return [CancelOrderReq builderWithPrototype:result];
}
- (CancelOrderReq*) defaultInstance {
  return [CancelOrderReq defaultInstance];
}
- (CancelOrderReq*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (CancelOrderReq*) buildPartial {
  CancelOrderReq* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (CancelOrderReq_Builder*) mergeFrom:(CancelOrderReq*) other {
  if (other == [CancelOrderReq defaultInstance]) {
    return self;
  }
  if (other.hasSid) {
    [self setSid:other.sid];
  }
  if (other.hasLoginId) {
    [self setLoginId:other.loginId];
  }
  if (other.hasOrderId) {
    [self setOrderId:other.orderId];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (CancelOrderReq_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (CancelOrderReq_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setSid:[input readString]];
        break;
      }
      case 16: {
        [self setLoginId:[input readInt32]];
        break;
      }
      case 24: {
        [self setOrderId:[input readInt64]];
        break;
      }
    }
  }
}
- (BOOL) hasSid {
  return result.hasSid;
}
- (NSString*) sid {
  return result.sid;
}
- (CancelOrderReq_Builder*) setSid:(NSString*) value {
  result.hasSid = YES;
  result.sid = value;
  return self;
}
- (CancelOrderReq_Builder*) clearSid {
  result.hasSid = NO;
  result.sid = @"";
  return self;
}
- (BOOL) hasLoginId {
  return result.hasLoginId;
}
- (int32_t) loginId {
  return result.loginId;
}
- (CancelOrderReq_Builder*) setLoginId:(int32_t) value {
  result.hasLoginId = YES;
  result.loginId = value;
  return self;
}
- (CancelOrderReq_Builder*) clearLoginId {
  result.hasLoginId = NO;
  result.loginId = 0;
  return self;
}
- (BOOL) hasOrderId {
  return result.hasOrderId;
}
- (int64_t) orderId {
  return result.orderId;
}
- (CancelOrderReq_Builder*) setOrderId:(int64_t) value {
  result.hasOrderId = YES;
  result.orderId = value;
  return self;
}
- (CancelOrderReq_Builder*) clearOrderId {
  result.hasOrderId = NO;
  result.orderId = 0L;
  return self;
}
@end

@interface CancelOrderRes ()
@property int32_t retCode;
@property (retain) NSString* sid;
@property int32_t logindId;
@property int32_t payType;
@property (retain) NSString* params;
@end

@implementation CancelOrderRes

- (BOOL) hasRetCode {
  return !!hasRetCode_;
}
- (void) setHasRetCode:(BOOL) value {
  hasRetCode_ = !!value;
}
@synthesize retCode;
- (BOOL) hasSid {
  return !!hasSid_;
}
- (void) setHasSid:(BOOL) value {
  hasSid_ = !!value;
}
@synthesize sid;
- (BOOL) hasLogindId {
  return !!hasLogindId_;
}
- (void) setHasLogindId:(BOOL) value {
  hasLogindId_ = !!value;
}
@synthesize logindId;
- (BOOL) hasPayType {
  return !!hasPayType_;
}
- (void) setHasPayType:(BOOL) value {
  hasPayType_ = !!value;
}
@synthesize payType;
- (BOOL) hasParams {
  return !!hasParams_;
}
- (void) setHasParams:(BOOL) value {
  hasParams_ = !!value;
}
@synthesize params;
- (void) dealloc {
  self.sid = nil;
  self.params = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.retCode = 0;
    self.sid = @"";
    self.logindId = 0;
    self.payType = 0;
    self.params = @"";
  }
  return self;
}
static CancelOrderRes* defaultCancelOrderResInstance = nil;
+ (void) initialize {
  if (self == [CancelOrderRes class]) {
    defaultCancelOrderResInstance = [[CancelOrderRes alloc] init];
  }
}
+ (CancelOrderRes*) defaultInstance {
  return defaultCancelOrderResInstance;
}
- (CancelOrderRes*) defaultInstance {
  return defaultCancelOrderResInstance;
}
- (BOOL) isInitialized {
  if (!self.hasRetCode) {
    return NO;
  }
  if (!self.hasSid) {
    return NO;
  }
  if (!self.hasLogindId) {
    return NO;
  }
  if (!self.hasPayType) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasRetCode) {
    [output writeInt32:1 value:self.retCode];
  }
  if (self.hasSid) {
    [output writeString:2 value:self.sid];
  }
  if (self.hasLogindId) {
    [output writeInt32:3 value:self.logindId];
  }
  if (self.hasPayType) {
    [output writeInt32:4 value:self.payType];
  }
  if (self.hasParams) {
    [output writeString:5 value:self.params];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasRetCode) {
    size += computeInt32Size(1, self.retCode);
  }
  if (self.hasSid) {
    size += computeStringSize(2, self.sid);
  }
  if (self.hasLogindId) {
    size += computeInt32Size(3, self.logindId);
  }
  if (self.hasPayType) {
    size += computeInt32Size(4, self.payType);
  }
  if (self.hasParams) {
    size += computeStringSize(5, self.params);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (CancelOrderRes*) parseFromData:(NSData*) data {
  return (CancelOrderRes*)[[[CancelOrderRes builder] mergeFromData:data] build];
}
+ (CancelOrderRes*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CancelOrderRes*)[[[CancelOrderRes builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (CancelOrderRes*) parseFromInputStream:(NSInputStream*) input {
  return (CancelOrderRes*)[[[CancelOrderRes builder] mergeFromInputStream:input] build];
}
+ (CancelOrderRes*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CancelOrderRes*)[[[CancelOrderRes builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CancelOrderRes*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (CancelOrderRes*)[[[CancelOrderRes builder] mergeFromCodedInputStream:input] build];
}
+ (CancelOrderRes*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CancelOrderRes*)[[[CancelOrderRes builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CancelOrderRes_Builder*) builder {
  return [[[CancelOrderRes_Builder alloc] init] autorelease];
}
+ (CancelOrderRes_Builder*) builderWithPrototype:(CancelOrderRes*) prototype {
  return [[CancelOrderRes builder] mergeFrom:prototype];
}
- (CancelOrderRes_Builder*) builder {
  return [CancelOrderRes builder];
}
@end

@interface CancelOrderRes_Builder()
@property (retain) CancelOrderRes* result;
@end

@implementation CancelOrderRes_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[CancelOrderRes alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (CancelOrderRes_Builder*) clear {
  self.result = [[[CancelOrderRes alloc] init] autorelease];
  return self;
}
- (CancelOrderRes_Builder*) clone {
  return [CancelOrderRes builderWithPrototype:result];
}
- (CancelOrderRes*) defaultInstance {
  return [CancelOrderRes defaultInstance];
}
- (CancelOrderRes*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (CancelOrderRes*) buildPartial {
  CancelOrderRes* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (CancelOrderRes_Builder*) mergeFrom:(CancelOrderRes*) other {
  if (other == [CancelOrderRes defaultInstance]) {
    return self;
  }
  if (other.hasRetCode) {
    [self setRetCode:other.retCode];
  }
  if (other.hasSid) {
    [self setSid:other.sid];
  }
  if (other.hasLogindId) {
    [self setLogindId:other.logindId];
  }
  if (other.hasPayType) {
    [self setPayType:other.payType];
  }
  if (other.hasParams) {
    [self setParams:other.params];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (CancelOrderRes_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (CancelOrderRes_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setRetCode:[input readInt32]];
        break;
      }
      case 18: {
        [self setSid:[input readString]];
        break;
      }
      case 24: {
        [self setLogindId:[input readInt32]];
        break;
      }
      case 32: {
        [self setPayType:[input readInt32]];
        break;
      }
      case 42: {
        [self setParams:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasRetCode {
  return result.hasRetCode;
}
- (int32_t) retCode {
  return result.retCode;
}
- (CancelOrderRes_Builder*) setRetCode:(int32_t) value {
  result.hasRetCode = YES;
  result.retCode = value;
  return self;
}
- (CancelOrderRes_Builder*) clearRetCode {
  result.hasRetCode = NO;
  result.retCode = 0;
  return self;
}
- (BOOL) hasSid {
  return result.hasSid;
}
- (NSString*) sid {
  return result.sid;
}
- (CancelOrderRes_Builder*) setSid:(NSString*) value {
  result.hasSid = YES;
  result.sid = value;
  return self;
}
- (CancelOrderRes_Builder*) clearSid {
  result.hasSid = NO;
  result.sid = @"";
  return self;
}
- (BOOL) hasLogindId {
  return result.hasLogindId;
}
- (int32_t) logindId {
  return result.logindId;
}
- (CancelOrderRes_Builder*) setLogindId:(int32_t) value {
  result.hasLogindId = YES;
  result.logindId = value;
  return self;
}
- (CancelOrderRes_Builder*) clearLogindId {
  result.hasLogindId = NO;
  result.logindId = 0;
  return self;
}
- (BOOL) hasPayType {
  return result.hasPayType;
}
- (int32_t) payType {
  return result.payType;
}
- (CancelOrderRes_Builder*) setPayType:(int32_t) value {
  result.hasPayType = YES;
  result.payType = value;
  return self;
}
- (CancelOrderRes_Builder*) clearPayType {
  result.hasPayType = NO;
  result.payType = 0;
  return self;
}
- (BOOL) hasParams {
  return result.hasParams;
}
- (NSString*) params {
  return result.params;
}
- (CancelOrderRes_Builder*) setParams:(NSString*) value {
  result.hasParams = YES;
  result.params = value;
  return self;
}
- (CancelOrderRes_Builder*) clearParams {
  result.hasParams = NO;
  result.params = @"";
  return self;
}
@end

@interface LogInReq ()
@property (retain) NSString* sid;
@property (retain) NSString* loginAccount;
@property (retain) NSString* loginPwd;
@property int32_t userType;
@end

@implementation LogInReq

- (BOOL) hasSid {
  return !!hasSid_;
}
- (void) setHasSid:(BOOL) value {
  hasSid_ = !!value;
}
@synthesize sid;
- (BOOL) hasLoginAccount {
  return !!hasLoginAccount_;
}
- (void) setHasLoginAccount:(BOOL) value {
  hasLoginAccount_ = !!value;
}
@synthesize loginAccount;
- (BOOL) hasLoginPwd {
  return !!hasLoginPwd_;
}
- (void) setHasLoginPwd:(BOOL) value {
  hasLoginPwd_ = !!value;
}
@synthesize loginPwd;
- (BOOL) hasUserType {
  return !!hasUserType_;
}
- (void) setHasUserType:(BOOL) value {
  hasUserType_ = !!value;
}
@synthesize userType;
- (void) dealloc {
  self.sid = nil;
  self.loginAccount = nil;
  self.loginPwd = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.sid = @"";
    self.loginAccount = @"";
    self.loginPwd = @"";
    self.userType = 0;
  }
  return self;
}
static LogInReq* defaultLogInReqInstance = nil;
+ (void) initialize {
  if (self == [LogInReq class]) {
    defaultLogInReqInstance = [[LogInReq alloc] init];
  }
}
+ (LogInReq*) defaultInstance {
  return defaultLogInReqInstance;
}
- (LogInReq*) defaultInstance {
  return defaultLogInReqInstance;
}
- (BOOL) isInitialized {
  if (!self.hasSid) {
    return NO;
  }
  if (!self.hasLoginAccount) {
    return NO;
  }
  if (!self.hasLoginPwd) {
    return NO;
  }
  if (!self.hasUserType) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasSid) {
    [output writeString:1 value:self.sid];
  }
  if (self.hasLoginAccount) {
    [output writeString:2 value:self.loginAccount];
  }
  if (self.hasLoginPwd) {
    [output writeString:3 value:self.loginPwd];
  }
  if (self.hasUserType) {
    [output writeInt32:4 value:self.userType];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasSid) {
    size += computeStringSize(1, self.sid);
  }
  if (self.hasLoginAccount) {
    size += computeStringSize(2, self.loginAccount);
  }
  if (self.hasLoginPwd) {
    size += computeStringSize(3, self.loginPwd);
  }
  if (self.hasUserType) {
    size += computeInt32Size(4, self.userType);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (LogInReq*) parseFromData:(NSData*) data {
  return (LogInReq*)[[[LogInReq builder] mergeFromData:data] build];
}
+ (LogInReq*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (LogInReq*)[[[LogInReq builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (LogInReq*) parseFromInputStream:(NSInputStream*) input {
  return (LogInReq*)[[[LogInReq builder] mergeFromInputStream:input] build];
}
+ (LogInReq*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (LogInReq*)[[[LogInReq builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (LogInReq*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (LogInReq*)[[[LogInReq builder] mergeFromCodedInputStream:input] build];
}
+ (LogInReq*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (LogInReq*)[[[LogInReq builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (LogInReq_Builder*) builder {
  return [[[LogInReq_Builder alloc] init] autorelease];
}
+ (LogInReq_Builder*) builderWithPrototype:(LogInReq*) prototype {
  return [[LogInReq builder] mergeFrom:prototype];
}
- (LogInReq_Builder*) builder {
  return [LogInReq builder];
}
@end

@interface LogInReq_Builder()
@property (retain) LogInReq* result;
@end

@implementation LogInReq_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[LogInReq alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (LogInReq_Builder*) clear {
  self.result = [[[LogInReq alloc] init] autorelease];
  return self;
}
- (LogInReq_Builder*) clone {
  return [LogInReq builderWithPrototype:result];
}
- (LogInReq*) defaultInstance {
  return [LogInReq defaultInstance];
}
- (LogInReq*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (LogInReq*) buildPartial {
  LogInReq* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (LogInReq_Builder*) mergeFrom:(LogInReq*) other {
  if (other == [LogInReq defaultInstance]) {
    return self;
  }
  if (other.hasSid) {
    [self setSid:other.sid];
  }
  if (other.hasLoginAccount) {
    [self setLoginAccount:other.loginAccount];
  }
  if (other.hasLoginPwd) {
    [self setLoginPwd:other.loginPwd];
  }
  if (other.hasUserType) {
    [self setUserType:other.userType];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (LogInReq_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (LogInReq_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setSid:[input readString]];
        break;
      }
      case 18: {
        [self setLoginAccount:[input readString]];
        break;
      }
      case 26: {
        [self setLoginPwd:[input readString]];
        break;
      }
      case 32: {
        [self setUserType:[input readInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasSid {
  return result.hasSid;
}
- (NSString*) sid {
  return result.sid;
}
- (LogInReq_Builder*) setSid:(NSString*) value {
  result.hasSid = YES;
  result.sid = value;
  return self;
}
- (LogInReq_Builder*) clearSid {
  result.hasSid = NO;
  result.sid = @"";
  return self;
}
- (BOOL) hasLoginAccount {
  return result.hasLoginAccount;
}
- (NSString*) loginAccount {
  return result.loginAccount;
}
- (LogInReq_Builder*) setLoginAccount:(NSString*) value {
  result.hasLoginAccount = YES;
  result.loginAccount = value;
  return self;
}
- (LogInReq_Builder*) clearLoginAccount {
  result.hasLoginAccount = NO;
  result.loginAccount = @"";
  return self;
}
- (BOOL) hasLoginPwd {
  return result.hasLoginPwd;
}
- (NSString*) loginPwd {
  return result.loginPwd;
}
- (LogInReq_Builder*) setLoginPwd:(NSString*) value {
  result.hasLoginPwd = YES;
  result.loginPwd = value;
  return self;
}
- (LogInReq_Builder*) clearLoginPwd {
  result.hasLoginPwd = NO;
  result.loginPwd = @"";
  return self;
}
- (BOOL) hasUserType {
  return result.hasUserType;
}
- (int32_t) userType {
  return result.userType;
}
- (LogInReq_Builder*) setUserType:(int32_t) value {
  result.hasUserType = YES;
  result.userType = value;
  return self;
}
- (LogInReq_Builder*) clearUserType {
  result.hasUserType = NO;
  result.userType = 0;
  return self;
}
@end

@interface LogInRes ()
@property int32_t retCode;
@property (retain) NSString* sid;
@property int32_t loginId;
@property int32_t userId;
@property (retain) NSString* userName;
@end

@implementation LogInRes

- (BOOL) hasRetCode {
  return !!hasRetCode_;
}
- (void) setHasRetCode:(BOOL) value {
  hasRetCode_ = !!value;
}
@synthesize retCode;
- (BOOL) hasSid {
  return !!hasSid_;
}
- (void) setHasSid:(BOOL) value {
  hasSid_ = !!value;
}
@synthesize sid;
- (BOOL) hasLoginId {
  return !!hasLoginId_;
}
- (void) setHasLoginId:(BOOL) value {
  hasLoginId_ = !!value;
}
@synthesize loginId;
- (BOOL) hasUserId {
  return !!hasUserId_;
}
- (void) setHasUserId:(BOOL) value {
  hasUserId_ = !!value;
}
@synthesize userId;
- (BOOL) hasUserName {
  return !!hasUserName_;
}
- (void) setHasUserName:(BOOL) value {
  hasUserName_ = !!value;
}
@synthesize userName;
- (void) dealloc {
  self.sid = nil;
  self.userName = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.retCode = 0;
    self.sid = @"";
    self.loginId = 0;
    self.userId = 0;
    self.userName = @"";
  }
  return self;
}
static LogInRes* defaultLogInResInstance = nil;
+ (void) initialize {
  if (self == [LogInRes class]) {
    defaultLogInResInstance = [[LogInRes alloc] init];
  }
}
+ (LogInRes*) defaultInstance {
  return defaultLogInResInstance;
}
- (LogInRes*) defaultInstance {
  return defaultLogInResInstance;
}
- (BOOL) isInitialized {
  if (!self.hasRetCode) {
    return NO;
  }
  if (!self.hasSid) {
    return NO;
  }
  if (!self.hasLoginId) {
    return NO;
  }
  if (!self.hasUserId) {
    return NO;
  }
  if (!self.hasUserName) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasRetCode) {
    [output writeInt32:1 value:self.retCode];
  }
  if (self.hasSid) {
    [output writeString:2 value:self.sid];
  }
  if (self.hasLoginId) {
    [output writeInt32:3 value:self.loginId];
  }
  if (self.hasUserId) {
    [output writeInt32:4 value:self.userId];
  }
  if (self.hasUserName) {
    [output writeString:5 value:self.userName];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasRetCode) {
    size += computeInt32Size(1, self.retCode);
  }
  if (self.hasSid) {
    size += computeStringSize(2, self.sid);
  }
  if (self.hasLoginId) {
    size += computeInt32Size(3, self.loginId);
  }
  if (self.hasUserId) {
    size += computeInt32Size(4, self.userId);
  }
  if (self.hasUserName) {
    size += computeStringSize(5, self.userName);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (LogInRes*) parseFromData:(NSData*) data {
  return (LogInRes*)[[[LogInRes builder] mergeFromData:data] build];
}
+ (LogInRes*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (LogInRes*)[[[LogInRes builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (LogInRes*) parseFromInputStream:(NSInputStream*) input {
  return (LogInRes*)[[[LogInRes builder] mergeFromInputStream:input] build];
}
+ (LogInRes*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (LogInRes*)[[[LogInRes builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (LogInRes*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (LogInRes*)[[[LogInRes builder] mergeFromCodedInputStream:input] build];
}
+ (LogInRes*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (LogInRes*)[[[LogInRes builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (LogInRes_Builder*) builder {
  return [[[LogInRes_Builder alloc] init] autorelease];
}
+ (LogInRes_Builder*) builderWithPrototype:(LogInRes*) prototype {
  return [[LogInRes builder] mergeFrom:prototype];
}
- (LogInRes_Builder*) builder {
  return [LogInRes builder];
}
@end

@interface LogInRes_Builder()
@property (retain) LogInRes* result;
@end

@implementation LogInRes_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[LogInRes alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (LogInRes_Builder*) clear {
  self.result = [[[LogInRes alloc] init] autorelease];
  return self;
}
- (LogInRes_Builder*) clone {
  return [LogInRes builderWithPrototype:result];
}
- (LogInRes*) defaultInstance {
  return [LogInRes defaultInstance];
}
- (LogInRes*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (LogInRes*) buildPartial {
  LogInRes* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (LogInRes_Builder*) mergeFrom:(LogInRes*) other {
  if (other == [LogInRes defaultInstance]) {
    return self;
  }
  if (other.hasRetCode) {
    [self setRetCode:other.retCode];
  }
  if (other.hasSid) {
    [self setSid:other.sid];
  }
  if (other.hasLoginId) {
    [self setLoginId:other.loginId];
  }
  if (other.hasUserId) {
    [self setUserId:other.userId];
  }
  if (other.hasUserName) {
    [self setUserName:other.userName];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (LogInRes_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (LogInRes_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setRetCode:[input readInt32]];
        break;
      }
      case 18: {
        [self setSid:[input readString]];
        break;
      }
      case 24: {
        [self setLoginId:[input readInt32]];
        break;
      }
      case 32: {
        [self setUserId:[input readInt32]];
        break;
      }
      case 42: {
        [self setUserName:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasRetCode {
  return result.hasRetCode;
}
- (int32_t) retCode {
  return result.retCode;
}
- (LogInRes_Builder*) setRetCode:(int32_t) value {
  result.hasRetCode = YES;
  result.retCode = value;
  return self;
}
- (LogInRes_Builder*) clearRetCode {
  result.hasRetCode = NO;
  result.retCode = 0;
  return self;
}
- (BOOL) hasSid {
  return result.hasSid;
}
- (NSString*) sid {
  return result.sid;
}
- (LogInRes_Builder*) setSid:(NSString*) value {
  result.hasSid = YES;
  result.sid = value;
  return self;
}
- (LogInRes_Builder*) clearSid {
  result.hasSid = NO;
  result.sid = @"";
  return self;
}
- (BOOL) hasLoginId {
  return result.hasLoginId;
}
- (int32_t) loginId {
  return result.loginId;
}
- (LogInRes_Builder*) setLoginId:(int32_t) value {
  result.hasLoginId = YES;
  result.loginId = value;
  return self;
}
- (LogInRes_Builder*) clearLoginId {
  result.hasLoginId = NO;
  result.loginId = 0;
  return self;
}
- (BOOL) hasUserId {
  return result.hasUserId;
}
- (int32_t) userId {
  return result.userId;
}
- (LogInRes_Builder*) setUserId:(int32_t) value {
  result.hasUserId = YES;
  result.userId = value;
  return self;
}
- (LogInRes_Builder*) clearUserId {
  result.hasUserId = NO;
  result.userId = 0;
  return self;
}
- (BOOL) hasUserName {
  return result.hasUserName;
}
- (NSString*) userName {
  return result.userName;
}
- (LogInRes_Builder*) setUserName:(NSString*) value {
  result.hasUserName = YES;
  result.userName = value;
  return self;
}
- (LogInRes_Builder*) clearUserName {
  result.hasUserName = NO;
  result.userName = @"";
  return self;
}
@end

@interface GridInfo ()
@property int32_t gridId;
@property int32_t status;
@end

@implementation GridInfo

- (BOOL) hasGridId {
  return !!hasGridId_;
}
- (void) setHasGridId:(BOOL) value {
  hasGridId_ = !!value;
}
@synthesize gridId;
- (BOOL) hasStatus {
  return !!hasStatus_;
}
- (void) setHasStatus:(BOOL) value {
  hasStatus_ = !!value;
}
@synthesize status;
- (void) dealloc {
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.gridId = 0;
    self.status = 0;
  }
  return self;
}
static GridInfo* defaultGridInfoInstance = nil;
+ (void) initialize {
  if (self == [GridInfo class]) {
    defaultGridInfoInstance = [[GridInfo alloc] init];
  }
}
+ (GridInfo*) defaultInstance {
  return defaultGridInfoInstance;
}
- (GridInfo*) defaultInstance {
  return defaultGridInfoInstance;
}
- (BOOL) isInitialized {
  if (!self.hasGridId) {
    return NO;
  }
  if (!self.hasStatus) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasGridId) {
    [output writeInt32:1 value:self.gridId];
  }
  if (self.hasStatus) {
    [output writeInt32:2 value:self.status];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasGridId) {
    size += computeInt32Size(1, self.gridId);
  }
  if (self.hasStatus) {
    size += computeInt32Size(2, self.status);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (GridInfo*) parseFromData:(NSData*) data {
  return (GridInfo*)[[[GridInfo builder] mergeFromData:data] build];
}
+ (GridInfo*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (GridInfo*)[[[GridInfo builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (GridInfo*) parseFromInputStream:(NSInputStream*) input {
  return (GridInfo*)[[[GridInfo builder] mergeFromInputStream:input] build];
}
+ (GridInfo*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (GridInfo*)[[[GridInfo builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (GridInfo*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (GridInfo*)[[[GridInfo builder] mergeFromCodedInputStream:input] build];
}
+ (GridInfo*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (GridInfo*)[[[GridInfo builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (GridInfo_Builder*) builder {
  return [[[GridInfo_Builder alloc] init] autorelease];
}
+ (GridInfo_Builder*) builderWithPrototype:(GridInfo*) prototype {
  return [[GridInfo builder] mergeFrom:prototype];
}
- (GridInfo_Builder*) builder {
  return [GridInfo builder];
}
@end

@interface GridInfo_Builder()
@property (retain) GridInfo* result;
@end

@implementation GridInfo_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[GridInfo alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (GridInfo_Builder*) clear {
  self.result = [[[GridInfo alloc] init] autorelease];
  return self;
}
- (GridInfo_Builder*) clone {
  return [GridInfo builderWithPrototype:result];
}
- (GridInfo*) defaultInstance {
  return [GridInfo defaultInstance];
}
- (GridInfo*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (GridInfo*) buildPartial {
  GridInfo* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (GridInfo_Builder*) mergeFrom:(GridInfo*) other {
  if (other == [GridInfo defaultInstance]) {
    return self;
  }
  if (other.hasGridId) {
    [self setGridId:other.gridId];
  }
  if (other.hasStatus) {
    [self setStatus:other.status];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (GridInfo_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (GridInfo_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setGridId:[input readInt32]];
        break;
      }
      case 16: {
        [self setStatus:[input readInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasGridId {
  return result.hasGridId;
}
- (int32_t) gridId {
  return result.gridId;
}
- (GridInfo_Builder*) setGridId:(int32_t) value {
  result.hasGridId = YES;
  result.gridId = value;
  return self;
}
- (GridInfo_Builder*) clearGridId {
  result.hasGridId = NO;
  result.gridId = 0;
  return self;
}
- (BOOL) hasStatus {
  return result.hasStatus;
}
- (int32_t) status {
  return result.status;
}
- (GridInfo_Builder*) setStatus:(int32_t) value {
  result.hasStatus = YES;
  result.status = value;
  return self;
}
- (GridInfo_Builder*) clearStatus {
  result.hasStatus = NO;
  result.status = 0;
  return self;
}
@end

@interface CabinetAttrQueryReq ()
@property (retain) NSString* sid;
@property int32_t loginId;
@end

@implementation CabinetAttrQueryReq

- (BOOL) hasSid {
  return !!hasSid_;
}
- (void) setHasSid:(BOOL) value {
  hasSid_ = !!value;
}
@synthesize sid;
- (BOOL) hasLoginId {
  return !!hasLoginId_;
}
- (void) setHasLoginId:(BOOL) value {
  hasLoginId_ = !!value;
}
@synthesize loginId;
- (void) dealloc {
  self.sid = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.sid = @"";
    self.loginId = 0;
  }
  return self;
}
static CabinetAttrQueryReq* defaultCabinetAttrQueryReqInstance = nil;
+ (void) initialize {
  if (self == [CabinetAttrQueryReq class]) {
    defaultCabinetAttrQueryReqInstance = [[CabinetAttrQueryReq alloc] init];
  }
}
+ (CabinetAttrQueryReq*) defaultInstance {
  return defaultCabinetAttrQueryReqInstance;
}
- (CabinetAttrQueryReq*) defaultInstance {
  return defaultCabinetAttrQueryReqInstance;
}
- (BOOL) isInitialized {
  if (!self.hasSid) {
    return NO;
  }
  if (!self.hasLoginId) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasSid) {
    [output writeString:1 value:self.sid];
  }
  if (self.hasLoginId) {
    [output writeInt32:2 value:self.loginId];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasSid) {
    size += computeStringSize(1, self.sid);
  }
  if (self.hasLoginId) {
    size += computeInt32Size(2, self.loginId);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (CabinetAttrQueryReq*) parseFromData:(NSData*) data {
  return (CabinetAttrQueryReq*)[[[CabinetAttrQueryReq builder] mergeFromData:data] build];
}
+ (CabinetAttrQueryReq*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CabinetAttrQueryReq*)[[[CabinetAttrQueryReq builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (CabinetAttrQueryReq*) parseFromInputStream:(NSInputStream*) input {
  return (CabinetAttrQueryReq*)[[[CabinetAttrQueryReq builder] mergeFromInputStream:input] build];
}
+ (CabinetAttrQueryReq*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CabinetAttrQueryReq*)[[[CabinetAttrQueryReq builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CabinetAttrQueryReq*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (CabinetAttrQueryReq*)[[[CabinetAttrQueryReq builder] mergeFromCodedInputStream:input] build];
}
+ (CabinetAttrQueryReq*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CabinetAttrQueryReq*)[[[CabinetAttrQueryReq builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CabinetAttrQueryReq_Builder*) builder {
  return [[[CabinetAttrQueryReq_Builder alloc] init] autorelease];
}
+ (CabinetAttrQueryReq_Builder*) builderWithPrototype:(CabinetAttrQueryReq*) prototype {
  return [[CabinetAttrQueryReq builder] mergeFrom:prototype];
}
- (CabinetAttrQueryReq_Builder*) builder {
  return [CabinetAttrQueryReq builder];
}
@end

@interface CabinetAttrQueryReq_Builder()
@property (retain) CabinetAttrQueryReq* result;
@end

@implementation CabinetAttrQueryReq_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[CabinetAttrQueryReq alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (CabinetAttrQueryReq_Builder*) clear {
  self.result = [[[CabinetAttrQueryReq alloc] init] autorelease];
  return self;
}
- (CabinetAttrQueryReq_Builder*) clone {
  return [CabinetAttrQueryReq builderWithPrototype:result];
}
- (CabinetAttrQueryReq*) defaultInstance {
  return [CabinetAttrQueryReq defaultInstance];
}
- (CabinetAttrQueryReq*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (CabinetAttrQueryReq*) buildPartial {
  CabinetAttrQueryReq* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (CabinetAttrQueryReq_Builder*) mergeFrom:(CabinetAttrQueryReq*) other {
  if (other == [CabinetAttrQueryReq defaultInstance]) {
    return self;
  }
  if (other.hasSid) {
    [self setSid:other.sid];
  }
  if (other.hasLoginId) {
    [self setLoginId:other.loginId];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (CabinetAttrQueryReq_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (CabinetAttrQueryReq_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setSid:[input readString]];
        break;
      }
      case 16: {
        [self setLoginId:[input readInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasSid {
  return result.hasSid;
}
- (NSString*) sid {
  return result.sid;
}
- (CabinetAttrQueryReq_Builder*) setSid:(NSString*) value {
  result.hasSid = YES;
  result.sid = value;
  return self;
}
- (CabinetAttrQueryReq_Builder*) clearSid {
  result.hasSid = NO;
  result.sid = @"";
  return self;
}
- (BOOL) hasLoginId {
  return result.hasLoginId;
}
- (int32_t) loginId {
  return result.loginId;
}
- (CabinetAttrQueryReq_Builder*) setLoginId:(int32_t) value {
  result.hasLoginId = YES;
  result.loginId = value;
  return self;
}
- (CabinetAttrQueryReq_Builder*) clearLoginId {
  result.hasLoginId = NO;
  result.loginId = 0;
  return self;
}
@end

@interface CabinetAttrQueryRes ()
@property int32_t retCode;
@property (retain) NSString* sid;
@property int32_t loginId;
@property (retain) NSMutableArray* mutableGroupGridList;
@end

@implementation CabinetAttrQueryRes

- (BOOL) hasRetCode {
  return !!hasRetCode_;
}
- (void) setHasRetCode:(BOOL) value {
  hasRetCode_ = !!value;
}
@synthesize retCode;
- (BOOL) hasSid {
  return !!hasSid_;
}
- (void) setHasSid:(BOOL) value {
  hasSid_ = !!value;
}
@synthesize sid;
- (BOOL) hasLoginId {
  return !!hasLoginId_;
}
- (void) setHasLoginId:(BOOL) value {
  hasLoginId_ = !!value;
}
@synthesize loginId;
@synthesize mutableGroupGridList;
- (void) dealloc {
  self.sid = nil;
  self.mutableGroupGridList = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.retCode = 0;
    self.sid = @"";
    self.loginId = 0;
  }
  return self;
}
static CabinetAttrQueryRes* defaultCabinetAttrQueryResInstance = nil;
+ (void) initialize {
  if (self == [CabinetAttrQueryRes class]) {
    defaultCabinetAttrQueryResInstance = [[CabinetAttrQueryRes alloc] init];
  }
}
+ (CabinetAttrQueryRes*) defaultInstance {
  return defaultCabinetAttrQueryResInstance;
}
- (CabinetAttrQueryRes*) defaultInstance {
  return defaultCabinetAttrQueryResInstance;
}
- (NSArray*) groupGridList {
  return mutableGroupGridList;
}
- (GridInfo*) groupGridAtIndex:(int32_t) index {
  id value = [mutableGroupGridList objectAtIndex:index];
  return value;
}
- (BOOL) isInitialized {
  if (!self.hasRetCode) {
    return NO;
  }
  if (!self.hasSid) {
    return NO;
  }
  if (!self.hasLoginId) {
    return NO;
  }
  for (GridInfo* element in self.groupGridList) {
    if (!element.isInitialized) {
      return NO;
    }
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasRetCode) {
    [output writeInt32:1 value:self.retCode];
  }
  if (self.hasSid) {
    [output writeString:2 value:self.sid];
  }
  if (self.hasLoginId) {
    [output writeInt32:3 value:self.loginId];
  }
  for (GridInfo* element in self.groupGridList) {
    [output writeMessage:4 value:element];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasRetCode) {
    size += computeInt32Size(1, self.retCode);
  }
  if (self.hasSid) {
    size += computeStringSize(2, self.sid);
  }
  if (self.hasLoginId) {
    size += computeInt32Size(3, self.loginId);
  }
  for (GridInfo* element in self.groupGridList) {
    size += computeMessageSize(4, element);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (CabinetAttrQueryRes*) parseFromData:(NSData*) data {
  return (CabinetAttrQueryRes*)[[[CabinetAttrQueryRes builder] mergeFromData:data] build];
}
+ (CabinetAttrQueryRes*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CabinetAttrQueryRes*)[[[CabinetAttrQueryRes builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (CabinetAttrQueryRes*) parseFromInputStream:(NSInputStream*) input {
  return (CabinetAttrQueryRes*)[[[CabinetAttrQueryRes builder] mergeFromInputStream:input] build];
}
+ (CabinetAttrQueryRes*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CabinetAttrQueryRes*)[[[CabinetAttrQueryRes builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CabinetAttrQueryRes*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (CabinetAttrQueryRes*)[[[CabinetAttrQueryRes builder] mergeFromCodedInputStream:input] build];
}
+ (CabinetAttrQueryRes*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CabinetAttrQueryRes*)[[[CabinetAttrQueryRes builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CabinetAttrQueryRes_Builder*) builder {
  return [[[CabinetAttrQueryRes_Builder alloc] init] autorelease];
}
+ (CabinetAttrQueryRes_Builder*) builderWithPrototype:(CabinetAttrQueryRes*) prototype {
  return [[CabinetAttrQueryRes builder] mergeFrom:prototype];
}
- (CabinetAttrQueryRes_Builder*) builder {
  return [CabinetAttrQueryRes builder];
}
@end

@interface CabinetAttrQueryRes_Builder()
@property (retain) CabinetAttrQueryRes* result;
@end

@implementation CabinetAttrQueryRes_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[CabinetAttrQueryRes alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (CabinetAttrQueryRes_Builder*) clear {
  self.result = [[[CabinetAttrQueryRes alloc] init] autorelease];
  return self;
}
- (CabinetAttrQueryRes_Builder*) clone {
  return [CabinetAttrQueryRes builderWithPrototype:result];
}
- (CabinetAttrQueryRes*) defaultInstance {
  return [CabinetAttrQueryRes defaultInstance];
}
- (CabinetAttrQueryRes*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (CabinetAttrQueryRes*) buildPartial {
  CabinetAttrQueryRes* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (CabinetAttrQueryRes_Builder*) mergeFrom:(CabinetAttrQueryRes*) other {
  if (other == [CabinetAttrQueryRes defaultInstance]) {
    return self;
  }
  if (other.hasRetCode) {
    [self setRetCode:other.retCode];
  }
  if (other.hasSid) {
    [self setSid:other.sid];
  }
  if (other.hasLoginId) {
    [self setLoginId:other.loginId];
  }
  if (other.mutableGroupGridList.count > 0) {
    if (result.mutableGroupGridList == nil) {
      result.mutableGroupGridList = [NSMutableArray array];
    }
    [result.mutableGroupGridList addObjectsFromArray:other.mutableGroupGridList];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (CabinetAttrQueryRes_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (CabinetAttrQueryRes_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setRetCode:[input readInt32]];
        break;
      }
      case 18: {
        [self setSid:[input readString]];
        break;
      }
      case 24: {
        [self setLoginId:[input readInt32]];
        break;
      }
      case 34: {
        GridInfo_Builder* subBuilder = [GridInfo builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addGroupGrid:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL) hasRetCode {
  return result.hasRetCode;
}
- (int32_t) retCode {
  return result.retCode;
}
- (CabinetAttrQueryRes_Builder*) setRetCode:(int32_t) value {
  result.hasRetCode = YES;
  result.retCode = value;
  return self;
}
- (CabinetAttrQueryRes_Builder*) clearRetCode {
  result.hasRetCode = NO;
  result.retCode = 0;
  return self;
}
- (BOOL) hasSid {
  return result.hasSid;
}
- (NSString*) sid {
  return result.sid;
}
- (CabinetAttrQueryRes_Builder*) setSid:(NSString*) value {
  result.hasSid = YES;
  result.sid = value;
  return self;
}
- (CabinetAttrQueryRes_Builder*) clearSid {
  result.hasSid = NO;
  result.sid = @"";
  return self;
}
- (BOOL) hasLoginId {
  return result.hasLoginId;
}
- (int32_t) loginId {
  return result.loginId;
}
- (CabinetAttrQueryRes_Builder*) setLoginId:(int32_t) value {
  result.hasLoginId = YES;
  result.loginId = value;
  return self;
}
- (CabinetAttrQueryRes_Builder*) clearLoginId {
  result.hasLoginId = NO;
  result.loginId = 0;
  return self;
}
- (NSArray*) groupGridList {
  if (result.mutableGroupGridList == nil) { return [NSArray array]; }
  return result.mutableGroupGridList;
}
- (GridInfo*) groupGridAtIndex:(int32_t) index {
  return [result groupGridAtIndex:index];
}
- (CabinetAttrQueryRes_Builder*) replaceGroupGridAtIndex:(int32_t) index with:(GridInfo*) value {
  [result.mutableGroupGridList replaceObjectAtIndex:index withObject:value];
  return self;
}
- (CabinetAttrQueryRes_Builder*) addAllGroupGrid:(NSArray*) values {
  if (result.mutableGroupGridList == nil) {
    result.mutableGroupGridList = [NSMutableArray array];
  }
  [result.mutableGroupGridList addObjectsFromArray:values];
  return self;
}
- (CabinetAttrQueryRes_Builder*) clearGroupGridList {
  result.mutableGroupGridList = nil;
  return self;
}
- (CabinetAttrQueryRes_Builder*) addGroupGrid:(GridInfo*) value {
  if (result.mutableGroupGridList == nil) {
    result.mutableGroupGridList = [NSMutableArray array];
  }
  [result.mutableGroupGridList addObject:value];
  return self;
}
@end

@interface GridStatusUpdReq ()
@property (retain) NSString* sid;
@property int32_t loginId;
@property int32_t gridId;
@property int32_t status;
@end

@implementation GridStatusUpdReq

- (BOOL) hasSid {
  return !!hasSid_;
}
- (void) setHasSid:(BOOL) value {
  hasSid_ = !!value;
}
@synthesize sid;
- (BOOL) hasLoginId {
  return !!hasLoginId_;
}
- (void) setHasLoginId:(BOOL) value {
  hasLoginId_ = !!value;
}
@synthesize loginId;
- (BOOL) hasGridId {
  return !!hasGridId_;
}
- (void) setHasGridId:(BOOL) value {
  hasGridId_ = !!value;
}
@synthesize gridId;
- (BOOL) hasStatus {
  return !!hasStatus_;
}
- (void) setHasStatus:(BOOL) value {
  hasStatus_ = !!value;
}
@synthesize status;
- (void) dealloc {
  self.sid = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.sid = @"";
    self.loginId = 0;
    self.gridId = 0;
    self.status = 0;
  }
  return self;
}
static GridStatusUpdReq* defaultGridStatusUpdReqInstance = nil;
+ (void) initialize {
  if (self == [GridStatusUpdReq class]) {
    defaultGridStatusUpdReqInstance = [[GridStatusUpdReq alloc] init];
  }
}
+ (GridStatusUpdReq*) defaultInstance {
  return defaultGridStatusUpdReqInstance;
}
- (GridStatusUpdReq*) defaultInstance {
  return defaultGridStatusUpdReqInstance;
}
- (BOOL) isInitialized {
  if (!self.hasSid) {
    return NO;
  }
  if (!self.hasLoginId) {
    return NO;
  }
  if (!self.hasGridId) {
    return NO;
  }
  if (!self.hasStatus) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasSid) {
    [output writeString:1 value:self.sid];
  }
  if (self.hasLoginId) {
    [output writeInt32:2 value:self.loginId];
  }
  if (self.hasGridId) {
    [output writeInt32:3 value:self.gridId];
  }
  if (self.hasStatus) {
    [output writeInt32:4 value:self.status];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasSid) {
    size += computeStringSize(1, self.sid);
  }
  if (self.hasLoginId) {
    size += computeInt32Size(2, self.loginId);
  }
  if (self.hasGridId) {
    size += computeInt32Size(3, self.gridId);
  }
  if (self.hasStatus) {
    size += computeInt32Size(4, self.status);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (GridStatusUpdReq*) parseFromData:(NSData*) data {
  return (GridStatusUpdReq*)[[[GridStatusUpdReq builder] mergeFromData:data] build];
}
+ (GridStatusUpdReq*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (GridStatusUpdReq*)[[[GridStatusUpdReq builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (GridStatusUpdReq*) parseFromInputStream:(NSInputStream*) input {
  return (GridStatusUpdReq*)[[[GridStatusUpdReq builder] mergeFromInputStream:input] build];
}
+ (GridStatusUpdReq*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (GridStatusUpdReq*)[[[GridStatusUpdReq builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (GridStatusUpdReq*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (GridStatusUpdReq*)[[[GridStatusUpdReq builder] mergeFromCodedInputStream:input] build];
}
+ (GridStatusUpdReq*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (GridStatusUpdReq*)[[[GridStatusUpdReq builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (GridStatusUpdReq_Builder*) builder {
  return [[[GridStatusUpdReq_Builder alloc] init] autorelease];
}
+ (GridStatusUpdReq_Builder*) builderWithPrototype:(GridStatusUpdReq*) prototype {
  return [[GridStatusUpdReq builder] mergeFrom:prototype];
}
- (GridStatusUpdReq_Builder*) builder {
  return [GridStatusUpdReq builder];
}
@end

@interface GridStatusUpdReq_Builder()
@property (retain) GridStatusUpdReq* result;
@end

@implementation GridStatusUpdReq_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[GridStatusUpdReq alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (GridStatusUpdReq_Builder*) clear {
  self.result = [[[GridStatusUpdReq alloc] init] autorelease];
  return self;
}
- (GridStatusUpdReq_Builder*) clone {
  return [GridStatusUpdReq builderWithPrototype:result];
}
- (GridStatusUpdReq*) defaultInstance {
  return [GridStatusUpdReq defaultInstance];
}
- (GridStatusUpdReq*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (GridStatusUpdReq*) buildPartial {
  GridStatusUpdReq* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (GridStatusUpdReq_Builder*) mergeFrom:(GridStatusUpdReq*) other {
  if (other == [GridStatusUpdReq defaultInstance]) {
    return self;
  }
  if (other.hasSid) {
    [self setSid:other.sid];
  }
  if (other.hasLoginId) {
    [self setLoginId:other.loginId];
  }
  if (other.hasGridId) {
    [self setGridId:other.gridId];
  }
  if (other.hasStatus) {
    [self setStatus:other.status];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (GridStatusUpdReq_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (GridStatusUpdReq_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setSid:[input readString]];
        break;
      }
      case 16: {
        [self setLoginId:[input readInt32]];
        break;
      }
      case 24: {
        [self setGridId:[input readInt32]];
        break;
      }
      case 32: {
        [self setStatus:[input readInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasSid {
  return result.hasSid;
}
- (NSString*) sid {
  return result.sid;
}
- (GridStatusUpdReq_Builder*) setSid:(NSString*) value {
  result.hasSid = YES;
  result.sid = value;
  return self;
}
- (GridStatusUpdReq_Builder*) clearSid {
  result.hasSid = NO;
  result.sid = @"";
  return self;
}
- (BOOL) hasLoginId {
  return result.hasLoginId;
}
- (int32_t) loginId {
  return result.loginId;
}
- (GridStatusUpdReq_Builder*) setLoginId:(int32_t) value {
  result.hasLoginId = YES;
  result.loginId = value;
  return self;
}
- (GridStatusUpdReq_Builder*) clearLoginId {
  result.hasLoginId = NO;
  result.loginId = 0;
  return self;
}
- (BOOL) hasGridId {
  return result.hasGridId;
}
- (int32_t) gridId {
  return result.gridId;
}
- (GridStatusUpdReq_Builder*) setGridId:(int32_t) value {
  result.hasGridId = YES;
  result.gridId = value;
  return self;
}
- (GridStatusUpdReq_Builder*) clearGridId {
  result.hasGridId = NO;
  result.gridId = 0;
  return self;
}
- (BOOL) hasStatus {
  return result.hasStatus;
}
- (int32_t) status {
  return result.status;
}
- (GridStatusUpdReq_Builder*) setStatus:(int32_t) value {
  result.hasStatus = YES;
  result.status = value;
  return self;
}
- (GridStatusUpdReq_Builder*) clearStatus {
  result.hasStatus = NO;
  result.status = 0;
  return self;
}
@end

@interface GridStatusUpdRes ()
@property int32_t retCode;
@property (retain) NSString* sid;
@property int32_t loginId;
@end

@implementation GridStatusUpdRes

- (BOOL) hasRetCode {
  return !!hasRetCode_;
}
- (void) setHasRetCode:(BOOL) value {
  hasRetCode_ = !!value;
}
@synthesize retCode;
- (BOOL) hasSid {
  return !!hasSid_;
}
- (void) setHasSid:(BOOL) value {
  hasSid_ = !!value;
}
@synthesize sid;
- (BOOL) hasLoginId {
  return !!hasLoginId_;
}
- (void) setHasLoginId:(BOOL) value {
  hasLoginId_ = !!value;
}
@synthesize loginId;
- (void) dealloc {
  self.sid = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.retCode = 0;
    self.sid = @"";
    self.loginId = 0;
  }
  return self;
}
static GridStatusUpdRes* defaultGridStatusUpdResInstance = nil;
+ (void) initialize {
  if (self == [GridStatusUpdRes class]) {
    defaultGridStatusUpdResInstance = [[GridStatusUpdRes alloc] init];
  }
}
+ (GridStatusUpdRes*) defaultInstance {
  return defaultGridStatusUpdResInstance;
}
- (GridStatusUpdRes*) defaultInstance {
  return defaultGridStatusUpdResInstance;
}
- (BOOL) isInitialized {
  if (!self.hasRetCode) {
    return NO;
  }
  if (!self.hasSid) {
    return NO;
  }
  if (!self.hasLoginId) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasRetCode) {
    [output writeInt32:1 value:self.retCode];
  }
  if (self.hasSid) {
    [output writeString:2 value:self.sid];
  }
  if (self.hasLoginId) {
    [output writeInt32:3 value:self.loginId];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasRetCode) {
    size += computeInt32Size(1, self.retCode);
  }
  if (self.hasSid) {
    size += computeStringSize(2, self.sid);
  }
  if (self.hasLoginId) {
    size += computeInt32Size(3, self.loginId);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (GridStatusUpdRes*) parseFromData:(NSData*) data {
  return (GridStatusUpdRes*)[[[GridStatusUpdRes builder] mergeFromData:data] build];
}
+ (GridStatusUpdRes*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (GridStatusUpdRes*)[[[GridStatusUpdRes builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (GridStatusUpdRes*) parseFromInputStream:(NSInputStream*) input {
  return (GridStatusUpdRes*)[[[GridStatusUpdRes builder] mergeFromInputStream:input] build];
}
+ (GridStatusUpdRes*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (GridStatusUpdRes*)[[[GridStatusUpdRes builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (GridStatusUpdRes*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (GridStatusUpdRes*)[[[GridStatusUpdRes builder] mergeFromCodedInputStream:input] build];
}
+ (GridStatusUpdRes*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (GridStatusUpdRes*)[[[GridStatusUpdRes builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (GridStatusUpdRes_Builder*) builder {
  return [[[GridStatusUpdRes_Builder alloc] init] autorelease];
}
+ (GridStatusUpdRes_Builder*) builderWithPrototype:(GridStatusUpdRes*) prototype {
  return [[GridStatusUpdRes builder] mergeFrom:prototype];
}
- (GridStatusUpdRes_Builder*) builder {
  return [GridStatusUpdRes builder];
}
@end

@interface GridStatusUpdRes_Builder()
@property (retain) GridStatusUpdRes* result;
@end

@implementation GridStatusUpdRes_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[GridStatusUpdRes alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (GridStatusUpdRes_Builder*) clear {
  self.result = [[[GridStatusUpdRes alloc] init] autorelease];
  return self;
}
- (GridStatusUpdRes_Builder*) clone {
  return [GridStatusUpdRes builderWithPrototype:result];
}
- (GridStatusUpdRes*) defaultInstance {
  return [GridStatusUpdRes defaultInstance];
}
- (GridStatusUpdRes*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (GridStatusUpdRes*) buildPartial {
  GridStatusUpdRes* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (GridStatusUpdRes_Builder*) mergeFrom:(GridStatusUpdRes*) other {
  if (other == [GridStatusUpdRes defaultInstance]) {
    return self;
  }
  if (other.hasRetCode) {
    [self setRetCode:other.retCode];
  }
  if (other.hasSid) {
    [self setSid:other.sid];
  }
  if (other.hasLoginId) {
    [self setLoginId:other.loginId];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (GridStatusUpdRes_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (GridStatusUpdRes_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setRetCode:[input readInt32]];
        break;
      }
      case 18: {
        [self setSid:[input readString]];
        break;
      }
      case 24: {
        [self setLoginId:[input readInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasRetCode {
  return result.hasRetCode;
}
- (int32_t) retCode {
  return result.retCode;
}
- (GridStatusUpdRes_Builder*) setRetCode:(int32_t) value {
  result.hasRetCode = YES;
  result.retCode = value;
  return self;
}
- (GridStatusUpdRes_Builder*) clearRetCode {
  result.hasRetCode = NO;
  result.retCode = 0;
  return self;
}
- (BOOL) hasSid {
  return result.hasSid;
}
- (NSString*) sid {
  return result.sid;
}
- (GridStatusUpdRes_Builder*) setSid:(NSString*) value {
  result.hasSid = YES;
  result.sid = value;
  return self;
}
- (GridStatusUpdRes_Builder*) clearSid {
  result.hasSid = NO;
  result.sid = @"";
  return self;
}
- (BOOL) hasLoginId {
  return result.hasLoginId;
}
- (int32_t) loginId {
  return result.loginId;
}
- (GridStatusUpdRes_Builder*) setLoginId:(int32_t) value {
  result.hasLoginId = YES;
  result.loginId = value;
  return self;
}
- (GridStatusUpdRes_Builder*) clearLoginId {
  result.hasLoginId = NO;
  result.loginId = 0;
  return self;
}
@end

@interface GridPwdValidateReq ()
@property (retain) NSString* sid;
@property int32_t loginId;
@property (retain) NSString* pwd;
@end

@implementation GridPwdValidateReq

- (BOOL) hasSid {
  return !!hasSid_;
}
- (void) setHasSid:(BOOL) value {
  hasSid_ = !!value;
}
@synthesize sid;
- (BOOL) hasLoginId {
  return !!hasLoginId_;
}
- (void) setHasLoginId:(BOOL) value {
  hasLoginId_ = !!value;
}
@synthesize loginId;
- (BOOL) hasPwd {
  return !!hasPwd_;
}
- (void) setHasPwd:(BOOL) value {
  hasPwd_ = !!value;
}
@synthesize pwd;
- (void) dealloc {
  self.sid = nil;
  self.pwd = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.sid = @"";
    self.loginId = 0;
    self.pwd = @"";
  }
  return self;
}
static GridPwdValidateReq* defaultGridPwdValidateReqInstance = nil;
+ (void) initialize {
  if (self == [GridPwdValidateReq class]) {
    defaultGridPwdValidateReqInstance = [[GridPwdValidateReq alloc] init];
  }
}
+ (GridPwdValidateReq*) defaultInstance {
  return defaultGridPwdValidateReqInstance;
}
- (GridPwdValidateReq*) defaultInstance {
  return defaultGridPwdValidateReqInstance;
}
- (BOOL) isInitialized {
  if (!self.hasSid) {
    return NO;
  }
  if (!self.hasLoginId) {
    return NO;
  }
  if (!self.hasPwd) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasSid) {
    [output writeString:1 value:self.sid];
  }
  if (self.hasLoginId) {
    [output writeInt32:2 value:self.loginId];
  }
  if (self.hasPwd) {
    [output writeString:3 value:self.pwd];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasSid) {
    size += computeStringSize(1, self.sid);
  }
  if (self.hasLoginId) {
    size += computeInt32Size(2, self.loginId);
  }
  if (self.hasPwd) {
    size += computeStringSize(3, self.pwd);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (GridPwdValidateReq*) parseFromData:(NSData*) data {
  return (GridPwdValidateReq*)[[[GridPwdValidateReq builder] mergeFromData:data] build];
}
+ (GridPwdValidateReq*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (GridPwdValidateReq*)[[[GridPwdValidateReq builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (GridPwdValidateReq*) parseFromInputStream:(NSInputStream*) input {
  return (GridPwdValidateReq*)[[[GridPwdValidateReq builder] mergeFromInputStream:input] build];
}
+ (GridPwdValidateReq*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (GridPwdValidateReq*)[[[GridPwdValidateReq builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (GridPwdValidateReq*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (GridPwdValidateReq*)[[[GridPwdValidateReq builder] mergeFromCodedInputStream:input] build];
}
+ (GridPwdValidateReq*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (GridPwdValidateReq*)[[[GridPwdValidateReq builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (GridPwdValidateReq_Builder*) builder {
  return [[[GridPwdValidateReq_Builder alloc] init] autorelease];
}
+ (GridPwdValidateReq_Builder*) builderWithPrototype:(GridPwdValidateReq*) prototype {
  return [[GridPwdValidateReq builder] mergeFrom:prototype];
}
- (GridPwdValidateReq_Builder*) builder {
  return [GridPwdValidateReq builder];
}
@end

@interface GridPwdValidateReq_Builder()
@property (retain) GridPwdValidateReq* result;
@end

@implementation GridPwdValidateReq_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[GridPwdValidateReq alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (GridPwdValidateReq_Builder*) clear {
  self.result = [[[GridPwdValidateReq alloc] init] autorelease];
  return self;
}
- (GridPwdValidateReq_Builder*) clone {
  return [GridPwdValidateReq builderWithPrototype:result];
}
- (GridPwdValidateReq*) defaultInstance {
  return [GridPwdValidateReq defaultInstance];
}
- (GridPwdValidateReq*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (GridPwdValidateReq*) buildPartial {
  GridPwdValidateReq* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (GridPwdValidateReq_Builder*) mergeFrom:(GridPwdValidateReq*) other {
  if (other == [GridPwdValidateReq defaultInstance]) {
    return self;
  }
  if (other.hasSid) {
    [self setSid:other.sid];
  }
  if (other.hasLoginId) {
    [self setLoginId:other.loginId];
  }
  if (other.hasPwd) {
    [self setPwd:other.pwd];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (GridPwdValidateReq_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (GridPwdValidateReq_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setSid:[input readString]];
        break;
      }
      case 16: {
        [self setLoginId:[input readInt32]];
        break;
      }
      case 26: {
        [self setPwd:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasSid {
  return result.hasSid;
}
- (NSString*) sid {
  return result.sid;
}
- (GridPwdValidateReq_Builder*) setSid:(NSString*) value {
  result.hasSid = YES;
  result.sid = value;
  return self;
}
- (GridPwdValidateReq_Builder*) clearSid {
  result.hasSid = NO;
  result.sid = @"";
  return self;
}
- (BOOL) hasLoginId {
  return result.hasLoginId;
}
- (int32_t) loginId {
  return result.loginId;
}
- (GridPwdValidateReq_Builder*) setLoginId:(int32_t) value {
  result.hasLoginId = YES;
  result.loginId = value;
  return self;
}
- (GridPwdValidateReq_Builder*) clearLoginId {
  result.hasLoginId = NO;
  result.loginId = 0;
  return self;
}
- (BOOL) hasPwd {
  return result.hasPwd;
}
- (NSString*) pwd {
  return result.pwd;
}
- (GridPwdValidateReq_Builder*) setPwd:(NSString*) value {
  result.hasPwd = YES;
  result.pwd = value;
  return self;
}
- (GridPwdValidateReq_Builder*) clearPwd {
  result.hasPwd = NO;
  result.pwd = @"";
  return self;
}
@end

@interface GridPwdValidateRes ()
@property int32_t retCode;
@property (retain) NSString* sid;
@property int32_t loginId;
@property int32_t isCorrect;
@property int32_t cubeId;
@end

@implementation GridPwdValidateRes

- (BOOL) hasRetCode {
  return !!hasRetCode_;
}
- (void) setHasRetCode:(BOOL) value {
  hasRetCode_ = !!value;
}
@synthesize retCode;
- (BOOL) hasSid {
  return !!hasSid_;
}
- (void) setHasSid:(BOOL) value {
  hasSid_ = !!value;
}
@synthesize sid;
- (BOOL) hasLoginId {
  return !!hasLoginId_;
}
- (void) setHasLoginId:(BOOL) value {
  hasLoginId_ = !!value;
}
@synthesize loginId;
- (BOOL) hasIsCorrect {
  return !!hasIsCorrect_;
}
- (void) setHasIsCorrect:(BOOL) value {
  hasIsCorrect_ = !!value;
}
@synthesize isCorrect;
- (BOOL) hasCubeId {
  return !!hasCubeId_;
}
- (void) setHasCubeId:(BOOL) value {
  hasCubeId_ = !!value;
}
@synthesize cubeId;
- (void) dealloc {
  self.sid = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.retCode = 0;
    self.sid = @"";
    self.loginId = 0;
    self.isCorrect = 0;
    self.cubeId = 0;
  }
  return self;
}
static GridPwdValidateRes* defaultGridPwdValidateResInstance = nil;
+ (void) initialize {
  if (self == [GridPwdValidateRes class]) {
    defaultGridPwdValidateResInstance = [[GridPwdValidateRes alloc] init];
  }
}
+ (GridPwdValidateRes*) defaultInstance {
  return defaultGridPwdValidateResInstance;
}
- (GridPwdValidateRes*) defaultInstance {
  return defaultGridPwdValidateResInstance;
}
- (BOOL) isInitialized {
  if (!self.hasRetCode) {
    return NO;
  }
  if (!self.hasSid) {
    return NO;
  }
  if (!self.hasLoginId) {
    return NO;
  }
  if (!self.hasIsCorrect) {
    return NO;
  }
  if (!self.hasCubeId) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasRetCode) {
    [output writeInt32:1 value:self.retCode];
  }
  if (self.hasSid) {
    [output writeString:2 value:self.sid];
  }
  if (self.hasLoginId) {
    [output writeInt32:3 value:self.loginId];
  }
  if (self.hasIsCorrect) {
    [output writeInt32:4 value:self.isCorrect];
  }
  if (self.hasCubeId) {
    [output writeInt32:5 value:self.cubeId];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasRetCode) {
    size += computeInt32Size(1, self.retCode);
  }
  if (self.hasSid) {
    size += computeStringSize(2, self.sid);
  }
  if (self.hasLoginId) {
    size += computeInt32Size(3, self.loginId);
  }
  if (self.hasIsCorrect) {
    size += computeInt32Size(4, self.isCorrect);
  }
  if (self.hasCubeId) {
    size += computeInt32Size(5, self.cubeId);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (GridPwdValidateRes*) parseFromData:(NSData*) data {
  return (GridPwdValidateRes*)[[[GridPwdValidateRes builder] mergeFromData:data] build];
}
+ (GridPwdValidateRes*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (GridPwdValidateRes*)[[[GridPwdValidateRes builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (GridPwdValidateRes*) parseFromInputStream:(NSInputStream*) input {
  return (GridPwdValidateRes*)[[[GridPwdValidateRes builder] mergeFromInputStream:input] build];
}
+ (GridPwdValidateRes*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (GridPwdValidateRes*)[[[GridPwdValidateRes builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (GridPwdValidateRes*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (GridPwdValidateRes*)[[[GridPwdValidateRes builder] mergeFromCodedInputStream:input] build];
}
+ (GridPwdValidateRes*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (GridPwdValidateRes*)[[[GridPwdValidateRes builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (GridPwdValidateRes_Builder*) builder {
  return [[[GridPwdValidateRes_Builder alloc] init] autorelease];
}
+ (GridPwdValidateRes_Builder*) builderWithPrototype:(GridPwdValidateRes*) prototype {
  return [[GridPwdValidateRes builder] mergeFrom:prototype];
}
- (GridPwdValidateRes_Builder*) builder {
  return [GridPwdValidateRes builder];
}
@end

@interface GridPwdValidateRes_Builder()
@property (retain) GridPwdValidateRes* result;
@end

@implementation GridPwdValidateRes_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[GridPwdValidateRes alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (GridPwdValidateRes_Builder*) clear {
  self.result = [[[GridPwdValidateRes alloc] init] autorelease];
  return self;
}
- (GridPwdValidateRes_Builder*) clone {
  return [GridPwdValidateRes builderWithPrototype:result];
}
- (GridPwdValidateRes*) defaultInstance {
  return [GridPwdValidateRes defaultInstance];
}
- (GridPwdValidateRes*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (GridPwdValidateRes*) buildPartial {
  GridPwdValidateRes* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (GridPwdValidateRes_Builder*) mergeFrom:(GridPwdValidateRes*) other {
  if (other == [GridPwdValidateRes defaultInstance]) {
    return self;
  }
  if (other.hasRetCode) {
    [self setRetCode:other.retCode];
  }
  if (other.hasSid) {
    [self setSid:other.sid];
  }
  if (other.hasLoginId) {
    [self setLoginId:other.loginId];
  }
  if (other.hasIsCorrect) {
    [self setIsCorrect:other.isCorrect];
  }
  if (other.hasCubeId) {
    [self setCubeId:other.cubeId];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (GridPwdValidateRes_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (GridPwdValidateRes_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setRetCode:[input readInt32]];
        break;
      }
      case 18: {
        [self setSid:[input readString]];
        break;
      }
      case 24: {
        [self setLoginId:[input readInt32]];
        break;
      }
      case 32: {
        [self setIsCorrect:[input readInt32]];
        break;
      }
      case 40: {
        [self setCubeId:[input readInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasRetCode {
  return result.hasRetCode;
}
- (int32_t) retCode {
  return result.retCode;
}
- (GridPwdValidateRes_Builder*) setRetCode:(int32_t) value {
  result.hasRetCode = YES;
  result.retCode = value;
  return self;
}
- (GridPwdValidateRes_Builder*) clearRetCode {
  result.hasRetCode = NO;
  result.retCode = 0;
  return self;
}
- (BOOL) hasSid {
  return result.hasSid;
}
- (NSString*) sid {
  return result.sid;
}
- (GridPwdValidateRes_Builder*) setSid:(NSString*) value {
  result.hasSid = YES;
  result.sid = value;
  return self;
}
- (GridPwdValidateRes_Builder*) clearSid {
  result.hasSid = NO;
  result.sid = @"";
  return self;
}
- (BOOL) hasLoginId {
  return result.hasLoginId;
}
- (int32_t) loginId {
  return result.loginId;
}
- (GridPwdValidateRes_Builder*) setLoginId:(int32_t) value {
  result.hasLoginId = YES;
  result.loginId = value;
  return self;
}
- (GridPwdValidateRes_Builder*) clearLoginId {
  result.hasLoginId = NO;
  result.loginId = 0;
  return self;
}
- (BOOL) hasIsCorrect {
  return result.hasIsCorrect;
}
- (int32_t) isCorrect {
  return result.isCorrect;
}
- (GridPwdValidateRes_Builder*) setIsCorrect:(int32_t) value {
  result.hasIsCorrect = YES;
  result.isCorrect = value;
  return self;
}
- (GridPwdValidateRes_Builder*) clearIsCorrect {
  result.hasIsCorrect = NO;
  result.isCorrect = 0;
  return self;
}
- (BOOL) hasCubeId {
  return result.hasCubeId;
}
- (int32_t) cubeId {
  return result.cubeId;
}
- (GridPwdValidateRes_Builder*) setCubeId:(int32_t) value {
  result.hasCubeId = YES;
  result.cubeId = value;
  return self;
}
- (GridPwdValidateRes_Builder*) clearCubeId {
  result.hasCubeId = NO;
  result.cubeId = 0;
  return self;
}
@end

@interface GridEncodeApplyReq ()
@property (retain) NSString* sid;
@property int32_t loginId;
@end

@implementation GridEncodeApplyReq

- (BOOL) hasSid {
  return !!hasSid_;
}
- (void) setHasSid:(BOOL) value {
  hasSid_ = !!value;
}
@synthesize sid;
- (BOOL) hasLoginId {
  return !!hasLoginId_;
}
- (void) setHasLoginId:(BOOL) value {
  hasLoginId_ = !!value;
}
@synthesize loginId;
- (void) dealloc {
  self.sid = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.sid = @"";
    self.loginId = 0;
  }
  return self;
}
static GridEncodeApplyReq* defaultGridEncodeApplyReqInstance = nil;
+ (void) initialize {
  if (self == [GridEncodeApplyReq class]) {
    defaultGridEncodeApplyReqInstance = [[GridEncodeApplyReq alloc] init];
  }
}
+ (GridEncodeApplyReq*) defaultInstance {
  return defaultGridEncodeApplyReqInstance;
}
- (GridEncodeApplyReq*) defaultInstance {
  return defaultGridEncodeApplyReqInstance;
}
- (BOOL) isInitialized {
  if (!self.hasSid) {
    return NO;
  }
  if (!self.hasLoginId) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasSid) {
    [output writeString:1 value:self.sid];
  }
  if (self.hasLoginId) {
    [output writeInt32:2 value:self.loginId];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasSid) {
    size += computeStringSize(1, self.sid);
  }
  if (self.hasLoginId) {
    size += computeInt32Size(2, self.loginId);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (GridEncodeApplyReq*) parseFromData:(NSData*) data {
  return (GridEncodeApplyReq*)[[[GridEncodeApplyReq builder] mergeFromData:data] build];
}
+ (GridEncodeApplyReq*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (GridEncodeApplyReq*)[[[GridEncodeApplyReq builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (GridEncodeApplyReq*) parseFromInputStream:(NSInputStream*) input {
  return (GridEncodeApplyReq*)[[[GridEncodeApplyReq builder] mergeFromInputStream:input] build];
}
+ (GridEncodeApplyReq*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (GridEncodeApplyReq*)[[[GridEncodeApplyReq builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (GridEncodeApplyReq*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (GridEncodeApplyReq*)[[[GridEncodeApplyReq builder] mergeFromCodedInputStream:input] build];
}
+ (GridEncodeApplyReq*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (GridEncodeApplyReq*)[[[GridEncodeApplyReq builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (GridEncodeApplyReq_Builder*) builder {
  return [[[GridEncodeApplyReq_Builder alloc] init] autorelease];
}
+ (GridEncodeApplyReq_Builder*) builderWithPrototype:(GridEncodeApplyReq*) prototype {
  return [[GridEncodeApplyReq builder] mergeFrom:prototype];
}
- (GridEncodeApplyReq_Builder*) builder {
  return [GridEncodeApplyReq builder];
}
@end

@interface GridEncodeApplyReq_Builder()
@property (retain) GridEncodeApplyReq* result;
@end

@implementation GridEncodeApplyReq_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[GridEncodeApplyReq alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (GridEncodeApplyReq_Builder*) clear {
  self.result = [[[GridEncodeApplyReq alloc] init] autorelease];
  return self;
}
- (GridEncodeApplyReq_Builder*) clone {
  return [GridEncodeApplyReq builderWithPrototype:result];
}
- (GridEncodeApplyReq*) defaultInstance {
  return [GridEncodeApplyReq defaultInstance];
}
- (GridEncodeApplyReq*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (GridEncodeApplyReq*) buildPartial {
  GridEncodeApplyReq* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (GridEncodeApplyReq_Builder*) mergeFrom:(GridEncodeApplyReq*) other {
  if (other == [GridEncodeApplyReq defaultInstance]) {
    return self;
  }
  if (other.hasSid) {
    [self setSid:other.sid];
  }
  if (other.hasLoginId) {
    [self setLoginId:other.loginId];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (GridEncodeApplyReq_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (GridEncodeApplyReq_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setSid:[input readString]];
        break;
      }
      case 16: {
        [self setLoginId:[input readInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasSid {
  return result.hasSid;
}
- (NSString*) sid {
  return result.sid;
}
- (GridEncodeApplyReq_Builder*) setSid:(NSString*) value {
  result.hasSid = YES;
  result.sid = value;
  return self;
}
- (GridEncodeApplyReq_Builder*) clearSid {
  result.hasSid = NO;
  result.sid = @"";
  return self;
}
- (BOOL) hasLoginId {
  return result.hasLoginId;
}
- (int32_t) loginId {
  return result.loginId;
}
- (GridEncodeApplyReq_Builder*) setLoginId:(int32_t) value {
  result.hasLoginId = YES;
  result.loginId = value;
  return self;
}
- (GridEncodeApplyReq_Builder*) clearLoginId {
  result.hasLoginId = NO;
  result.loginId = 0;
  return self;
}
@end

@interface GridEncodeApplyRes ()
@property int32_t retCode;
@property (retain) NSString* sid;
@property int32_t loginId;
@property int32_t gridId;
@end

@implementation GridEncodeApplyRes

- (BOOL) hasRetCode {
  return !!hasRetCode_;
}
- (void) setHasRetCode:(BOOL) value {
  hasRetCode_ = !!value;
}
@synthesize retCode;
- (BOOL) hasSid {
  return !!hasSid_;
}
- (void) setHasSid:(BOOL) value {
  hasSid_ = !!value;
}
@synthesize sid;
- (BOOL) hasLoginId {
  return !!hasLoginId_;
}
- (void) setHasLoginId:(BOOL) value {
  hasLoginId_ = !!value;
}
@synthesize loginId;
- (BOOL) hasGridId {
  return !!hasGridId_;
}
- (void) setHasGridId:(BOOL) value {
  hasGridId_ = !!value;
}
@synthesize gridId;
- (void) dealloc {
  self.sid = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.retCode = 0;
    self.sid = @"";
    self.loginId = 0;
    self.gridId = 0;
  }
  return self;
}
static GridEncodeApplyRes* defaultGridEncodeApplyResInstance = nil;
+ (void) initialize {
  if (self == [GridEncodeApplyRes class]) {
    defaultGridEncodeApplyResInstance = [[GridEncodeApplyRes alloc] init];
  }
}
+ (GridEncodeApplyRes*) defaultInstance {
  return defaultGridEncodeApplyResInstance;
}
- (GridEncodeApplyRes*) defaultInstance {
  return defaultGridEncodeApplyResInstance;
}
- (BOOL) isInitialized {
  if (!self.hasRetCode) {
    return NO;
  }
  if (!self.hasSid) {
    return NO;
  }
  if (!self.hasLoginId) {
    return NO;
  }
  if (!self.hasGridId) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasRetCode) {
    [output writeInt32:1 value:self.retCode];
  }
  if (self.hasSid) {
    [output writeString:2 value:self.sid];
  }
  if (self.hasLoginId) {
    [output writeInt32:3 value:self.loginId];
  }
  if (self.hasGridId) {
    [output writeInt32:4 value:self.gridId];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasRetCode) {
    size += computeInt32Size(1, self.retCode);
  }
  if (self.hasSid) {
    size += computeStringSize(2, self.sid);
  }
  if (self.hasLoginId) {
    size += computeInt32Size(3, self.loginId);
  }
  if (self.hasGridId) {
    size += computeInt32Size(4, self.gridId);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (GridEncodeApplyRes*) parseFromData:(NSData*) data {
  return (GridEncodeApplyRes*)[[[GridEncodeApplyRes builder] mergeFromData:data] build];
}
+ (GridEncodeApplyRes*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (GridEncodeApplyRes*)[[[GridEncodeApplyRes builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (GridEncodeApplyRes*) parseFromInputStream:(NSInputStream*) input {
  return (GridEncodeApplyRes*)[[[GridEncodeApplyRes builder] mergeFromInputStream:input] build];
}
+ (GridEncodeApplyRes*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (GridEncodeApplyRes*)[[[GridEncodeApplyRes builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (GridEncodeApplyRes*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (GridEncodeApplyRes*)[[[GridEncodeApplyRes builder] mergeFromCodedInputStream:input] build];
}
+ (GridEncodeApplyRes*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (GridEncodeApplyRes*)[[[GridEncodeApplyRes builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (GridEncodeApplyRes_Builder*) builder {
  return [[[GridEncodeApplyRes_Builder alloc] init] autorelease];
}
+ (GridEncodeApplyRes_Builder*) builderWithPrototype:(GridEncodeApplyRes*) prototype {
  return [[GridEncodeApplyRes builder] mergeFrom:prototype];
}
- (GridEncodeApplyRes_Builder*) builder {
  return [GridEncodeApplyRes builder];
}
@end

@interface GridEncodeApplyRes_Builder()
@property (retain) GridEncodeApplyRes* result;
@end

@implementation GridEncodeApplyRes_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[GridEncodeApplyRes alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (GridEncodeApplyRes_Builder*) clear {
  self.result = [[[GridEncodeApplyRes alloc] init] autorelease];
  return self;
}
- (GridEncodeApplyRes_Builder*) clone {
  return [GridEncodeApplyRes builderWithPrototype:result];
}
- (GridEncodeApplyRes*) defaultInstance {
  return [GridEncodeApplyRes defaultInstance];
}
- (GridEncodeApplyRes*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (GridEncodeApplyRes*) buildPartial {
  GridEncodeApplyRes* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (GridEncodeApplyRes_Builder*) mergeFrom:(GridEncodeApplyRes*) other {
  if (other == [GridEncodeApplyRes defaultInstance]) {
    return self;
  }
  if (other.hasRetCode) {
    [self setRetCode:other.retCode];
  }
  if (other.hasSid) {
    [self setSid:other.sid];
  }
  if (other.hasLoginId) {
    [self setLoginId:other.loginId];
  }
  if (other.hasGridId) {
    [self setGridId:other.gridId];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (GridEncodeApplyRes_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (GridEncodeApplyRes_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setRetCode:[input readInt32]];
        break;
      }
      case 18: {
        [self setSid:[input readString]];
        break;
      }
      case 24: {
        [self setLoginId:[input readInt32]];
        break;
      }
      case 32: {
        [self setGridId:[input readInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasRetCode {
  return result.hasRetCode;
}
- (int32_t) retCode {
  return result.retCode;
}
- (GridEncodeApplyRes_Builder*) setRetCode:(int32_t) value {
  result.hasRetCode = YES;
  result.retCode = value;
  return self;
}
- (GridEncodeApplyRes_Builder*) clearRetCode {
  result.hasRetCode = NO;
  result.retCode = 0;
  return self;
}
- (BOOL) hasSid {
  return result.hasSid;
}
- (NSString*) sid {
  return result.sid;
}
- (GridEncodeApplyRes_Builder*) setSid:(NSString*) value {
  result.hasSid = YES;
  result.sid = value;
  return self;
}
- (GridEncodeApplyRes_Builder*) clearSid {
  result.hasSid = NO;
  result.sid = @"";
  return self;
}
- (BOOL) hasLoginId {
  return result.hasLoginId;
}
- (int32_t) loginId {
  return result.loginId;
}
- (GridEncodeApplyRes_Builder*) setLoginId:(int32_t) value {
  result.hasLoginId = YES;
  result.loginId = value;
  return self;
}
- (GridEncodeApplyRes_Builder*) clearLoginId {
  result.hasLoginId = NO;
  result.loginId = 0;
  return self;
}
- (BOOL) hasGridId {
  return result.hasGridId;
}
- (int32_t) gridId {
  return result.gridId;
}
- (GridEncodeApplyRes_Builder*) setGridId:(int32_t) value {
  result.hasGridId = YES;
  result.gridId = value;
  return self;
}
- (GridEncodeApplyRes_Builder*) clearGridId {
  result.hasGridId = NO;
  result.gridId = 0;
  return self;
}
@end

@interface CenterCallGridNoticeReq ()
@property (retain) NSString* sid;
@property int32_t loginId;
@property int32_t gridId;
@property int32_t status;
@end

@implementation CenterCallGridNoticeReq

- (BOOL) hasSid {
  return !!hasSid_;
}
- (void) setHasSid:(BOOL) value {
  hasSid_ = !!value;
}
@synthesize sid;
- (BOOL) hasLoginId {
  return !!hasLoginId_;
}
- (void) setHasLoginId:(BOOL) value {
  hasLoginId_ = !!value;
}
@synthesize loginId;
- (BOOL) hasGridId {
  return !!hasGridId_;
}
- (void) setHasGridId:(BOOL) value {
  hasGridId_ = !!value;
}
@synthesize gridId;
- (BOOL) hasStatus {
  return !!hasStatus_;
}
- (void) setHasStatus:(BOOL) value {
  hasStatus_ = !!value;
}
@synthesize status;
- (void) dealloc {
  self.sid = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.sid = @"";
    self.loginId = 0;
    self.gridId = 0;
    self.status = 0;
  }
  return self;
}
static CenterCallGridNoticeReq* defaultCenterCallGridNoticeReqInstance = nil;
+ (void) initialize {
  if (self == [CenterCallGridNoticeReq class]) {
    defaultCenterCallGridNoticeReqInstance = [[CenterCallGridNoticeReq alloc] init];
  }
}
+ (CenterCallGridNoticeReq*) defaultInstance {
  return defaultCenterCallGridNoticeReqInstance;
}
- (CenterCallGridNoticeReq*) defaultInstance {
  return defaultCenterCallGridNoticeReqInstance;
}
- (BOOL) isInitialized {
  if (!self.hasSid) {
    return NO;
  }
  if (!self.hasLoginId) {
    return NO;
  }
  if (!self.hasGridId) {
    return NO;
  }
  if (!self.hasStatus) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasSid) {
    [output writeString:1 value:self.sid];
  }
  if (self.hasLoginId) {
    [output writeInt32:2 value:self.loginId];
  }
  if (self.hasGridId) {
    [output writeInt32:3 value:self.gridId];
  }
  if (self.hasStatus) {
    [output writeInt32:4 value:self.status];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasSid) {
    size += computeStringSize(1, self.sid);
  }
  if (self.hasLoginId) {
    size += computeInt32Size(2, self.loginId);
  }
  if (self.hasGridId) {
    size += computeInt32Size(3, self.gridId);
  }
  if (self.hasStatus) {
    size += computeInt32Size(4, self.status);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (CenterCallGridNoticeReq*) parseFromData:(NSData*) data {
  return (CenterCallGridNoticeReq*)[[[CenterCallGridNoticeReq builder] mergeFromData:data] build];
}
+ (CenterCallGridNoticeReq*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CenterCallGridNoticeReq*)[[[CenterCallGridNoticeReq builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (CenterCallGridNoticeReq*) parseFromInputStream:(NSInputStream*) input {
  return (CenterCallGridNoticeReq*)[[[CenterCallGridNoticeReq builder] mergeFromInputStream:input] build];
}
+ (CenterCallGridNoticeReq*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CenterCallGridNoticeReq*)[[[CenterCallGridNoticeReq builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CenterCallGridNoticeReq*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (CenterCallGridNoticeReq*)[[[CenterCallGridNoticeReq builder] mergeFromCodedInputStream:input] build];
}
+ (CenterCallGridNoticeReq*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CenterCallGridNoticeReq*)[[[CenterCallGridNoticeReq builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CenterCallGridNoticeReq_Builder*) builder {
  return [[[CenterCallGridNoticeReq_Builder alloc] init] autorelease];
}
+ (CenterCallGridNoticeReq_Builder*) builderWithPrototype:(CenterCallGridNoticeReq*) prototype {
  return [[CenterCallGridNoticeReq builder] mergeFrom:prototype];
}
- (CenterCallGridNoticeReq_Builder*) builder {
  return [CenterCallGridNoticeReq builder];
}
@end

@interface CenterCallGridNoticeReq_Builder()
@property (retain) CenterCallGridNoticeReq* result;
@end

@implementation CenterCallGridNoticeReq_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[CenterCallGridNoticeReq alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (CenterCallGridNoticeReq_Builder*) clear {
  self.result = [[[CenterCallGridNoticeReq alloc] init] autorelease];
  return self;
}
- (CenterCallGridNoticeReq_Builder*) clone {
  return [CenterCallGridNoticeReq builderWithPrototype:result];
}
- (CenterCallGridNoticeReq*) defaultInstance {
  return [CenterCallGridNoticeReq defaultInstance];
}
- (CenterCallGridNoticeReq*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (CenterCallGridNoticeReq*) buildPartial {
  CenterCallGridNoticeReq* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (CenterCallGridNoticeReq_Builder*) mergeFrom:(CenterCallGridNoticeReq*) other {
  if (other == [CenterCallGridNoticeReq defaultInstance]) {
    return self;
  }
  if (other.hasSid) {
    [self setSid:other.sid];
  }
  if (other.hasLoginId) {
    [self setLoginId:other.loginId];
  }
  if (other.hasGridId) {
    [self setGridId:other.gridId];
  }
  if (other.hasStatus) {
    [self setStatus:other.status];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (CenterCallGridNoticeReq_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (CenterCallGridNoticeReq_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setSid:[input readString]];
        break;
      }
      case 16: {
        [self setLoginId:[input readInt32]];
        break;
      }
      case 24: {
        [self setGridId:[input readInt32]];
        break;
      }
      case 32: {
        [self setStatus:[input readInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasSid {
  return result.hasSid;
}
- (NSString*) sid {
  return result.sid;
}
- (CenterCallGridNoticeReq_Builder*) setSid:(NSString*) value {
  result.hasSid = YES;
  result.sid = value;
  return self;
}
- (CenterCallGridNoticeReq_Builder*) clearSid {
  result.hasSid = NO;
  result.sid = @"";
  return self;
}
- (BOOL) hasLoginId {
  return result.hasLoginId;
}
- (int32_t) loginId {
  return result.loginId;
}
- (CenterCallGridNoticeReq_Builder*) setLoginId:(int32_t) value {
  result.hasLoginId = YES;
  result.loginId = value;
  return self;
}
- (CenterCallGridNoticeReq_Builder*) clearLoginId {
  result.hasLoginId = NO;
  result.loginId = 0;
  return self;
}
- (BOOL) hasGridId {
  return result.hasGridId;
}
- (int32_t) gridId {
  return result.gridId;
}
- (CenterCallGridNoticeReq_Builder*) setGridId:(int32_t) value {
  result.hasGridId = YES;
  result.gridId = value;
  return self;
}
- (CenterCallGridNoticeReq_Builder*) clearGridId {
  result.hasGridId = NO;
  result.gridId = 0;
  return self;
}
- (BOOL) hasStatus {
  return result.hasStatus;
}
- (int32_t) status {
  return result.status;
}
- (CenterCallGridNoticeReq_Builder*) setStatus:(int32_t) value {
  result.hasStatus = YES;
  result.status = value;
  return self;
}
- (CenterCallGridNoticeReq_Builder*) clearStatus {
  result.hasStatus = NO;
  result.status = 0;
  return self;
}
@end

@interface CenterCallGridNoticeRes ()
@property int32_t retCode;
@property (retain) NSString* sid;
@property int32_t loginId;
@end

@implementation CenterCallGridNoticeRes

- (BOOL) hasRetCode {
  return !!hasRetCode_;
}
- (void) setHasRetCode:(BOOL) value {
  hasRetCode_ = !!value;
}
@synthesize retCode;
- (BOOL) hasSid {
  return !!hasSid_;
}
- (void) setHasSid:(BOOL) value {
  hasSid_ = !!value;
}
@synthesize sid;
- (BOOL) hasLoginId {
  return !!hasLoginId_;
}
- (void) setHasLoginId:(BOOL) value {
  hasLoginId_ = !!value;
}
@synthesize loginId;
- (void) dealloc {
  self.sid = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.retCode = 0;
    self.sid = @"";
    self.loginId = 0;
  }
  return self;
}
static CenterCallGridNoticeRes* defaultCenterCallGridNoticeResInstance = nil;
+ (void) initialize {
  if (self == [CenterCallGridNoticeRes class]) {
    defaultCenterCallGridNoticeResInstance = [[CenterCallGridNoticeRes alloc] init];
  }
}
+ (CenterCallGridNoticeRes*) defaultInstance {
  return defaultCenterCallGridNoticeResInstance;
}
- (CenterCallGridNoticeRes*) defaultInstance {
  return defaultCenterCallGridNoticeResInstance;
}
- (BOOL) isInitialized {
  if (!self.hasRetCode) {
    return NO;
  }
  if (!self.hasSid) {
    return NO;
  }
  if (!self.hasLoginId) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasRetCode) {
    [output writeInt32:1 value:self.retCode];
  }
  if (self.hasSid) {
    [output writeString:2 value:self.sid];
  }
  if (self.hasLoginId) {
    [output writeInt32:3 value:self.loginId];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasRetCode) {
    size += computeInt32Size(1, self.retCode);
  }
  if (self.hasSid) {
    size += computeStringSize(2, self.sid);
  }
  if (self.hasLoginId) {
    size += computeInt32Size(3, self.loginId);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (CenterCallGridNoticeRes*) parseFromData:(NSData*) data {
  return (CenterCallGridNoticeRes*)[[[CenterCallGridNoticeRes builder] mergeFromData:data] build];
}
+ (CenterCallGridNoticeRes*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CenterCallGridNoticeRes*)[[[CenterCallGridNoticeRes builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (CenterCallGridNoticeRes*) parseFromInputStream:(NSInputStream*) input {
  return (CenterCallGridNoticeRes*)[[[CenterCallGridNoticeRes builder] mergeFromInputStream:input] build];
}
+ (CenterCallGridNoticeRes*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CenterCallGridNoticeRes*)[[[CenterCallGridNoticeRes builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CenterCallGridNoticeRes*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (CenterCallGridNoticeRes*)[[[CenterCallGridNoticeRes builder] mergeFromCodedInputStream:input] build];
}
+ (CenterCallGridNoticeRes*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CenterCallGridNoticeRes*)[[[CenterCallGridNoticeRes builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CenterCallGridNoticeRes_Builder*) builder {
  return [[[CenterCallGridNoticeRes_Builder alloc] init] autorelease];
}
+ (CenterCallGridNoticeRes_Builder*) builderWithPrototype:(CenterCallGridNoticeRes*) prototype {
  return [[CenterCallGridNoticeRes builder] mergeFrom:prototype];
}
- (CenterCallGridNoticeRes_Builder*) builder {
  return [CenterCallGridNoticeRes builder];
}
@end

@interface CenterCallGridNoticeRes_Builder()
@property (retain) CenterCallGridNoticeRes* result;
@end

@implementation CenterCallGridNoticeRes_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[CenterCallGridNoticeRes alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (CenterCallGridNoticeRes_Builder*) clear {
  self.result = [[[CenterCallGridNoticeRes alloc] init] autorelease];
  return self;
}
- (CenterCallGridNoticeRes_Builder*) clone {
  return [CenterCallGridNoticeRes builderWithPrototype:result];
}
- (CenterCallGridNoticeRes*) defaultInstance {
  return [CenterCallGridNoticeRes defaultInstance];
}
- (CenterCallGridNoticeRes*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (CenterCallGridNoticeRes*) buildPartial {
  CenterCallGridNoticeRes* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (CenterCallGridNoticeRes_Builder*) mergeFrom:(CenterCallGridNoticeRes*) other {
  if (other == [CenterCallGridNoticeRes defaultInstance]) {
    return self;
  }
  if (other.hasRetCode) {
    [self setRetCode:other.retCode];
  }
  if (other.hasSid) {
    [self setSid:other.sid];
  }
  if (other.hasLoginId) {
    [self setLoginId:other.loginId];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (CenterCallGridNoticeRes_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (CenterCallGridNoticeRes_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setRetCode:[input readInt32]];
        break;
      }
      case 18: {
        [self setSid:[input readString]];
        break;
      }
      case 24: {
        [self setLoginId:[input readInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasRetCode {
  return result.hasRetCode;
}
- (int32_t) retCode {
  return result.retCode;
}
- (CenterCallGridNoticeRes_Builder*) setRetCode:(int32_t) value {
  result.hasRetCode = YES;
  result.retCode = value;
  return self;
}
- (CenterCallGridNoticeRes_Builder*) clearRetCode {
  result.hasRetCode = NO;
  result.retCode = 0;
  return self;
}
- (BOOL) hasSid {
  return result.hasSid;
}
- (NSString*) sid {
  return result.sid;
}
- (CenterCallGridNoticeRes_Builder*) setSid:(NSString*) value {
  result.hasSid = YES;
  result.sid = value;
  return self;
}
- (CenterCallGridNoticeRes_Builder*) clearSid {
  result.hasSid = NO;
  result.sid = @"";
  return self;
}
- (BOOL) hasLoginId {
  return result.hasLoginId;
}
- (int32_t) loginId {
  return result.loginId;
}
- (CenterCallGridNoticeRes_Builder*) setLoginId:(int32_t) value {
  result.hasLoginId = YES;
  result.loginId = value;
  return self;
}
- (CenterCallGridNoticeRes_Builder*) clearLoginId {
  result.hasLoginId = NO;
  result.loginId = 0;
  return self;
}
@end

